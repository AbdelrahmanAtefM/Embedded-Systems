
DIO_Boody.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000243c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000243c  000024b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001ab8  00000000  00000000  000024b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000009f6  00000000  00000000  00003f70  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004966  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00004aa6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00004c16  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000685f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000774a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  000084f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008658  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  000088e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000090b3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e3       	ldi	r30, 0x3C	; 60
      68:	f4 e2       	ldi	r31, 0x24	; 36
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 52 10 	call	0x20a4	; 0x20a4 <main>
      7a:	0c 94 1c 12 	jmp	0x2438	; 0x2438 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 e5 11 	jmp	0x23ca	; 0x23ca <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 01 12 	jmp	0x2402	; 0x2402 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 f1 11 	jmp	0x23e2	; 0x23e2 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 0d 12 	jmp	0x241a	; 0x241a <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 f1 11 	jmp	0x23e2	; 0x23e2 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 0d 12 	jmp	0x241a	; 0x241a <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 e5 11 	jmp	0x23ca	; 0x23ca <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__stack+0x2f>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__stack+0x45>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__stack+0x1d>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__stack+0x2f>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__stack+0x25>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__stack+0x2b>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__stack+0x45>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__stack+0x1b7>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__stack+0x41>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__stack+0x1b7>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__stack+0x57>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__stack+0x1b7>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__stack+0xc3>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__stack+0xb7>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__stack+0xdf>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__stack+0xf9>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__stack+0x7f>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__stack+0x13d>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__stack+0x131>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__stack+0x10f>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__stack+0x15b>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__stack+0x143>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__stack+0x19d>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__stack+0x19d>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__stack+0x19d>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__stack+0x1a7>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 01 12 	jmp	0x2402	; 0x2402 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 f1 11 	jmp	0x23e2	; 0x23e2 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 0d 12 	jmp	0x241a	; 0x241a <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 f1 11 	jmp	0x23e2	; 0x23e2 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 0d 12 	jmp	0x241a	; 0x241a <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 f1 11 	jmp	0x23e2	; 0x23e2 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 0d 12 	jmp	0x241a	; 0x241a <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 f5 11 	jmp	0x23ea	; 0x23ea <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 11 12 	jmp	0x2422	; 0x2422 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__pack_f+0x178>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__pack_f+0x172>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__pack_f+0x17c>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__pack_f+0x114>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__pack_f+0x76>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__pack_f+0xca>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__pack_f+0x86>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__pack_f+0x7e>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__pack_f+0x9c>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__pack_f+0x94>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__pack_f+0xbe>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__pack_f+0xee>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__pack_f+0xf6>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__pack_f+0xf6>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__pack_f+0x10e>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__pack_f+0x162>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__pack_f+0x172>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__pack_f+0x144>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__pack_f+0x154>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__pack_f+0x14c>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__pack_f+0x162>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__pack_f+0x164>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__pack_f+0x17c>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <M_DIO_void_SetPinDirection>:
 */
#include "DIO_Int.h"

///  M_DIO_void_SetPinDirection takes 3 arguments PORT , PIN & DIRECTION
void M_DIO_void_SetPinDirection (u8 port , u8 pin , u8 direction)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	29 97       	sbiw	r28, 0x09	; 9
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	6a 83       	std	Y+2, r22	; 0x02
     b4e:	4b 83       	std	Y+3, r20	; 0x03
	//// SWITCH too determine the Direction of Pin
	switch (direction)
     b50:	8b 81       	ldd	r24, Y+3	; 0x03
     b52:	28 2f       	mov	r18, r24
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	39 87       	std	Y+9, r19	; 0x09
     b58:	28 87       	std	Y+8, r18	; 0x08
     b5a:	88 85       	ldd	r24, Y+8	; 0x08
     b5c:	99 85       	ldd	r25, Y+9	; 0x09
     b5e:	00 97       	sbiw	r24, 0x00	; 0
     b60:	39 f0       	breq	.+14     	; 0xb70 <M_DIO_void_SetPinDirection+0x3a>
     b62:	28 85       	ldd	r18, Y+8	; 0x08
     b64:	39 85       	ldd	r19, Y+9	; 0x09
     b66:	21 30       	cpi	r18, 0x01	; 1
     b68:	31 05       	cpc	r19, r1
     b6a:	09 f4       	brne	.+2      	; 0xb6e <M_DIO_void_SetPinDirection+0x38>
     b6c:	76 c0       	rjmp	.+236    	; 0xc5a <M_DIO_void_SetPinDirection+0x124>
     b6e:	e4 c0       	rjmp	.+456    	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
		{
	 /// case  INPUT means that the Direction of Pin  = 0
		 case INPUT :
			 //// SWITCH too determine the Port of the Pin
			 switch (port)
     b70:	89 81       	ldd	r24, Y+1	; 0x01
     b72:	28 2f       	mov	r18, r24
     b74:	30 e0       	ldi	r19, 0x00	; 0
     b76:	3f 83       	std	Y+7, r19	; 0x07
     b78:	2e 83       	std	Y+6, r18	; 0x06
     b7a:	8e 81       	ldd	r24, Y+6	; 0x06
     b7c:	9f 81       	ldd	r25, Y+7	; 0x07
     b7e:	82 30       	cpi	r24, 0x02	; 2
     b80:	91 05       	cpc	r25, r1
     b82:	61 f1       	breq	.+88     	; 0xbdc <M_DIO_void_SetPinDirection+0xa6>
     b84:	2e 81       	ldd	r18, Y+6	; 0x06
     b86:	3f 81       	ldd	r19, Y+7	; 0x07
     b88:	23 30       	cpi	r18, 0x03	; 3
     b8a:	31 05       	cpc	r19, r1
     b8c:	34 f4       	brge	.+12     	; 0xb9a <M_DIO_void_SetPinDirection+0x64>
     b8e:	8e 81       	ldd	r24, Y+6	; 0x06
     b90:	9f 81       	ldd	r25, Y+7	; 0x07
     b92:	81 30       	cpi	r24, 0x01	; 1
     b94:	91 05       	cpc	r25, r1
     b96:	69 f0       	breq	.+26     	; 0xbb2 <M_DIO_void_SetPinDirection+0x7c>
     b98:	cf c0       	rjmp	.+414    	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
     b9a:	2e 81       	ldd	r18, Y+6	; 0x06
     b9c:	3f 81       	ldd	r19, Y+7	; 0x07
     b9e:	23 30       	cpi	r18, 0x03	; 3
     ba0:	31 05       	cpc	r19, r1
     ba2:	89 f1       	breq	.+98     	; 0xc06 <M_DIO_void_SetPinDirection+0xd0>
     ba4:	8e 81       	ldd	r24, Y+6	; 0x06
     ba6:	9f 81       	ldd	r25, Y+7	; 0x07
     ba8:	84 30       	cpi	r24, 0x04	; 4
     baa:	91 05       	cpc	r25, r1
     bac:	09 f4       	brne	.+2      	; 0xbb0 <M_DIO_void_SetPinDirection+0x7a>
     bae:	40 c0       	rjmp	.+128    	; 0xc30 <M_DIO_void_SetPinDirection+0xfa>
     bb0:	c3 c0       	rjmp	.+390    	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
			 	{
			 	case PORTA_ID :                        /// Port A
			 		ClrBit(DDRA,pin);                  /// clear pin value set it to 0
     bb2:	aa e3       	ldi	r26, 0x3A	; 58
     bb4:	b0 e0       	ldi	r27, 0x00	; 0
     bb6:	ea e3       	ldi	r30, 0x3A	; 58
     bb8:	f0 e0       	ldi	r31, 0x00	; 0
     bba:	80 81       	ld	r24, Z
     bbc:	48 2f       	mov	r20, r24
     bbe:	8a 81       	ldd	r24, Y+2	; 0x02
     bc0:	28 2f       	mov	r18, r24
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	81 e0       	ldi	r24, 0x01	; 1
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	02 2e       	mov	r0, r18
     bca:	02 c0       	rjmp	.+4      	; 0xbd0 <M_DIO_void_SetPinDirection+0x9a>
     bcc:	88 0f       	add	r24, r24
     bce:	99 1f       	adc	r25, r25
     bd0:	0a 94       	dec	r0
     bd2:	e2 f7       	brpl	.-8      	; 0xbcc <M_DIO_void_SetPinDirection+0x96>
     bd4:	80 95       	com	r24
     bd6:	84 23       	and	r24, r20
     bd8:	8c 93       	st	X, r24
     bda:	ae c0       	rjmp	.+348    	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
				break ;
			 	case PORTB_ID :                        /// Port B
			 		ClrBit(DDRB,pin);                 /// clear pin value set it to 0
     bdc:	a7 e3       	ldi	r26, 0x37	; 55
     bde:	b0 e0       	ldi	r27, 0x00	; 0
     be0:	e7 e3       	ldi	r30, 0x37	; 55
     be2:	f0 e0       	ldi	r31, 0x00	; 0
     be4:	80 81       	ld	r24, Z
     be6:	48 2f       	mov	r20, r24
     be8:	8a 81       	ldd	r24, Y+2	; 0x02
     bea:	28 2f       	mov	r18, r24
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	81 e0       	ldi	r24, 0x01	; 1
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	02 2e       	mov	r0, r18
     bf4:	02 c0       	rjmp	.+4      	; 0xbfa <M_DIO_void_SetPinDirection+0xc4>
     bf6:	88 0f       	add	r24, r24
     bf8:	99 1f       	adc	r25, r25
     bfa:	0a 94       	dec	r0
     bfc:	e2 f7       	brpl	.-8      	; 0xbf6 <M_DIO_void_SetPinDirection+0xc0>
     bfe:	80 95       	com	r24
     c00:	84 23       	and	r24, r20
     c02:	8c 93       	st	X, r24
     c04:	99 c0       	rjmp	.+306    	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
			 	break ;
			 	case PORTC_ID :                       /// Port C
			 		ClrBit(DDRC,pin);                /// clear pin value set it to 0
     c06:	a4 e3       	ldi	r26, 0x34	; 52
     c08:	b0 e0       	ldi	r27, 0x00	; 0
     c0a:	e4 e3       	ldi	r30, 0x34	; 52
     c0c:	f0 e0       	ldi	r31, 0x00	; 0
     c0e:	80 81       	ld	r24, Z
     c10:	48 2f       	mov	r20, r24
     c12:	8a 81       	ldd	r24, Y+2	; 0x02
     c14:	28 2f       	mov	r18, r24
     c16:	30 e0       	ldi	r19, 0x00	; 0
     c18:	81 e0       	ldi	r24, 0x01	; 1
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	02 2e       	mov	r0, r18
     c1e:	02 c0       	rjmp	.+4      	; 0xc24 <M_DIO_void_SetPinDirection+0xee>
     c20:	88 0f       	add	r24, r24
     c22:	99 1f       	adc	r25, r25
     c24:	0a 94       	dec	r0
     c26:	e2 f7       	brpl	.-8      	; 0xc20 <M_DIO_void_SetPinDirection+0xea>
     c28:	80 95       	com	r24
     c2a:	84 23       	and	r24, r20
     c2c:	8c 93       	st	X, r24
     c2e:	84 c0       	rjmp	.+264    	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
			 	break ;
			 	case PORTD_ID :                       /// Port D
			 		ClrBit(DDRD,pin);                /// clear pin value set it to 0
     c30:	a1 e3       	ldi	r26, 0x31	; 49
     c32:	b0 e0       	ldi	r27, 0x00	; 0
     c34:	e1 e3       	ldi	r30, 0x31	; 49
     c36:	f0 e0       	ldi	r31, 0x00	; 0
     c38:	80 81       	ld	r24, Z
     c3a:	48 2f       	mov	r20, r24
     c3c:	8a 81       	ldd	r24, Y+2	; 0x02
     c3e:	28 2f       	mov	r18, r24
     c40:	30 e0       	ldi	r19, 0x00	; 0
     c42:	81 e0       	ldi	r24, 0x01	; 1
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	02 2e       	mov	r0, r18
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <M_DIO_void_SetPinDirection+0x118>
     c4a:	88 0f       	add	r24, r24
     c4c:	99 1f       	adc	r25, r25
     c4e:	0a 94       	dec	r0
     c50:	e2 f7       	brpl	.-8      	; 0xc4a <M_DIO_void_SetPinDirection+0x114>
     c52:	80 95       	com	r24
     c54:	84 23       	and	r24, r20
     c56:	8c 93       	st	X, r24
     c58:	6f c0       	rjmp	.+222    	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
		break;        /////// break case INPUT

		/// case  INPUT means that the Direction of Pin = 1
		 case OUTPUT :
			 //// SWITCH too determine the Port of the Pin
			 switch (port)
     c5a:	89 81       	ldd	r24, Y+1	; 0x01
     c5c:	28 2f       	mov	r18, r24
     c5e:	30 e0       	ldi	r19, 0x00	; 0
     c60:	3d 83       	std	Y+5, r19	; 0x05
     c62:	2c 83       	std	Y+4, r18	; 0x04
     c64:	8c 81       	ldd	r24, Y+4	; 0x04
     c66:	9d 81       	ldd	r25, Y+5	; 0x05
     c68:	82 30       	cpi	r24, 0x02	; 2
     c6a:	91 05       	cpc	r25, r1
     c6c:	51 f1       	breq	.+84     	; 0xcc2 <M_DIO_void_SetPinDirection+0x18c>
     c6e:	2c 81       	ldd	r18, Y+4	; 0x04
     c70:	3d 81       	ldd	r19, Y+5	; 0x05
     c72:	23 30       	cpi	r18, 0x03	; 3
     c74:	31 05       	cpc	r19, r1
     c76:	34 f4       	brge	.+12     	; 0xc84 <M_DIO_void_SetPinDirection+0x14e>
     c78:	8c 81       	ldd	r24, Y+4	; 0x04
     c7a:	9d 81       	ldd	r25, Y+5	; 0x05
     c7c:	81 30       	cpi	r24, 0x01	; 1
     c7e:	91 05       	cpc	r25, r1
     c80:	61 f0       	breq	.+24     	; 0xc9a <M_DIO_void_SetPinDirection+0x164>
     c82:	5a c0       	rjmp	.+180    	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
     c84:	2c 81       	ldd	r18, Y+4	; 0x04
     c86:	3d 81       	ldd	r19, Y+5	; 0x05
     c88:	23 30       	cpi	r18, 0x03	; 3
     c8a:	31 05       	cpc	r19, r1
     c8c:	71 f1       	breq	.+92     	; 0xcea <M_DIO_void_SetPinDirection+0x1b4>
     c8e:	8c 81       	ldd	r24, Y+4	; 0x04
     c90:	9d 81       	ldd	r25, Y+5	; 0x05
     c92:	84 30       	cpi	r24, 0x04	; 4
     c94:	91 05       	cpc	r25, r1
     c96:	e9 f1       	breq	.+122    	; 0xd12 <M_DIO_void_SetPinDirection+0x1dc>
     c98:	4f c0       	rjmp	.+158    	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
			 	{
			 	case PORTA_ID :                   /// Port A
			 		SetBit(DDRA,pin);             /// SET pin value set it to 1
     c9a:	aa e3       	ldi	r26, 0x3A	; 58
     c9c:	b0 e0       	ldi	r27, 0x00	; 0
     c9e:	ea e3       	ldi	r30, 0x3A	; 58
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	80 81       	ld	r24, Z
     ca4:	48 2f       	mov	r20, r24
     ca6:	8a 81       	ldd	r24, Y+2	; 0x02
     ca8:	28 2f       	mov	r18, r24
     caa:	30 e0       	ldi	r19, 0x00	; 0
     cac:	81 e0       	ldi	r24, 0x01	; 1
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	02 2e       	mov	r0, r18
     cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <M_DIO_void_SetPinDirection+0x182>
     cb4:	88 0f       	add	r24, r24
     cb6:	99 1f       	adc	r25, r25
     cb8:	0a 94       	dec	r0
     cba:	e2 f7       	brpl	.-8      	; 0xcb4 <M_DIO_void_SetPinDirection+0x17e>
     cbc:	84 2b       	or	r24, r20
     cbe:	8c 93       	st	X, r24
     cc0:	3b c0       	rjmp	.+118    	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
			 	break ;       /////// break case PORTA_ID

			 	case PORTB_ID :                  /// Port B
			 		SetBit(DDRB,pin);           /// SET pin value set it to 1
     cc2:	a7 e3       	ldi	r26, 0x37	; 55
     cc4:	b0 e0       	ldi	r27, 0x00	; 0
     cc6:	e7 e3       	ldi	r30, 0x37	; 55
     cc8:	f0 e0       	ldi	r31, 0x00	; 0
     cca:	80 81       	ld	r24, Z
     ccc:	48 2f       	mov	r20, r24
     cce:	8a 81       	ldd	r24, Y+2	; 0x02
     cd0:	28 2f       	mov	r18, r24
     cd2:	30 e0       	ldi	r19, 0x00	; 0
     cd4:	81 e0       	ldi	r24, 0x01	; 1
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	02 2e       	mov	r0, r18
     cda:	02 c0       	rjmp	.+4      	; 0xce0 <M_DIO_void_SetPinDirection+0x1aa>
     cdc:	88 0f       	add	r24, r24
     cde:	99 1f       	adc	r25, r25
     ce0:	0a 94       	dec	r0
     ce2:	e2 f7       	brpl	.-8      	; 0xcdc <M_DIO_void_SetPinDirection+0x1a6>
     ce4:	84 2b       	or	r24, r20
     ce6:	8c 93       	st	X, r24
     ce8:	27 c0       	rjmp	.+78     	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
			 	break ;       /////// break case PORTB_ID

			 	case PORTC_ID :                  /// Port C
			 		SetBit(DDRC,pin);            /// SET pin value set it to 1
     cea:	a4 e3       	ldi	r26, 0x34	; 52
     cec:	b0 e0       	ldi	r27, 0x00	; 0
     cee:	e4 e3       	ldi	r30, 0x34	; 52
     cf0:	f0 e0       	ldi	r31, 0x00	; 0
     cf2:	80 81       	ld	r24, Z
     cf4:	48 2f       	mov	r20, r24
     cf6:	8a 81       	ldd	r24, Y+2	; 0x02
     cf8:	28 2f       	mov	r18, r24
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	02 2e       	mov	r0, r18
     d02:	02 c0       	rjmp	.+4      	; 0xd08 <M_DIO_void_SetPinDirection+0x1d2>
     d04:	88 0f       	add	r24, r24
     d06:	99 1f       	adc	r25, r25
     d08:	0a 94       	dec	r0
     d0a:	e2 f7       	brpl	.-8      	; 0xd04 <M_DIO_void_SetPinDirection+0x1ce>
     d0c:	84 2b       	or	r24, r20
     d0e:	8c 93       	st	X, r24
     d10:	13 c0       	rjmp	.+38     	; 0xd38 <M_DIO_void_SetPinDirection+0x202>
			 	break ;        /////// break case PORTC_ID

			 	case PORTD_ID :                  /// Port D
			 		SetBit(DDRD,pin);           /// SET pin value set it to 1
     d12:	a1 e3       	ldi	r26, 0x31	; 49
     d14:	b0 e0       	ldi	r27, 0x00	; 0
     d16:	e1 e3       	ldi	r30, 0x31	; 49
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	80 81       	ld	r24, Z
     d1c:	48 2f       	mov	r20, r24
     d1e:	8a 81       	ldd	r24, Y+2	; 0x02
     d20:	28 2f       	mov	r18, r24
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	81 e0       	ldi	r24, 0x01	; 1
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	02 2e       	mov	r0, r18
     d2a:	02 c0       	rjmp	.+4      	; 0xd30 <M_DIO_void_SetPinDirection+0x1fa>
     d2c:	88 0f       	add	r24, r24
     d2e:	99 1f       	adc	r25, r25
     d30:	0a 94       	dec	r0
     d32:	e2 f7       	brpl	.-8      	; 0xd2c <M_DIO_void_SetPinDirection+0x1f6>
     d34:	84 2b       	or	r24, r20
     d36:	8c 93       	st	X, r24

		 default:       /*  Do nothing */        break;
		       ///* default of switch (direction) */
		}

}
     d38:	29 96       	adiw	r28, 0x09	; 9
     d3a:	0f b6       	in	r0, 0x3f	; 63
     d3c:	f8 94       	cli
     d3e:	de bf       	out	0x3e, r29	; 62
     d40:	0f be       	out	0x3f, r0	; 63
     d42:	cd bf       	out	0x3d, r28	; 61
     d44:	cf 91       	pop	r28
     d46:	df 91       	pop	r29
     d48:	08 95       	ret

00000d4a <M_DIO_void_SetPinValue>:



void M_DIO_void_SetPinValue(u8 port , u8 pin , u8 value)
{
     d4a:	df 93       	push	r29
     d4c:	cf 93       	push	r28
     d4e:	cd b7       	in	r28, 0x3d	; 61
     d50:	de b7       	in	r29, 0x3e	; 62
     d52:	29 97       	sbiw	r28, 0x09	; 9
     d54:	0f b6       	in	r0, 0x3f	; 63
     d56:	f8 94       	cli
     d58:	de bf       	out	0x3e, r29	; 62
     d5a:	0f be       	out	0x3f, r0	; 63
     d5c:	cd bf       	out	0x3d, r28	; 61
     d5e:	89 83       	std	Y+1, r24	; 0x01
     d60:	6a 83       	std	Y+2, r22	; 0x02
     d62:	4b 83       	std	Y+3, r20	; 0x03
	  /// SWITCH too determine the Value of the Pin
		switch (value)
     d64:	8b 81       	ldd	r24, Y+3	; 0x03
     d66:	28 2f       	mov	r18, r24
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	39 87       	std	Y+9, r19	; 0x09
     d6c:	28 87       	std	Y+8, r18	; 0x08
     d6e:	88 85       	ldd	r24, Y+8	; 0x08
     d70:	99 85       	ldd	r25, Y+9	; 0x09
     d72:	00 97       	sbiw	r24, 0x00	; 0
     d74:	39 f0       	breq	.+14     	; 0xd84 <M_DIO_void_SetPinValue+0x3a>
     d76:	28 85       	ldd	r18, Y+8	; 0x08
     d78:	39 85       	ldd	r19, Y+9	; 0x09
     d7a:	21 30       	cpi	r18, 0x01	; 1
     d7c:	31 05       	cpc	r19, r1
     d7e:	09 f4       	brne	.+2      	; 0xd82 <M_DIO_void_SetPinValue+0x38>
     d80:	76 c0       	rjmp	.+236    	; 0xe6e <M_DIO_void_SetPinValue+0x124>
     d82:	e4 c0       	rjmp	.+456    	; 0xf4c <M_DIO_void_SetPinValue+0x202>
		{
		   /// case  LOW means that the Value of Pin = 0
          case LOW :
        	  //// SWITCH too determine the Port of the Pin
			       switch (port)
     d84:	89 81       	ldd	r24, Y+1	; 0x01
     d86:	28 2f       	mov	r18, r24
     d88:	30 e0       	ldi	r19, 0x00	; 0
     d8a:	3f 83       	std	Y+7, r19	; 0x07
     d8c:	2e 83       	std	Y+6, r18	; 0x06
     d8e:	8e 81       	ldd	r24, Y+6	; 0x06
     d90:	9f 81       	ldd	r25, Y+7	; 0x07
     d92:	82 30       	cpi	r24, 0x02	; 2
     d94:	91 05       	cpc	r25, r1
     d96:	61 f1       	breq	.+88     	; 0xdf0 <M_DIO_void_SetPinValue+0xa6>
     d98:	2e 81       	ldd	r18, Y+6	; 0x06
     d9a:	3f 81       	ldd	r19, Y+7	; 0x07
     d9c:	23 30       	cpi	r18, 0x03	; 3
     d9e:	31 05       	cpc	r19, r1
     da0:	34 f4       	brge	.+12     	; 0xdae <M_DIO_void_SetPinValue+0x64>
     da2:	8e 81       	ldd	r24, Y+6	; 0x06
     da4:	9f 81       	ldd	r25, Y+7	; 0x07
     da6:	81 30       	cpi	r24, 0x01	; 1
     da8:	91 05       	cpc	r25, r1
     daa:	69 f0       	breq	.+26     	; 0xdc6 <M_DIO_void_SetPinValue+0x7c>
     dac:	cf c0       	rjmp	.+414    	; 0xf4c <M_DIO_void_SetPinValue+0x202>
     dae:	2e 81       	ldd	r18, Y+6	; 0x06
     db0:	3f 81       	ldd	r19, Y+7	; 0x07
     db2:	23 30       	cpi	r18, 0x03	; 3
     db4:	31 05       	cpc	r19, r1
     db6:	89 f1       	breq	.+98     	; 0xe1a <M_DIO_void_SetPinValue+0xd0>
     db8:	8e 81       	ldd	r24, Y+6	; 0x06
     dba:	9f 81       	ldd	r25, Y+7	; 0x07
     dbc:	84 30       	cpi	r24, 0x04	; 4
     dbe:	91 05       	cpc	r25, r1
     dc0:	09 f4       	brne	.+2      	; 0xdc4 <M_DIO_void_SetPinValue+0x7a>
     dc2:	40 c0       	rjmp	.+128    	; 0xe44 <M_DIO_void_SetPinValue+0xfa>
     dc4:	c3 c0       	rjmp	.+390    	; 0xf4c <M_DIO_void_SetPinValue+0x202>
			       	{
			       	case PORTA_ID :                  /// Port A
			       		ClrBit(PORTA,pin);          ///  clear pin value set it to 0
     dc6:	ab e3       	ldi	r26, 0x3B	; 59
     dc8:	b0 e0       	ldi	r27, 0x00	; 0
     dca:	eb e3       	ldi	r30, 0x3B	; 59
     dcc:	f0 e0       	ldi	r31, 0x00	; 0
     dce:	80 81       	ld	r24, Z
     dd0:	48 2f       	mov	r20, r24
     dd2:	8a 81       	ldd	r24, Y+2	; 0x02
     dd4:	28 2f       	mov	r18, r24
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	81 e0       	ldi	r24, 0x01	; 1
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	02 2e       	mov	r0, r18
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <M_DIO_void_SetPinValue+0x9a>
     de0:	88 0f       	add	r24, r24
     de2:	99 1f       	adc	r25, r25
     de4:	0a 94       	dec	r0
     de6:	e2 f7       	brpl	.-8      	; 0xde0 <M_DIO_void_SetPinValue+0x96>
     de8:	80 95       	com	r24
     dea:	84 23       	and	r24, r20
     dec:	8c 93       	st	X, r24
     dee:	ae c0       	rjmp	.+348    	; 0xf4c <M_DIO_void_SetPinValue+0x202>
			       	break ;             /////// break case PORTA_ID

			       	case PORTB_ID :                 /// Port B
			       		ClrBit(PORTB,pin);          /// clear pin value set it to 0
     df0:	a8 e3       	ldi	r26, 0x38	; 56
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	e8 e3       	ldi	r30, 0x38	; 56
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	80 81       	ld	r24, Z
     dfa:	48 2f       	mov	r20, r24
     dfc:	8a 81       	ldd	r24, Y+2	; 0x02
     dfe:	28 2f       	mov	r18, r24
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	02 2e       	mov	r0, r18
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <M_DIO_void_SetPinValue+0xc4>
     e0a:	88 0f       	add	r24, r24
     e0c:	99 1f       	adc	r25, r25
     e0e:	0a 94       	dec	r0
     e10:	e2 f7       	brpl	.-8      	; 0xe0a <M_DIO_void_SetPinValue+0xc0>
     e12:	80 95       	com	r24
     e14:	84 23       	and	r24, r20
     e16:	8c 93       	st	X, r24
     e18:	99 c0       	rjmp	.+306    	; 0xf4c <M_DIO_void_SetPinValue+0x202>
			       	break ;          /////// break case PORTB_ID

			       	case PORTC_ID :                 /// Port C
			       		ClrBit(PORTC,pin);          /// clear pin value set it to 0
     e1a:	a5 e3       	ldi	r26, 0x35	; 53
     e1c:	b0 e0       	ldi	r27, 0x00	; 0
     e1e:	e5 e3       	ldi	r30, 0x35	; 53
     e20:	f0 e0       	ldi	r31, 0x00	; 0
     e22:	80 81       	ld	r24, Z
     e24:	48 2f       	mov	r20, r24
     e26:	8a 81       	ldd	r24, Y+2	; 0x02
     e28:	28 2f       	mov	r18, r24
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	81 e0       	ldi	r24, 0x01	; 1
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	02 2e       	mov	r0, r18
     e32:	02 c0       	rjmp	.+4      	; 0xe38 <M_DIO_void_SetPinValue+0xee>
     e34:	88 0f       	add	r24, r24
     e36:	99 1f       	adc	r25, r25
     e38:	0a 94       	dec	r0
     e3a:	e2 f7       	brpl	.-8      	; 0xe34 <M_DIO_void_SetPinValue+0xea>
     e3c:	80 95       	com	r24
     e3e:	84 23       	and	r24, r20
     e40:	8c 93       	st	X, r24
     e42:	84 c0       	rjmp	.+264    	; 0xf4c <M_DIO_void_SetPinValue+0x202>
			       	break ;         /////// break case PORTC_ID

			       	case PORTD_ID :                 /// Port D
			       		ClrBit(PORTD,pin);         /// clear pin value set it to 0
     e44:	a2 e3       	ldi	r26, 0x32	; 50
     e46:	b0 e0       	ldi	r27, 0x00	; 0
     e48:	e2 e3       	ldi	r30, 0x32	; 50
     e4a:	f0 e0       	ldi	r31, 0x00	; 0
     e4c:	80 81       	ld	r24, Z
     e4e:	48 2f       	mov	r20, r24
     e50:	8a 81       	ldd	r24, Y+2	; 0x02
     e52:	28 2f       	mov	r18, r24
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	02 2e       	mov	r0, r18
     e5c:	02 c0       	rjmp	.+4      	; 0xe62 <M_DIO_void_SetPinValue+0x118>
     e5e:	88 0f       	add	r24, r24
     e60:	99 1f       	adc	r25, r25
     e62:	0a 94       	dec	r0
     e64:	e2 f7       	brpl	.-8      	; 0xe5e <M_DIO_void_SetPinValue+0x114>
     e66:	80 95       	com	r24
     e68:	84 23       	and	r24, r20
     e6a:	8c 93       	st	X, r24
     e6c:	6f c0       	rjmp	.+222    	; 0xf4c <M_DIO_void_SetPinValue+0x202>
		 break;   /////// break case LOW

		 /// case  HIGH means that the Value of Pin = 1
		 case HIGH :
			 //// SWITCH too determine the Port of the Pin
			        switch (port)
     e6e:	89 81       	ldd	r24, Y+1	; 0x01
     e70:	28 2f       	mov	r18, r24
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	3d 83       	std	Y+5, r19	; 0x05
     e76:	2c 83       	std	Y+4, r18	; 0x04
     e78:	8c 81       	ldd	r24, Y+4	; 0x04
     e7a:	9d 81       	ldd	r25, Y+5	; 0x05
     e7c:	82 30       	cpi	r24, 0x02	; 2
     e7e:	91 05       	cpc	r25, r1
     e80:	51 f1       	breq	.+84     	; 0xed6 <M_DIO_void_SetPinValue+0x18c>
     e82:	2c 81       	ldd	r18, Y+4	; 0x04
     e84:	3d 81       	ldd	r19, Y+5	; 0x05
     e86:	23 30       	cpi	r18, 0x03	; 3
     e88:	31 05       	cpc	r19, r1
     e8a:	34 f4       	brge	.+12     	; 0xe98 <M_DIO_void_SetPinValue+0x14e>
     e8c:	8c 81       	ldd	r24, Y+4	; 0x04
     e8e:	9d 81       	ldd	r25, Y+5	; 0x05
     e90:	81 30       	cpi	r24, 0x01	; 1
     e92:	91 05       	cpc	r25, r1
     e94:	61 f0       	breq	.+24     	; 0xeae <M_DIO_void_SetPinValue+0x164>
     e96:	5a c0       	rjmp	.+180    	; 0xf4c <M_DIO_void_SetPinValue+0x202>
     e98:	2c 81       	ldd	r18, Y+4	; 0x04
     e9a:	3d 81       	ldd	r19, Y+5	; 0x05
     e9c:	23 30       	cpi	r18, 0x03	; 3
     e9e:	31 05       	cpc	r19, r1
     ea0:	71 f1       	breq	.+92     	; 0xefe <M_DIO_void_SetPinValue+0x1b4>
     ea2:	8c 81       	ldd	r24, Y+4	; 0x04
     ea4:	9d 81       	ldd	r25, Y+5	; 0x05
     ea6:	84 30       	cpi	r24, 0x04	; 4
     ea8:	91 05       	cpc	r25, r1
     eaa:	e9 f1       	breq	.+122    	; 0xf26 <M_DIO_void_SetPinValue+0x1dc>
     eac:	4f c0       	rjmp	.+158    	; 0xf4c <M_DIO_void_SetPinValue+0x202>
			        	{
			        	case PORTA_ID :                /// Port A
			        		SetBit(PORTA,pin);         /// SET pin value set it to 1
     eae:	ab e3       	ldi	r26, 0x3B	; 59
     eb0:	b0 e0       	ldi	r27, 0x00	; 0
     eb2:	eb e3       	ldi	r30, 0x3B	; 59
     eb4:	f0 e0       	ldi	r31, 0x00	; 0
     eb6:	80 81       	ld	r24, Z
     eb8:	48 2f       	mov	r20, r24
     eba:	8a 81       	ldd	r24, Y+2	; 0x02
     ebc:	28 2f       	mov	r18, r24
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	81 e0       	ldi	r24, 0x01	; 1
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	02 2e       	mov	r0, r18
     ec6:	02 c0       	rjmp	.+4      	; 0xecc <M_DIO_void_SetPinValue+0x182>
     ec8:	88 0f       	add	r24, r24
     eca:	99 1f       	adc	r25, r25
     ecc:	0a 94       	dec	r0
     ece:	e2 f7       	brpl	.-8      	; 0xec8 <M_DIO_void_SetPinValue+0x17e>
     ed0:	84 2b       	or	r24, r20
     ed2:	8c 93       	st	X, r24
     ed4:	3b c0       	rjmp	.+118    	; 0xf4c <M_DIO_void_SetPinValue+0x202>
			        	break ;             /////// break case PORTA_ID

			        	case PORTB_ID :                 /// Port B
			        		SetBit(PORTB,pin);         /// SET pin value set it to 1
     ed6:	a8 e3       	ldi	r26, 0x38	; 56
     ed8:	b0 e0       	ldi	r27, 0x00	; 0
     eda:	e8 e3       	ldi	r30, 0x38	; 56
     edc:	f0 e0       	ldi	r31, 0x00	; 0
     ede:	80 81       	ld	r24, Z
     ee0:	48 2f       	mov	r20, r24
     ee2:	8a 81       	ldd	r24, Y+2	; 0x02
     ee4:	28 2f       	mov	r18, r24
     ee6:	30 e0       	ldi	r19, 0x00	; 0
     ee8:	81 e0       	ldi	r24, 0x01	; 1
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	02 2e       	mov	r0, r18
     eee:	02 c0       	rjmp	.+4      	; 0xef4 <M_DIO_void_SetPinValue+0x1aa>
     ef0:	88 0f       	add	r24, r24
     ef2:	99 1f       	adc	r25, r25
     ef4:	0a 94       	dec	r0
     ef6:	e2 f7       	brpl	.-8      	; 0xef0 <M_DIO_void_SetPinValue+0x1a6>
     ef8:	84 2b       	or	r24, r20
     efa:	8c 93       	st	X, r24
     efc:	27 c0       	rjmp	.+78     	; 0xf4c <M_DIO_void_SetPinValue+0x202>
			        	break ;          /////// break case PORTB_ID

			        	case PORTC_ID :                /// Port C
			        		SetBit(PORTC,pin);        /// SET pin value set it to 1
     efe:	a5 e3       	ldi	r26, 0x35	; 53
     f00:	b0 e0       	ldi	r27, 0x00	; 0
     f02:	e5 e3       	ldi	r30, 0x35	; 53
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	80 81       	ld	r24, Z
     f08:	48 2f       	mov	r20, r24
     f0a:	8a 81       	ldd	r24, Y+2	; 0x02
     f0c:	28 2f       	mov	r18, r24
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	81 e0       	ldi	r24, 0x01	; 1
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	02 2e       	mov	r0, r18
     f16:	02 c0       	rjmp	.+4      	; 0xf1c <M_DIO_void_SetPinValue+0x1d2>
     f18:	88 0f       	add	r24, r24
     f1a:	99 1f       	adc	r25, r25
     f1c:	0a 94       	dec	r0
     f1e:	e2 f7       	brpl	.-8      	; 0xf18 <M_DIO_void_SetPinValue+0x1ce>
     f20:	84 2b       	or	r24, r20
     f22:	8c 93       	st	X, r24
     f24:	13 c0       	rjmp	.+38     	; 0xf4c <M_DIO_void_SetPinValue+0x202>
			        	break ;        /////// break case PORTC_ID

			        	case PORTD_ID :               /// Port D
			        		SetBit(PORTD,pin);        /// SET pin value set it to 1
     f26:	a2 e3       	ldi	r26, 0x32	; 50
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	e2 e3       	ldi	r30, 0x32	; 50
     f2c:	f0 e0       	ldi	r31, 0x00	; 0
     f2e:	80 81       	ld	r24, Z
     f30:	48 2f       	mov	r20, r24
     f32:	8a 81       	ldd	r24, Y+2	; 0x02
     f34:	28 2f       	mov	r18, r24
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	02 2e       	mov	r0, r18
     f3e:	02 c0       	rjmp	.+4      	; 0xf44 <M_DIO_void_SetPinValue+0x1fa>
     f40:	88 0f       	add	r24, r24
     f42:	99 1f       	adc	r25, r25
     f44:	0a 94       	dec	r0
     f46:	e2 f7       	brpl	.-8      	; 0xf40 <M_DIO_void_SetPinValue+0x1f6>
     f48:	84 2b       	or	r24, r20
     f4a:	8c 93       	st	X, r24
		break;         /////// break case HIGH

		default:   /*  Do nothing */       break;
		///* default of switch (value) */
		}
}
     f4c:	29 96       	adiw	r28, 0x09	; 9
     f4e:	0f b6       	in	r0, 0x3f	; 63
     f50:	f8 94       	cli
     f52:	de bf       	out	0x3e, r29	; 62
     f54:	0f be       	out	0x3f, r0	; 63
     f56:	cd bf       	out	0x3d, r28	; 61
     f58:	cf 91       	pop	r28
     f5a:	df 91       	pop	r29
     f5c:	08 95       	ret

00000f5e <M_DIO_void_PinTog>:
    //// Toggle Pin function //////
void M_DIO_void_PinTog(u8 port , u8 pin)
{
     f5e:	df 93       	push	r29
     f60:	cf 93       	push	r28
     f62:	00 d0       	rcall	.+0      	; 0xf64 <M_DIO_void_PinTog+0x6>
     f64:	00 d0       	rcall	.+0      	; 0xf66 <M_DIO_void_PinTog+0x8>
     f66:	cd b7       	in	r28, 0x3d	; 61
     f68:	de b7       	in	r29, 0x3e	; 62
     f6a:	89 83       	std	Y+1, r24	; 0x01
     f6c:	6a 83       	std	Y+2, r22	; 0x02
	//// SWITCH too determine the Port of the Pin
	switch (port)
     f6e:	89 81       	ldd	r24, Y+1	; 0x01
     f70:	28 2f       	mov	r18, r24
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	3c 83       	std	Y+4, r19	; 0x04
     f76:	2b 83       	std	Y+3, r18	; 0x03
     f78:	8b 81       	ldd	r24, Y+3	; 0x03
     f7a:	9c 81       	ldd	r25, Y+4	; 0x04
     f7c:	82 30       	cpi	r24, 0x02	; 2
     f7e:	91 05       	cpc	r25, r1
     f80:	51 f1       	breq	.+84     	; 0xfd6 <M_DIO_void_PinTog+0x78>
     f82:	2b 81       	ldd	r18, Y+3	; 0x03
     f84:	3c 81       	ldd	r19, Y+4	; 0x04
     f86:	23 30       	cpi	r18, 0x03	; 3
     f88:	31 05       	cpc	r19, r1
     f8a:	34 f4       	brge	.+12     	; 0xf98 <M_DIO_void_PinTog+0x3a>
     f8c:	8b 81       	ldd	r24, Y+3	; 0x03
     f8e:	9c 81       	ldd	r25, Y+4	; 0x04
     f90:	81 30       	cpi	r24, 0x01	; 1
     f92:	91 05       	cpc	r25, r1
     f94:	61 f0       	breq	.+24     	; 0xfae <M_DIO_void_PinTog+0x50>
     f96:	5a c0       	rjmp	.+180    	; 0x104c <M_DIO_void_PinTog+0xee>
     f98:	2b 81       	ldd	r18, Y+3	; 0x03
     f9a:	3c 81       	ldd	r19, Y+4	; 0x04
     f9c:	23 30       	cpi	r18, 0x03	; 3
     f9e:	31 05       	cpc	r19, r1
     fa0:	71 f1       	breq	.+92     	; 0xffe <M_DIO_void_PinTog+0xa0>
     fa2:	8b 81       	ldd	r24, Y+3	; 0x03
     fa4:	9c 81       	ldd	r25, Y+4	; 0x04
     fa6:	84 30       	cpi	r24, 0x04	; 4
     fa8:	91 05       	cpc	r25, r1
     faa:	e9 f1       	breq	.+122    	; 0x1026 <M_DIO_void_PinTog+0xc8>
     fac:	4f c0       	rjmp	.+158    	; 0x104c <M_DIO_void_PinTog+0xee>
		{

		  case PORTA_ID :                           /// Port A
			  TogBit(PORTA,pin);                    /// Toggle pin value
     fae:	ab e3       	ldi	r26, 0x3B	; 59
     fb0:	b0 e0       	ldi	r27, 0x00	; 0
     fb2:	eb e3       	ldi	r30, 0x3B	; 59
     fb4:	f0 e0       	ldi	r31, 0x00	; 0
     fb6:	80 81       	ld	r24, Z
     fb8:	48 2f       	mov	r20, r24
     fba:	8a 81       	ldd	r24, Y+2	; 0x02
     fbc:	28 2f       	mov	r18, r24
     fbe:	30 e0       	ldi	r19, 0x00	; 0
     fc0:	81 e0       	ldi	r24, 0x01	; 1
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	02 2e       	mov	r0, r18
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <M_DIO_void_PinTog+0x6e>
     fc8:	88 0f       	add	r24, r24
     fca:	99 1f       	adc	r25, r25
     fcc:	0a 94       	dec	r0
     fce:	e2 f7       	brpl	.-8      	; 0xfc8 <M_DIO_void_PinTog+0x6a>
     fd0:	84 27       	eor	r24, r20
     fd2:	8c 93       	st	X, r24
     fd4:	3b c0       	rjmp	.+118    	; 0x104c <M_DIO_void_PinTog+0xee>
		  break ;                       //// break case PORTA_ID

		  case PORTB_ID :                            /// Port B
			  TogBit(PORTB,pin);                     /// Toggle pin value
     fd6:	a8 e3       	ldi	r26, 0x38	; 56
     fd8:	b0 e0       	ldi	r27, 0x00	; 0
     fda:	e8 e3       	ldi	r30, 0x38	; 56
     fdc:	f0 e0       	ldi	r31, 0x00	; 0
     fde:	80 81       	ld	r24, Z
     fe0:	48 2f       	mov	r20, r24
     fe2:	8a 81       	ldd	r24, Y+2	; 0x02
     fe4:	28 2f       	mov	r18, r24
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	81 e0       	ldi	r24, 0x01	; 1
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	02 2e       	mov	r0, r18
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <M_DIO_void_PinTog+0x96>
     ff0:	88 0f       	add	r24, r24
     ff2:	99 1f       	adc	r25, r25
     ff4:	0a 94       	dec	r0
     ff6:	e2 f7       	brpl	.-8      	; 0xff0 <M_DIO_void_PinTog+0x92>
     ff8:	84 27       	eor	r24, r20
     ffa:	8c 93       	st	X, r24
     ffc:	27 c0       	rjmp	.+78     	; 0x104c <M_DIO_void_PinTog+0xee>
		  break ;                      /// / break case PORTB_ID

		  case PORTC_ID :                           /// Port C
			  TogBit(PORTC,pin);                   /// Toggle pin value
     ffe:	a5 e3       	ldi	r26, 0x35	; 53
    1000:	b0 e0       	ldi	r27, 0x00	; 0
    1002:	e5 e3       	ldi	r30, 0x35	; 53
    1004:	f0 e0       	ldi	r31, 0x00	; 0
    1006:	80 81       	ld	r24, Z
    1008:	48 2f       	mov	r20, r24
    100a:	8a 81       	ldd	r24, Y+2	; 0x02
    100c:	28 2f       	mov	r18, r24
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	81 e0       	ldi	r24, 0x01	; 1
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	02 2e       	mov	r0, r18
    1016:	02 c0       	rjmp	.+4      	; 0x101c <M_DIO_void_PinTog+0xbe>
    1018:	88 0f       	add	r24, r24
    101a:	99 1f       	adc	r25, r25
    101c:	0a 94       	dec	r0
    101e:	e2 f7       	brpl	.-8      	; 0x1018 <M_DIO_void_PinTog+0xba>
    1020:	84 27       	eor	r24, r20
    1022:	8c 93       	st	X, r24
    1024:	13 c0       	rjmp	.+38     	; 0x104c <M_DIO_void_PinTog+0xee>
		  break ;                       ///break case PORTC_ID

		  case PORTD_ID :                          /// Port D
			  TogBit(PORTD,pin);                    /// Toggle pin value
    1026:	a2 e3       	ldi	r26, 0x32	; 50
    1028:	b0 e0       	ldi	r27, 0x00	; 0
    102a:	e2 e3       	ldi	r30, 0x32	; 50
    102c:	f0 e0       	ldi	r31, 0x00	; 0
    102e:	80 81       	ld	r24, Z
    1030:	48 2f       	mov	r20, r24
    1032:	8a 81       	ldd	r24, Y+2	; 0x02
    1034:	28 2f       	mov	r18, r24
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	81 e0       	ldi	r24, 0x01	; 1
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	02 2e       	mov	r0, r18
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <M_DIO_void_PinTog+0xe6>
    1040:	88 0f       	add	r24, r24
    1042:	99 1f       	adc	r25, r25
    1044:	0a 94       	dec	r0
    1046:	e2 f7       	brpl	.-8      	; 0x1040 <M_DIO_void_PinTog+0xe2>
    1048:	84 27       	eor	r24, r20
    104a:	8c 93       	st	X, r24
		  break ;                       ///break case PORTD_ID

		  default :       /*  Do nothing */      break;
		  ///* default of switch (port) */
		}
}
    104c:	0f 90       	pop	r0
    104e:	0f 90       	pop	r0
    1050:	0f 90       	pop	r0
    1052:	0f 90       	pop	r0
    1054:	cf 91       	pop	r28
    1056:	df 91       	pop	r29
    1058:	08 95       	ret

0000105a <H_SSD_Void_SsdInt>:

#include "SSD_int.h"

///******************_Initialization Function to Set Pins direction_***********///
void H_SSD_Void_SsdInt(void)
{
    105a:	df 93       	push	r29
    105c:	cf 93       	push	r28
    105e:	cd b7       	in	r28, 0x3d	; 61
    1060:	de b7       	in	r29, 0x3e	; 62
	///******_Setting SSEG_LED_A_PIN Pin direction to OUTPUT _***********///
	M_DIO_void_SetPinDirection(SSEG_LED_A_PORT, SSEG_LED_A_PIN, OUTPUT);
    1062:	81 e0       	ldi	r24, 0x01	; 1
    1064:	60 e0       	ldi	r22, 0x00	; 0
    1066:	41 e0       	ldi	r20, 0x01	; 1
    1068:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
	///******_Setting SSEG_LED_B_PIN Pin direction to OUTPUT _***********///
	M_DIO_void_SetPinDirection(SSEG_LED_B_PORT, SSEG_LED_B_PIN, OUTPUT);
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	61 e0       	ldi	r22, 0x01	; 1
    1070:	41 e0       	ldi	r20, 0x01	; 1
    1072:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
	///******_Setting SSEG_LED_C_PIN Pin direction to OUTPUT _***********///
	M_DIO_void_SetPinDirection(SSEG_LED_C_PORT, SSEG_LED_C_PIN, OUTPUT);
    1076:	81 e0       	ldi	r24, 0x01	; 1
    1078:	62 e0       	ldi	r22, 0x02	; 2
    107a:	41 e0       	ldi	r20, 0x01	; 1
    107c:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
	///******_Setting SSEG_LED_D_PIN Pin direction to OUTPUT _***********///
	M_DIO_void_SetPinDirection(SSEG_LED_D_PORT, SSEG_LED_D_PIN, OUTPUT);
    1080:	81 e0       	ldi	r24, 0x01	; 1
    1082:	63 e0       	ldi	r22, 0x03	; 3
    1084:	41 e0       	ldi	r20, 0x01	; 1
    1086:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
	///******_Setting SSEG_LED_E_PIN Pin direction to OUTPUT _***********///
	M_DIO_void_SetPinDirection(SSEG_LED_E_PORT, SSEG_LED_E_PIN, OUTPUT);
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	64 e0       	ldi	r22, 0x04	; 4
    108e:	41 e0       	ldi	r20, 0x01	; 1
    1090:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
	///******_Setting SSEG_LED_F_PIN Pin direction to OUTPUT _***********///
	M_DIO_void_SetPinDirection(SSEG_LED_F_PORT, SSEG_LED_F_PIN, OUTPUT);
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	65 e0       	ldi	r22, 0x05	; 5
    1098:	41 e0       	ldi	r20, 0x01	; 1
    109a:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
	///******_Setting SSEG_LED_G_PIN Pin direction to OUTPUT _***********///
	M_DIO_void_SetPinDirection(SSEG_LED_G_PORT, SSEG_LED_G_PIN, OUTPUT);
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	66 e0       	ldi	r22, 0x06	; 6
    10a2:	41 e0       	ldi	r20, 0x01	; 1
    10a4:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>

	///******_Setting SSEG_DOT_PIN Pin direction to OUTPUT _***********///
	M_DIO_void_SetPinDirection(SSEG_DOT_PORT  , SSEG_DOT_PIN  , OUTPUT);
    10a8:	81 e0       	ldi	r24, 0x01	; 1
    10aa:	67 e0       	ldi	r22, 0x07	; 7
    10ac:	41 e0       	ldi	r20, 0x01	; 1
    10ae:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>


	///******_Setting SSEG_EN1_PIN Pin direction to OUTPUT _***********///
	M_DIO_void_SetPinDirection(SSEG_EN1_PORT  , SSEG_EN1_PIN   , OUTPUT);
    10b2:	83 e0       	ldi	r24, 0x03	; 3
    10b4:	66 e0       	ldi	r22, 0x06	; 6
    10b6:	41 e0       	ldi	r20, 0x01	; 1
    10b8:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
	///******_Setting SSEG_EN2_PIN Pin direction to OUTPUT _***********///
	M_DIO_void_SetPinDirection(SSEG_EN2_PORT  , SSEG_EN2_PIN   , OUTPUT);
    10bc:	83 e0       	ldi	r24, 0x03	; 3
    10be:	67 e0       	ldi	r22, 0x07	; 7
    10c0:	41 e0       	ldi	r20, 0x01	; 1
    10c2:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>


}
    10c6:	cf 91       	pop	r28
    10c8:	df 91       	pop	r29
    10ca:	08 95       	ret

000010cc <H_SSD_Void_SsdDisplay>:

void H_SSD_Void_SsdDisplay(u8 Local_u8_Num)
{
    10cc:	df 93       	push	r29
    10ce:	cf 93       	push	r28
    10d0:	cd b7       	in	r28, 0x3d	; 61
    10d2:	de b7       	in	r29, 0x3e	; 62
    10d4:	a4 97       	sbiw	r28, 0x24	; 36
    10d6:	0f b6       	in	r0, 0x3f	; 63
    10d8:	f8 94       	cli
    10da:	de bf       	out	0x3e, r29	; 62
    10dc:	0f be       	out	0x3f, r0	; 63
    10de:	cd bf       	out	0x3d, r28	; 61
    10e0:	88 a3       	std	Y+32, r24	; 0x20
  ///***** Local_u8_Units is a local variable to get Units number *******//
	 u8 Local_u8_Units = Local_u8_Num %10;
    10e2:	88 a1       	ldd	r24, Y+32	; 0x20
    10e4:	9a e0       	ldi	r25, 0x0A	; 10
    10e6:	69 2f       	mov	r22, r25
    10e8:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <__udivmodqi4>
    10ec:	89 2f       	mov	r24, r25
    10ee:	8f 8f       	std	Y+31, r24	; 0x1f
 ///***** Local_u8_Tens is a local variable to get Tens number *******//
	 u8 Local_u8_Tens  = Local_u8_Num / 10;
    10f0:	88 a1       	ldd	r24, Y+32	; 0x20
    10f2:	9a e0       	ldi	r25, 0x0A	; 10
    10f4:	69 2f       	mov	r22, r25
    10f6:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <__udivmodqi4>
    10fa:	8e 8f       	std	Y+30, r24	; 0x1e
	 u8 Local_U8_Conter ;
	 ///*******for loop to Repeat  the number displayed  to be able to see it*******///
	 for (Local_U8_Conter=0;Local_U8_Conter<200;Local_U8_Conter++)
    10fc:	1d 8e       	std	Y+29, r1	; 0x1d
    10fe:	77 c4       	rjmp	.+2286   	; 0x19ee <H_SSD_Void_SsdDisplay+0x922>
	 	{
///********* switch case to Display the Units number ***********//
	 switch (Local_u8_Units)
    1100:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1102:	28 2f       	mov	r18, r24
    1104:	30 e0       	ldi	r19, 0x00	; 0
    1106:	3c a3       	std	Y+36, r19	; 0x24
    1108:	2b a3       	std	Y+35, r18	; 0x23
    110a:	8b a1       	ldd	r24, Y+35	; 0x23
    110c:	9c a1       	ldd	r25, Y+36	; 0x24
    110e:	84 30       	cpi	r24, 0x04	; 4
    1110:	91 05       	cpc	r25, r1
    1112:	09 f4       	brne	.+2      	; 0x1116 <H_SSD_Void_SsdDisplay+0x4a>
    1114:	d7 c0       	rjmp	.+430    	; 0x12c4 <H_SSD_Void_SsdDisplay+0x1f8>
    1116:	2b a1       	ldd	r18, Y+35	; 0x23
    1118:	3c a1       	ldd	r19, Y+36	; 0x24
    111a:	25 30       	cpi	r18, 0x05	; 5
    111c:	31 05       	cpc	r19, r1
    111e:	ec f4       	brge	.+58     	; 0x115a <H_SSD_Void_SsdDisplay+0x8e>
    1120:	8b a1       	ldd	r24, Y+35	; 0x23
    1122:	9c a1       	ldd	r25, Y+36	; 0x24
    1124:	81 30       	cpi	r24, 0x01	; 1
    1126:	91 05       	cpc	r25, r1
    1128:	09 f4       	brne	.+2      	; 0x112c <H_SSD_Void_SsdDisplay+0x60>
    112a:	60 c0       	rjmp	.+192    	; 0x11ec <H_SSD_Void_SsdDisplay+0x120>
    112c:	2b a1       	ldd	r18, Y+35	; 0x23
    112e:	3c a1       	ldd	r19, Y+36	; 0x24
    1130:	22 30       	cpi	r18, 0x02	; 2
    1132:	31 05       	cpc	r19, r1
    1134:	2c f4       	brge	.+10     	; 0x1140 <H_SSD_Void_SsdDisplay+0x74>
    1136:	8b a1       	ldd	r24, Y+35	; 0x23
    1138:	9c a1       	ldd	r25, Y+36	; 0x24
    113a:	00 97       	sbiw	r24, 0x00	; 0
    113c:	99 f1       	breq	.+102    	; 0x11a4 <H_SSD_Void_SsdDisplay+0xd8>
    113e:	99 c1       	rjmp	.+818    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
    1140:	2b a1       	ldd	r18, Y+35	; 0x23
    1142:	3c a1       	ldd	r19, Y+36	; 0x24
    1144:	22 30       	cpi	r18, 0x02	; 2
    1146:	31 05       	cpc	r19, r1
    1148:	09 f4       	brne	.+2      	; 0x114c <H_SSD_Void_SsdDisplay+0x80>
    114a:	74 c0       	rjmp	.+232    	; 0x1234 <H_SSD_Void_SsdDisplay+0x168>
    114c:	8b a1       	ldd	r24, Y+35	; 0x23
    114e:	9c a1       	ldd	r25, Y+36	; 0x24
    1150:	83 30       	cpi	r24, 0x03	; 3
    1152:	91 05       	cpc	r25, r1
    1154:	09 f4       	brne	.+2      	; 0x1158 <H_SSD_Void_SsdDisplay+0x8c>
    1156:	92 c0       	rjmp	.+292    	; 0x127c <H_SSD_Void_SsdDisplay+0x1b0>
    1158:	8c c1       	rjmp	.+792    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
    115a:	2b a1       	ldd	r18, Y+35	; 0x23
    115c:	3c a1       	ldd	r19, Y+36	; 0x24
    115e:	27 30       	cpi	r18, 0x07	; 7
    1160:	31 05       	cpc	r19, r1
    1162:	09 f4       	brne	.+2      	; 0x1166 <H_SSD_Void_SsdDisplay+0x9a>
    1164:	1b c1       	rjmp	.+566    	; 0x139c <H_SSD_Void_SsdDisplay+0x2d0>
    1166:	8b a1       	ldd	r24, Y+35	; 0x23
    1168:	9c a1       	ldd	r25, Y+36	; 0x24
    116a:	88 30       	cpi	r24, 0x08	; 8
    116c:	91 05       	cpc	r25, r1
    116e:	6c f4       	brge	.+26     	; 0x118a <H_SSD_Void_SsdDisplay+0xbe>
    1170:	2b a1       	ldd	r18, Y+35	; 0x23
    1172:	3c a1       	ldd	r19, Y+36	; 0x24
    1174:	25 30       	cpi	r18, 0x05	; 5
    1176:	31 05       	cpc	r19, r1
    1178:	09 f4       	brne	.+2      	; 0x117c <H_SSD_Void_SsdDisplay+0xb0>
    117a:	c8 c0       	rjmp	.+400    	; 0x130c <H_SSD_Void_SsdDisplay+0x240>
    117c:	8b a1       	ldd	r24, Y+35	; 0x23
    117e:	9c a1       	ldd	r25, Y+36	; 0x24
    1180:	86 30       	cpi	r24, 0x06	; 6
    1182:	91 05       	cpc	r25, r1
    1184:	09 f4       	brne	.+2      	; 0x1188 <H_SSD_Void_SsdDisplay+0xbc>
    1186:	e6 c0       	rjmp	.+460    	; 0x1354 <H_SSD_Void_SsdDisplay+0x288>
    1188:	74 c1       	rjmp	.+744    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
    118a:	2b a1       	ldd	r18, Y+35	; 0x23
    118c:	3c a1       	ldd	r19, Y+36	; 0x24
    118e:	28 30       	cpi	r18, 0x08	; 8
    1190:	31 05       	cpc	r19, r1
    1192:	09 f4       	brne	.+2      	; 0x1196 <H_SSD_Void_SsdDisplay+0xca>
    1194:	27 c1       	rjmp	.+590    	; 0x13e4 <H_SSD_Void_SsdDisplay+0x318>
    1196:	8b a1       	ldd	r24, Y+35	; 0x23
    1198:	9c a1       	ldd	r25, Y+36	; 0x24
    119a:	89 30       	cpi	r24, 0x09	; 9
    119c:	91 05       	cpc	r25, r1
    119e:	09 f4       	brne	.+2      	; 0x11a2 <H_SSD_Void_SsdDisplay+0xd6>
    11a0:	45 c1       	rjmp	.+650    	; 0x142c <H_SSD_Void_SsdDisplay+0x360>
    11a2:	67 c1       	rjmp	.+718    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
	 {
	 ///**case number is 0 turn on all SSD_LEDs_ and turn off  SSD_LED_G
	  case   0:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    11a4:	81 e0       	ldi	r24, 0x01	; 1
    11a6:	60 e0       	ldi	r22, 0x00	; 0
    11a8:	41 e0       	ldi	r20, 0x01	; 1
    11aa:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    11ae:	81 e0       	ldi	r24, 0x01	; 1
    11b0:	61 e0       	ldi	r22, 0x01	; 1
    11b2:	41 e0       	ldi	r20, 0x01	; 1
    11b4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    11b8:	81 e0       	ldi	r24, 0x01	; 1
    11ba:	62 e0       	ldi	r22, 0x02	; 2
    11bc:	41 e0       	ldi	r20, 0x01	; 1
    11be:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	63 e0       	ldi	r22, 0x03	; 3
    11c6:	41 e0       	ldi	r20, 0x01	; 1
    11c8:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN , HIGH);
    11cc:	81 e0       	ldi	r24, 0x01	; 1
    11ce:	64 e0       	ldi	r22, 0x04	; 4
    11d0:	41 e0       	ldi	r20, 0x01	; 1
    11d2:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	65 e0       	ldi	r22, 0x05	; 5
    11da:	41 e0       	ldi	r20, 0x01	; 1
    11dc:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN ,  LOW);
    11e0:	81 e0       	ldi	r24, 0x01	; 1
    11e2:	66 e0       	ldi	r22, 0x06	; 6
    11e4:	40 e0       	ldi	r20, 0x00	; 0
    11e6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    11ea:	43 c1       	rjmp	.+646    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
	  break;
	  ///**case number is 1 turn on  SSD_LED_B and SSD_LED_C****//
	  case   1:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN ,  LOW);
    11ec:	81 e0       	ldi	r24, 0x01	; 1
    11ee:	60 e0       	ldi	r22, 0x00	; 0
    11f0:	40 e0       	ldi	r20, 0x00	; 0
    11f2:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    11f6:	81 e0       	ldi	r24, 0x01	; 1
    11f8:	61 e0       	ldi	r22, 0x01	; 1
    11fa:	41 e0       	ldi	r20, 0x01	; 1
    11fc:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    1200:	81 e0       	ldi	r24, 0x01	; 1
    1202:	62 e0       	ldi	r22, 0x02	; 2
    1204:	41 e0       	ldi	r20, 0x01	; 1
    1206:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN ,  LOW);
    120a:	81 e0       	ldi	r24, 0x01	; 1
    120c:	63 e0       	ldi	r22, 0x03	; 3
    120e:	40 e0       	ldi	r20, 0x00	; 0
    1210:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    1214:	81 e0       	ldi	r24, 0x01	; 1
    1216:	64 e0       	ldi	r22, 0x04	; 4
    1218:	40 e0       	ldi	r20, 0x00	; 0
    121a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN ,  LOW);
    121e:	81 e0       	ldi	r24, 0x01	; 1
    1220:	65 e0       	ldi	r22, 0x05	; 5
    1222:	40 e0       	ldi	r20, 0x00	; 0
    1224:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN ,  LOW);
    1228:	81 e0       	ldi	r24, 0x01	; 1
    122a:	66 e0       	ldi	r22, 0x06	; 6
    122c:	40 e0       	ldi	r20, 0x00	; 0
    122e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1232:	1f c1       	rjmp	.+574    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
	  break;
    ///**case number is 2 turn on all LEDs_ and turn off LED_C & LED_F**//
	  case   2:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    1234:	81 e0       	ldi	r24, 0x01	; 1
    1236:	60 e0       	ldi	r22, 0x00	; 0
    1238:	41 e0       	ldi	r20, 0x01	; 1
    123a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    123e:	81 e0       	ldi	r24, 0x01	; 1
    1240:	61 e0       	ldi	r22, 0x01	; 1
    1242:	41 e0       	ldi	r20, 0x01	; 1
    1244:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN ,  LOW);
    1248:	81 e0       	ldi	r24, 0x01	; 1
    124a:	62 e0       	ldi	r22, 0x02	; 2
    124c:	40 e0       	ldi	r20, 0x00	; 0
    124e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    1252:	81 e0       	ldi	r24, 0x01	; 1
    1254:	63 e0       	ldi	r22, 0x03	; 3
    1256:	41 e0       	ldi	r20, 0x01	; 1
    1258:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN , HIGH);
    125c:	81 e0       	ldi	r24, 0x01	; 1
    125e:	64 e0       	ldi	r22, 0x04	; 4
    1260:	41 e0       	ldi	r20, 0x01	; 1
    1262:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN ,  LOW);
    1266:	81 e0       	ldi	r24, 0x01	; 1
    1268:	65 e0       	ldi	r22, 0x05	; 5
    126a:	40 e0       	ldi	r20, 0x00	; 0
    126c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    1270:	81 e0       	ldi	r24, 0x01	; 1
    1272:	66 e0       	ldi	r22, 0x06	; 6
    1274:	41 e0       	ldi	r20, 0x01	; 1
    1276:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    127a:	fb c0       	rjmp	.+502    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
	  break;
	///**case number is 3 turn on all LEDs_ and turn off LED_E & LED_F**//
	  case   3:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	60 e0       	ldi	r22, 0x00	; 0
    1280:	41 e0       	ldi	r20, 0x01	; 1
    1282:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    1286:	81 e0       	ldi	r24, 0x01	; 1
    1288:	61 e0       	ldi	r22, 0x01	; 1
    128a:	41 e0       	ldi	r20, 0x01	; 1
    128c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    1290:	81 e0       	ldi	r24, 0x01	; 1
    1292:	62 e0       	ldi	r22, 0x02	; 2
    1294:	41 e0       	ldi	r20, 0x01	; 1
    1296:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    129a:	81 e0       	ldi	r24, 0x01	; 1
    129c:	63 e0       	ldi	r22, 0x03	; 3
    129e:	41 e0       	ldi	r20, 0x01	; 1
    12a0:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	64 e0       	ldi	r22, 0x04	; 4
    12a8:	40 e0       	ldi	r20, 0x00	; 0
    12aa:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN ,  LOW);
    12ae:	81 e0       	ldi	r24, 0x01	; 1
    12b0:	65 e0       	ldi	r22, 0x05	; 5
    12b2:	40 e0       	ldi	r20, 0x00	; 0
    12b4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    12b8:	81 e0       	ldi	r24, 0x01	; 1
    12ba:	66 e0       	ldi	r22, 0x06	; 6
    12bc:	41 e0       	ldi	r20, 0x01	; 1
    12be:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    12c2:	d7 c0       	rjmp	.+430    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
	  break;
  ///**case number is 4 turn on all LEDs_ and turn off LED_A,LED_D& LED_E**//
	  case   4:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN ,  LOW);
    12c4:	81 e0       	ldi	r24, 0x01	; 1
    12c6:	60 e0       	ldi	r22, 0x00	; 0
    12c8:	40 e0       	ldi	r20, 0x00	; 0
    12ca:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	61 e0       	ldi	r22, 0x01	; 1
    12d2:	41 e0       	ldi	r20, 0x01	; 1
    12d4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    12d8:	81 e0       	ldi	r24, 0x01	; 1
    12da:	62 e0       	ldi	r22, 0x02	; 2
    12dc:	41 e0       	ldi	r20, 0x01	; 1
    12de:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN ,  LOW);
    12e2:	81 e0       	ldi	r24, 0x01	; 1
    12e4:	63 e0       	ldi	r22, 0x03	; 3
    12e6:	40 e0       	ldi	r20, 0x00	; 0
    12e8:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	64 e0       	ldi	r22, 0x04	; 4
    12f0:	40 e0       	ldi	r20, 0x00	; 0
    12f2:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	65 e0       	ldi	r22, 0x05	; 5
    12fa:	41 e0       	ldi	r20, 0x01	; 1
    12fc:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	66 e0       	ldi	r22, 0x06	; 6
    1304:	41 e0       	ldi	r20, 0x01	; 1
    1306:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    130a:	b3 c0       	rjmp	.+358    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
	  break;
 ///**case number is 5 turn on all LEDs_ and turn off LED_B & LED_E**//
	  case   5:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	60 e0       	ldi	r22, 0x00	; 0
    1310:	41 e0       	ldi	r20, 0x01	; 1
    1312:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN ,  LOW);
    1316:	81 e0       	ldi	r24, 0x01	; 1
    1318:	61 e0       	ldi	r22, 0x01	; 1
    131a:	40 e0       	ldi	r20, 0x00	; 0
    131c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	62 e0       	ldi	r22, 0x02	; 2
    1324:	41 e0       	ldi	r20, 0x01	; 1
    1326:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    132a:	81 e0       	ldi	r24, 0x01	; 1
    132c:	63 e0       	ldi	r22, 0x03	; 3
    132e:	41 e0       	ldi	r20, 0x01	; 1
    1330:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    1334:	81 e0       	ldi	r24, 0x01	; 1
    1336:	64 e0       	ldi	r22, 0x04	; 4
    1338:	40 e0       	ldi	r20, 0x00	; 0
    133a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    133e:	81 e0       	ldi	r24, 0x01	; 1
    1340:	65 e0       	ldi	r22, 0x05	; 5
    1342:	41 e0       	ldi	r20, 0x01	; 1
    1344:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    1348:	81 e0       	ldi	r24, 0x01	; 1
    134a:	66 e0       	ldi	r22, 0x06	; 6
    134c:	41 e0       	ldi	r20, 0x01	; 1
    134e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1352:	8f c0       	rjmp	.+286    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
	  break;
 ///**case number is 6 turn on all LEDs_ and turn off LED_F**//
	  case   6:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    1354:	81 e0       	ldi	r24, 0x01	; 1
    1356:	60 e0       	ldi	r22, 0x00	; 0
    1358:	41 e0       	ldi	r20, 0x01	; 1
    135a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    135e:	81 e0       	ldi	r24, 0x01	; 1
    1360:	61 e0       	ldi	r22, 0x01	; 1
    1362:	41 e0       	ldi	r20, 0x01	; 1
    1364:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    1368:	81 e0       	ldi	r24, 0x01	; 1
    136a:	62 e0       	ldi	r22, 0x02	; 2
    136c:	41 e0       	ldi	r20, 0x01	; 1
    136e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    1372:	81 e0       	ldi	r24, 0x01	; 1
    1374:	63 e0       	ldi	r22, 0x03	; 3
    1376:	41 e0       	ldi	r20, 0x01	; 1
    1378:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN , HIGH);
    137c:	81 e0       	ldi	r24, 0x01	; 1
    137e:	64 e0       	ldi	r22, 0x04	; 4
    1380:	41 e0       	ldi	r20, 0x01	; 1
    1382:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN ,  LOW);
    1386:	81 e0       	ldi	r24, 0x01	; 1
    1388:	65 e0       	ldi	r22, 0x05	; 5
    138a:	40 e0       	ldi	r20, 0x00	; 0
    138c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    1390:	81 e0       	ldi	r24, 0x01	; 1
    1392:	66 e0       	ldi	r22, 0x06	; 6
    1394:	41 e0       	ldi	r20, 0x01	; 1
    1396:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    139a:	6b c0       	rjmp	.+214    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
	  break;
 ///**case number is 7 turn on all LEDs_ and turn off LED_D,LED_E& LED_G**//
	  case   7:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    139c:	81 e0       	ldi	r24, 0x01	; 1
    139e:	60 e0       	ldi	r22, 0x00	; 0
    13a0:	41 e0       	ldi	r20, 0x01	; 1
    13a2:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    13a6:	81 e0       	ldi	r24, 0x01	; 1
    13a8:	61 e0       	ldi	r22, 0x01	; 1
    13aa:	41 e0       	ldi	r20, 0x01	; 1
    13ac:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    13b0:	81 e0       	ldi	r24, 0x01	; 1
    13b2:	62 e0       	ldi	r22, 0x02	; 2
    13b4:	41 e0       	ldi	r20, 0x01	; 1
    13b6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN ,  LOW);
    13ba:	81 e0       	ldi	r24, 0x01	; 1
    13bc:	63 e0       	ldi	r22, 0x03	; 3
    13be:	40 e0       	ldi	r20, 0x00	; 0
    13c0:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    13c4:	81 e0       	ldi	r24, 0x01	; 1
    13c6:	64 e0       	ldi	r22, 0x04	; 4
    13c8:	40 e0       	ldi	r20, 0x00	; 0
    13ca:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    13ce:	81 e0       	ldi	r24, 0x01	; 1
    13d0:	65 e0       	ldi	r22, 0x05	; 5
    13d2:	41 e0       	ldi	r20, 0x01	; 1
    13d4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN ,  LOW);
    13d8:	81 e0       	ldi	r24, 0x01	; 1
    13da:	66 e0       	ldi	r22, 0x06	; 6
    13dc:	40 e0       	ldi	r20, 0x00	; 0
    13de:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    13e2:	47 c0       	rjmp	.+142    	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
	  break;
 ///**case number is 8 turn on all LEDs_ ****************************//
	  case   8:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    13e4:	81 e0       	ldi	r24, 0x01	; 1
    13e6:	60 e0       	ldi	r22, 0x00	; 0
    13e8:	41 e0       	ldi	r20, 0x01	; 1
    13ea:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    13ee:	81 e0       	ldi	r24, 0x01	; 1
    13f0:	61 e0       	ldi	r22, 0x01	; 1
    13f2:	41 e0       	ldi	r20, 0x01	; 1
    13f4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    13f8:	81 e0       	ldi	r24, 0x01	; 1
    13fa:	62 e0       	ldi	r22, 0x02	; 2
    13fc:	41 e0       	ldi	r20, 0x01	; 1
    13fe:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    1402:	81 e0       	ldi	r24, 0x01	; 1
    1404:	63 e0       	ldi	r22, 0x03	; 3
    1406:	41 e0       	ldi	r20, 0x01	; 1
    1408:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN , HIGH);
    140c:	81 e0       	ldi	r24, 0x01	; 1
    140e:	64 e0       	ldi	r22, 0x04	; 4
    1410:	41 e0       	ldi	r20, 0x01	; 1
    1412:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    1416:	81 e0       	ldi	r24, 0x01	; 1
    1418:	65 e0       	ldi	r22, 0x05	; 5
    141a:	41 e0       	ldi	r20, 0x01	; 1
    141c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    1420:	81 e0       	ldi	r24, 0x01	; 1
    1422:	66 e0       	ldi	r22, 0x06	; 6
    1424:	41 e0       	ldi	r20, 0x01	; 1
    1426:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    142a:	23 c0       	rjmp	.+70     	; 0x1472 <H_SSD_Void_SsdDisplay+0x3a6>
	  break;
  ///**case number is 9 turn on all LEDs_ and turn off  LED_E**//
	  case   9:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    142c:	81 e0       	ldi	r24, 0x01	; 1
    142e:	60 e0       	ldi	r22, 0x00	; 0
    1430:	41 e0       	ldi	r20, 0x01	; 1
    1432:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    1436:	81 e0       	ldi	r24, 0x01	; 1
    1438:	61 e0       	ldi	r22, 0x01	; 1
    143a:	41 e0       	ldi	r20, 0x01	; 1
    143c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    1440:	81 e0       	ldi	r24, 0x01	; 1
    1442:	62 e0       	ldi	r22, 0x02	; 2
    1444:	41 e0       	ldi	r20, 0x01	; 1
    1446:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    144a:	81 e0       	ldi	r24, 0x01	; 1
    144c:	63 e0       	ldi	r22, 0x03	; 3
    144e:	41 e0       	ldi	r20, 0x01	; 1
    1450:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    1454:	81 e0       	ldi	r24, 0x01	; 1
    1456:	64 e0       	ldi	r22, 0x04	; 4
    1458:	40 e0       	ldi	r20, 0x00	; 0
    145a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    145e:	81 e0       	ldi	r24, 0x01	; 1
    1460:	65 e0       	ldi	r22, 0x05	; 5
    1462:	41 e0       	ldi	r20, 0x01	; 1
    1464:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    1468:	81 e0       	ldi	r24, 0x01	; 1
    146a:	66 e0       	ldi	r22, 0x06	; 6
    146c:	41 e0       	ldi	r20, 0x01	; 1
    146e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
  * To get units Numbers displayed on
  * Enable the SSEG_EN1_PIN = SetBit LOW
  * and
  * Disable the SSEG_EN2_PIN = SetBit HIGH
  */
	 M_DIO_void_SetPinValue(SSEG_EN1_PORT, SSEG_EN1_PIN,  LOW);
    1472:	83 e0       	ldi	r24, 0x03	; 3
    1474:	66 e0       	ldi	r22, 0x06	; 6
    1476:	40 e0       	ldi	r20, 0x00	; 0
    1478:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
	 M_DIO_void_SetPinValue(SSEG_EN2_PORT, SSEG_EN2_PIN, HIGH);
    147c:	83 e0       	ldi	r24, 0x03	; 3
    147e:	67 e0       	ldi	r22, 0x07	; 7
    1480:	41 e0       	ldi	r20, 0x01	; 1
    1482:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1486:	80 e0       	ldi	r24, 0x00	; 0
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	a0 e8       	ldi	r26, 0x80	; 128
    148c:	bf e3       	ldi	r27, 0x3F	; 63
    148e:	89 8f       	std	Y+25, r24	; 0x19
    1490:	9a 8f       	std	Y+26, r25	; 0x1a
    1492:	ab 8f       	std	Y+27, r26	; 0x1b
    1494:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1496:	69 8d       	ldd	r22, Y+25	; 0x19
    1498:	7a 8d       	ldd	r23, Y+26	; 0x1a
    149a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    149c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    149e:	20 e0       	ldi	r18, 0x00	; 0
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	4a e7       	ldi	r20, 0x7A	; 122
    14a4:	53 e4       	ldi	r21, 0x43	; 67
    14a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14aa:	dc 01       	movw	r26, r24
    14ac:	cb 01       	movw	r24, r22
    14ae:	8d 8b       	std	Y+21, r24	; 0x15
    14b0:	9e 8b       	std	Y+22, r25	; 0x16
    14b2:	af 8b       	std	Y+23, r26	; 0x17
    14b4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    14b6:	6d 89       	ldd	r22, Y+21	; 0x15
    14b8:	7e 89       	ldd	r23, Y+22	; 0x16
    14ba:	8f 89       	ldd	r24, Y+23	; 0x17
    14bc:	98 8d       	ldd	r25, Y+24	; 0x18
    14be:	20 e0       	ldi	r18, 0x00	; 0
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	40 e8       	ldi	r20, 0x80	; 128
    14c4:	5f e3       	ldi	r21, 0x3F	; 63
    14c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14ca:	88 23       	and	r24, r24
    14cc:	2c f4       	brge	.+10     	; 0x14d8 <H_SSD_Void_SsdDisplay+0x40c>
		__ticks = 1;
    14ce:	81 e0       	ldi	r24, 0x01	; 1
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	9c 8b       	std	Y+20, r25	; 0x14
    14d4:	8b 8b       	std	Y+19, r24	; 0x13
    14d6:	3f c0       	rjmp	.+126    	; 0x1556 <H_SSD_Void_SsdDisplay+0x48a>
	else if (__tmp > 65535)
    14d8:	6d 89       	ldd	r22, Y+21	; 0x15
    14da:	7e 89       	ldd	r23, Y+22	; 0x16
    14dc:	8f 89       	ldd	r24, Y+23	; 0x17
    14de:	98 8d       	ldd	r25, Y+24	; 0x18
    14e0:	20 e0       	ldi	r18, 0x00	; 0
    14e2:	3f ef       	ldi	r19, 0xFF	; 255
    14e4:	4f e7       	ldi	r20, 0x7F	; 127
    14e6:	57 e4       	ldi	r21, 0x47	; 71
    14e8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14ec:	18 16       	cp	r1, r24
    14ee:	4c f5       	brge	.+82     	; 0x1542 <H_SSD_Void_SsdDisplay+0x476>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14f0:	69 8d       	ldd	r22, Y+25	; 0x19
    14f2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14f4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14f6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14f8:	20 e0       	ldi	r18, 0x00	; 0
    14fa:	30 e0       	ldi	r19, 0x00	; 0
    14fc:	40 e2       	ldi	r20, 0x20	; 32
    14fe:	51 e4       	ldi	r21, 0x41	; 65
    1500:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1504:	dc 01       	movw	r26, r24
    1506:	cb 01       	movw	r24, r22
    1508:	bc 01       	movw	r22, r24
    150a:	cd 01       	movw	r24, r26
    150c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1510:	dc 01       	movw	r26, r24
    1512:	cb 01       	movw	r24, r22
    1514:	9c 8b       	std	Y+20, r25	; 0x14
    1516:	8b 8b       	std	Y+19, r24	; 0x13
    1518:	0f c0       	rjmp	.+30     	; 0x1538 <H_SSD_Void_SsdDisplay+0x46c>
    151a:	89 e1       	ldi	r24, 0x19	; 25
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	9a 8b       	std	Y+18, r25	; 0x12
    1520:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1522:	89 89       	ldd	r24, Y+17	; 0x11
    1524:	9a 89       	ldd	r25, Y+18	; 0x12
    1526:	01 97       	sbiw	r24, 0x01	; 1
    1528:	f1 f7       	brne	.-4      	; 0x1526 <H_SSD_Void_SsdDisplay+0x45a>
    152a:	9a 8b       	std	Y+18, r25	; 0x12
    152c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    152e:	8b 89       	ldd	r24, Y+19	; 0x13
    1530:	9c 89       	ldd	r25, Y+20	; 0x14
    1532:	01 97       	sbiw	r24, 0x01	; 1
    1534:	9c 8b       	std	Y+20, r25	; 0x14
    1536:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1538:	8b 89       	ldd	r24, Y+19	; 0x13
    153a:	9c 89       	ldd	r25, Y+20	; 0x14
    153c:	00 97       	sbiw	r24, 0x00	; 0
    153e:	69 f7       	brne	.-38     	; 0x151a <H_SSD_Void_SsdDisplay+0x44e>
    1540:	14 c0       	rjmp	.+40     	; 0x156a <H_SSD_Void_SsdDisplay+0x49e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1542:	6d 89       	ldd	r22, Y+21	; 0x15
    1544:	7e 89       	ldd	r23, Y+22	; 0x16
    1546:	8f 89       	ldd	r24, Y+23	; 0x17
    1548:	98 8d       	ldd	r25, Y+24	; 0x18
    154a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    154e:	dc 01       	movw	r26, r24
    1550:	cb 01       	movw	r24, r22
    1552:	9c 8b       	std	Y+20, r25	; 0x14
    1554:	8b 8b       	std	Y+19, r24	; 0x13
    1556:	8b 89       	ldd	r24, Y+19	; 0x13
    1558:	9c 89       	ldd	r25, Y+20	; 0x14
    155a:	98 8b       	std	Y+16, r25	; 0x10
    155c:	8f 87       	std	Y+15, r24	; 0x0f
    155e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1560:	98 89       	ldd	r25, Y+16	; 0x10
    1562:	01 97       	sbiw	r24, 0x01	; 1
    1564:	f1 f7       	brne	.-4      	; 0x1562 <H_SSD_Void_SsdDisplay+0x496>
    1566:	98 8b       	std	Y+16, r25	; 0x10
    1568:	8f 87       	std	Y+15, r24	; 0x0f
	 	 	         _delay_ms(SSD_DELAY_TIME); ///delay for one mile second
	 M_DIO_void_SetPinValue(SSEG_EN1_PORT, SSEG_EN1_PIN,  HIGH);
    156a:	83 e0       	ldi	r24, 0x03	; 3
    156c:	66 e0       	ldi	r22, 0x06	; 6
    156e:	41 e0       	ldi	r20, 0x01	; 1
    1570:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>



///********* switch case to Display the Tens number ***********//
	 switch (Local_u8_Tens)
    1574:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1576:	28 2f       	mov	r18, r24
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	3a a3       	std	Y+34, r19	; 0x22
    157c:	29 a3       	std	Y+33, r18	; 0x21
    157e:	89 a1       	ldd	r24, Y+33	; 0x21
    1580:	9a a1       	ldd	r25, Y+34	; 0x22
    1582:	84 30       	cpi	r24, 0x04	; 4
    1584:	91 05       	cpc	r25, r1
    1586:	09 f4       	brne	.+2      	; 0x158a <H_SSD_Void_SsdDisplay+0x4be>
    1588:	d7 c0       	rjmp	.+430    	; 0x1738 <H_SSD_Void_SsdDisplay+0x66c>
    158a:	29 a1       	ldd	r18, Y+33	; 0x21
    158c:	3a a1       	ldd	r19, Y+34	; 0x22
    158e:	25 30       	cpi	r18, 0x05	; 5
    1590:	31 05       	cpc	r19, r1
    1592:	ec f4       	brge	.+58     	; 0x15ce <H_SSD_Void_SsdDisplay+0x502>
    1594:	89 a1       	ldd	r24, Y+33	; 0x21
    1596:	9a a1       	ldd	r25, Y+34	; 0x22
    1598:	81 30       	cpi	r24, 0x01	; 1
    159a:	91 05       	cpc	r25, r1
    159c:	09 f4       	brne	.+2      	; 0x15a0 <H_SSD_Void_SsdDisplay+0x4d4>
    159e:	60 c0       	rjmp	.+192    	; 0x1660 <H_SSD_Void_SsdDisplay+0x594>
    15a0:	29 a1       	ldd	r18, Y+33	; 0x21
    15a2:	3a a1       	ldd	r19, Y+34	; 0x22
    15a4:	22 30       	cpi	r18, 0x02	; 2
    15a6:	31 05       	cpc	r19, r1
    15a8:	2c f4       	brge	.+10     	; 0x15b4 <H_SSD_Void_SsdDisplay+0x4e8>
    15aa:	89 a1       	ldd	r24, Y+33	; 0x21
    15ac:	9a a1       	ldd	r25, Y+34	; 0x22
    15ae:	00 97       	sbiw	r24, 0x00	; 0
    15b0:	99 f1       	breq	.+102    	; 0x1618 <H_SSD_Void_SsdDisplay+0x54c>
    15b2:	99 c1       	rjmp	.+818    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
    15b4:	29 a1       	ldd	r18, Y+33	; 0x21
    15b6:	3a a1       	ldd	r19, Y+34	; 0x22
    15b8:	22 30       	cpi	r18, 0x02	; 2
    15ba:	31 05       	cpc	r19, r1
    15bc:	09 f4       	brne	.+2      	; 0x15c0 <H_SSD_Void_SsdDisplay+0x4f4>
    15be:	74 c0       	rjmp	.+232    	; 0x16a8 <H_SSD_Void_SsdDisplay+0x5dc>
    15c0:	89 a1       	ldd	r24, Y+33	; 0x21
    15c2:	9a a1       	ldd	r25, Y+34	; 0x22
    15c4:	83 30       	cpi	r24, 0x03	; 3
    15c6:	91 05       	cpc	r25, r1
    15c8:	09 f4       	brne	.+2      	; 0x15cc <H_SSD_Void_SsdDisplay+0x500>
    15ca:	92 c0       	rjmp	.+292    	; 0x16f0 <H_SSD_Void_SsdDisplay+0x624>
    15cc:	8c c1       	rjmp	.+792    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
    15ce:	29 a1       	ldd	r18, Y+33	; 0x21
    15d0:	3a a1       	ldd	r19, Y+34	; 0x22
    15d2:	27 30       	cpi	r18, 0x07	; 7
    15d4:	31 05       	cpc	r19, r1
    15d6:	09 f4       	brne	.+2      	; 0x15da <H_SSD_Void_SsdDisplay+0x50e>
    15d8:	1b c1       	rjmp	.+566    	; 0x1810 <H_SSD_Void_SsdDisplay+0x744>
    15da:	89 a1       	ldd	r24, Y+33	; 0x21
    15dc:	9a a1       	ldd	r25, Y+34	; 0x22
    15de:	88 30       	cpi	r24, 0x08	; 8
    15e0:	91 05       	cpc	r25, r1
    15e2:	6c f4       	brge	.+26     	; 0x15fe <H_SSD_Void_SsdDisplay+0x532>
    15e4:	29 a1       	ldd	r18, Y+33	; 0x21
    15e6:	3a a1       	ldd	r19, Y+34	; 0x22
    15e8:	25 30       	cpi	r18, 0x05	; 5
    15ea:	31 05       	cpc	r19, r1
    15ec:	09 f4       	brne	.+2      	; 0x15f0 <H_SSD_Void_SsdDisplay+0x524>
    15ee:	c8 c0       	rjmp	.+400    	; 0x1780 <H_SSD_Void_SsdDisplay+0x6b4>
    15f0:	89 a1       	ldd	r24, Y+33	; 0x21
    15f2:	9a a1       	ldd	r25, Y+34	; 0x22
    15f4:	86 30       	cpi	r24, 0x06	; 6
    15f6:	91 05       	cpc	r25, r1
    15f8:	09 f4       	brne	.+2      	; 0x15fc <H_SSD_Void_SsdDisplay+0x530>
    15fa:	e6 c0       	rjmp	.+460    	; 0x17c8 <H_SSD_Void_SsdDisplay+0x6fc>
    15fc:	74 c1       	rjmp	.+744    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
    15fe:	29 a1       	ldd	r18, Y+33	; 0x21
    1600:	3a a1       	ldd	r19, Y+34	; 0x22
    1602:	28 30       	cpi	r18, 0x08	; 8
    1604:	31 05       	cpc	r19, r1
    1606:	09 f4       	brne	.+2      	; 0x160a <H_SSD_Void_SsdDisplay+0x53e>
    1608:	27 c1       	rjmp	.+590    	; 0x1858 <H_SSD_Void_SsdDisplay+0x78c>
    160a:	89 a1       	ldd	r24, Y+33	; 0x21
    160c:	9a a1       	ldd	r25, Y+34	; 0x22
    160e:	89 30       	cpi	r24, 0x09	; 9
    1610:	91 05       	cpc	r25, r1
    1612:	09 f4       	brne	.+2      	; 0x1616 <H_SSD_Void_SsdDisplay+0x54a>
    1614:	45 c1       	rjmp	.+650    	; 0x18a0 <H_SSD_Void_SsdDisplay+0x7d4>
    1616:	67 c1       	rjmp	.+718    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
	 {

	 ///**case number is 0 turn on all SSD_LEDs_ and turn off  SSD_LED_G
	  case   0:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    1618:	81 e0       	ldi	r24, 0x01	; 1
    161a:	60 e0       	ldi	r22, 0x00	; 0
    161c:	41 e0       	ldi	r20, 0x01	; 1
    161e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    1622:	81 e0       	ldi	r24, 0x01	; 1
    1624:	61 e0       	ldi	r22, 0x01	; 1
    1626:	41 e0       	ldi	r20, 0x01	; 1
    1628:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    162c:	81 e0       	ldi	r24, 0x01	; 1
    162e:	62 e0       	ldi	r22, 0x02	; 2
    1630:	41 e0       	ldi	r20, 0x01	; 1
    1632:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	63 e0       	ldi	r22, 0x03	; 3
    163a:	41 e0       	ldi	r20, 0x01	; 1
    163c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN , HIGH);
    1640:	81 e0       	ldi	r24, 0x01	; 1
    1642:	64 e0       	ldi	r22, 0x04	; 4
    1644:	41 e0       	ldi	r20, 0x01	; 1
    1646:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    164a:	81 e0       	ldi	r24, 0x01	; 1
    164c:	65 e0       	ldi	r22, 0x05	; 5
    164e:	41 e0       	ldi	r20, 0x01	; 1
    1650:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN ,  LOW);
    1654:	81 e0       	ldi	r24, 0x01	; 1
    1656:	66 e0       	ldi	r22, 0x06	; 6
    1658:	40 e0       	ldi	r20, 0x00	; 0
    165a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    165e:	43 c1       	rjmp	.+646    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
	  break;
	  ///**case number is 1 turn on  SSD_LED_B and SSD_LED_C****//
	  case   1:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN ,  LOW);
    1660:	81 e0       	ldi	r24, 0x01	; 1
    1662:	60 e0       	ldi	r22, 0x00	; 0
    1664:	40 e0       	ldi	r20, 0x00	; 0
    1666:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    166a:	81 e0       	ldi	r24, 0x01	; 1
    166c:	61 e0       	ldi	r22, 0x01	; 1
    166e:	41 e0       	ldi	r20, 0x01	; 1
    1670:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    1674:	81 e0       	ldi	r24, 0x01	; 1
    1676:	62 e0       	ldi	r22, 0x02	; 2
    1678:	41 e0       	ldi	r20, 0x01	; 1
    167a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN ,  LOW);
    167e:	81 e0       	ldi	r24, 0x01	; 1
    1680:	63 e0       	ldi	r22, 0x03	; 3
    1682:	40 e0       	ldi	r20, 0x00	; 0
    1684:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    1688:	81 e0       	ldi	r24, 0x01	; 1
    168a:	64 e0       	ldi	r22, 0x04	; 4
    168c:	40 e0       	ldi	r20, 0x00	; 0
    168e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN ,  LOW);
    1692:	81 e0       	ldi	r24, 0x01	; 1
    1694:	65 e0       	ldi	r22, 0x05	; 5
    1696:	40 e0       	ldi	r20, 0x00	; 0
    1698:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN ,  LOW);
    169c:	81 e0       	ldi	r24, 0x01	; 1
    169e:	66 e0       	ldi	r22, 0x06	; 6
    16a0:	40 e0       	ldi	r20, 0x00	; 0
    16a2:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    16a6:	1f c1       	rjmp	.+574    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
	  break;
    ///**case number is 2 turn on all LEDs_ and turn off LED_C & LED_F**//
	  case   2:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    16a8:	81 e0       	ldi	r24, 0x01	; 1
    16aa:	60 e0       	ldi	r22, 0x00	; 0
    16ac:	41 e0       	ldi	r20, 0x01	; 1
    16ae:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    16b2:	81 e0       	ldi	r24, 0x01	; 1
    16b4:	61 e0       	ldi	r22, 0x01	; 1
    16b6:	41 e0       	ldi	r20, 0x01	; 1
    16b8:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN ,  LOW);
    16bc:	81 e0       	ldi	r24, 0x01	; 1
    16be:	62 e0       	ldi	r22, 0x02	; 2
    16c0:	40 e0       	ldi	r20, 0x00	; 0
    16c2:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    16c6:	81 e0       	ldi	r24, 0x01	; 1
    16c8:	63 e0       	ldi	r22, 0x03	; 3
    16ca:	41 e0       	ldi	r20, 0x01	; 1
    16cc:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN , HIGH);
    16d0:	81 e0       	ldi	r24, 0x01	; 1
    16d2:	64 e0       	ldi	r22, 0x04	; 4
    16d4:	41 e0       	ldi	r20, 0x01	; 1
    16d6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN ,  LOW);
    16da:	81 e0       	ldi	r24, 0x01	; 1
    16dc:	65 e0       	ldi	r22, 0x05	; 5
    16de:	40 e0       	ldi	r20, 0x00	; 0
    16e0:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    16e4:	81 e0       	ldi	r24, 0x01	; 1
    16e6:	66 e0       	ldi	r22, 0x06	; 6
    16e8:	41 e0       	ldi	r20, 0x01	; 1
    16ea:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    16ee:	fb c0       	rjmp	.+502    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
	  break;
	///**case number is 3 turn on all LEDs_ and turn off LED_E & LED_F**//
	  case   3:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    16f0:	81 e0       	ldi	r24, 0x01	; 1
    16f2:	60 e0       	ldi	r22, 0x00	; 0
    16f4:	41 e0       	ldi	r20, 0x01	; 1
    16f6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    16fa:	81 e0       	ldi	r24, 0x01	; 1
    16fc:	61 e0       	ldi	r22, 0x01	; 1
    16fe:	41 e0       	ldi	r20, 0x01	; 1
    1700:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    1704:	81 e0       	ldi	r24, 0x01	; 1
    1706:	62 e0       	ldi	r22, 0x02	; 2
    1708:	41 e0       	ldi	r20, 0x01	; 1
    170a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    170e:	81 e0       	ldi	r24, 0x01	; 1
    1710:	63 e0       	ldi	r22, 0x03	; 3
    1712:	41 e0       	ldi	r20, 0x01	; 1
    1714:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    1718:	81 e0       	ldi	r24, 0x01	; 1
    171a:	64 e0       	ldi	r22, 0x04	; 4
    171c:	40 e0       	ldi	r20, 0x00	; 0
    171e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN ,  LOW);
    1722:	81 e0       	ldi	r24, 0x01	; 1
    1724:	65 e0       	ldi	r22, 0x05	; 5
    1726:	40 e0       	ldi	r20, 0x00	; 0
    1728:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    172c:	81 e0       	ldi	r24, 0x01	; 1
    172e:	66 e0       	ldi	r22, 0x06	; 6
    1730:	41 e0       	ldi	r20, 0x01	; 1
    1732:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1736:	d7 c0       	rjmp	.+430    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
	  break;
  ///**case number is 4 turn on all LEDs_ and turn off LED_A,LED_D& LED_E**//
	  case   4:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN ,  LOW);
    1738:	81 e0       	ldi	r24, 0x01	; 1
    173a:	60 e0       	ldi	r22, 0x00	; 0
    173c:	40 e0       	ldi	r20, 0x00	; 0
    173e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	61 e0       	ldi	r22, 0x01	; 1
    1746:	41 e0       	ldi	r20, 0x01	; 1
    1748:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    174c:	81 e0       	ldi	r24, 0x01	; 1
    174e:	62 e0       	ldi	r22, 0x02	; 2
    1750:	41 e0       	ldi	r20, 0x01	; 1
    1752:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN ,  LOW);
    1756:	81 e0       	ldi	r24, 0x01	; 1
    1758:	63 e0       	ldi	r22, 0x03	; 3
    175a:	40 e0       	ldi	r20, 0x00	; 0
    175c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    1760:	81 e0       	ldi	r24, 0x01	; 1
    1762:	64 e0       	ldi	r22, 0x04	; 4
    1764:	40 e0       	ldi	r20, 0x00	; 0
    1766:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    176a:	81 e0       	ldi	r24, 0x01	; 1
    176c:	65 e0       	ldi	r22, 0x05	; 5
    176e:	41 e0       	ldi	r20, 0x01	; 1
    1770:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    1774:	81 e0       	ldi	r24, 0x01	; 1
    1776:	66 e0       	ldi	r22, 0x06	; 6
    1778:	41 e0       	ldi	r20, 0x01	; 1
    177a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    177e:	b3 c0       	rjmp	.+358    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
	  break;
 ///**case number is 5 turn on all LEDs_ and turn off LED_B & LED_E**//
	  case   5:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    1780:	81 e0       	ldi	r24, 0x01	; 1
    1782:	60 e0       	ldi	r22, 0x00	; 0
    1784:	41 e0       	ldi	r20, 0x01	; 1
    1786:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN ,  LOW);
    178a:	81 e0       	ldi	r24, 0x01	; 1
    178c:	61 e0       	ldi	r22, 0x01	; 1
    178e:	40 e0       	ldi	r20, 0x00	; 0
    1790:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    1794:	81 e0       	ldi	r24, 0x01	; 1
    1796:	62 e0       	ldi	r22, 0x02	; 2
    1798:	41 e0       	ldi	r20, 0x01	; 1
    179a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    179e:	81 e0       	ldi	r24, 0x01	; 1
    17a0:	63 e0       	ldi	r22, 0x03	; 3
    17a2:	41 e0       	ldi	r20, 0x01	; 1
    17a4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    17a8:	81 e0       	ldi	r24, 0x01	; 1
    17aa:	64 e0       	ldi	r22, 0x04	; 4
    17ac:	40 e0       	ldi	r20, 0x00	; 0
    17ae:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    17b2:	81 e0       	ldi	r24, 0x01	; 1
    17b4:	65 e0       	ldi	r22, 0x05	; 5
    17b6:	41 e0       	ldi	r20, 0x01	; 1
    17b8:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    17bc:	81 e0       	ldi	r24, 0x01	; 1
    17be:	66 e0       	ldi	r22, 0x06	; 6
    17c0:	41 e0       	ldi	r20, 0x01	; 1
    17c2:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    17c6:	8f c0       	rjmp	.+286    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
	  break;
 ///**case number is 6 turn on all LEDs_ and turn off LED_F**//
	  case   6:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    17c8:	81 e0       	ldi	r24, 0x01	; 1
    17ca:	60 e0       	ldi	r22, 0x00	; 0
    17cc:	41 e0       	ldi	r20, 0x01	; 1
    17ce:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    17d2:	81 e0       	ldi	r24, 0x01	; 1
    17d4:	61 e0       	ldi	r22, 0x01	; 1
    17d6:	41 e0       	ldi	r20, 0x01	; 1
    17d8:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    17dc:	81 e0       	ldi	r24, 0x01	; 1
    17de:	62 e0       	ldi	r22, 0x02	; 2
    17e0:	41 e0       	ldi	r20, 0x01	; 1
    17e2:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    17e6:	81 e0       	ldi	r24, 0x01	; 1
    17e8:	63 e0       	ldi	r22, 0x03	; 3
    17ea:	41 e0       	ldi	r20, 0x01	; 1
    17ec:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN , HIGH);
    17f0:	81 e0       	ldi	r24, 0x01	; 1
    17f2:	64 e0       	ldi	r22, 0x04	; 4
    17f4:	41 e0       	ldi	r20, 0x01	; 1
    17f6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN ,  LOW);
    17fa:	81 e0       	ldi	r24, 0x01	; 1
    17fc:	65 e0       	ldi	r22, 0x05	; 5
    17fe:	40 e0       	ldi	r20, 0x00	; 0
    1800:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    1804:	81 e0       	ldi	r24, 0x01	; 1
    1806:	66 e0       	ldi	r22, 0x06	; 6
    1808:	41 e0       	ldi	r20, 0x01	; 1
    180a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    180e:	6b c0       	rjmp	.+214    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
	  break;
 ///**case number is 7 turn on all LEDs_ and turn off LED_D,LED_E& LED_G**//
	  case   7:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    1810:	81 e0       	ldi	r24, 0x01	; 1
    1812:	60 e0       	ldi	r22, 0x00	; 0
    1814:	41 e0       	ldi	r20, 0x01	; 1
    1816:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    181a:	81 e0       	ldi	r24, 0x01	; 1
    181c:	61 e0       	ldi	r22, 0x01	; 1
    181e:	41 e0       	ldi	r20, 0x01	; 1
    1820:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    1824:	81 e0       	ldi	r24, 0x01	; 1
    1826:	62 e0       	ldi	r22, 0x02	; 2
    1828:	41 e0       	ldi	r20, 0x01	; 1
    182a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN ,  LOW);
    182e:	81 e0       	ldi	r24, 0x01	; 1
    1830:	63 e0       	ldi	r22, 0x03	; 3
    1832:	40 e0       	ldi	r20, 0x00	; 0
    1834:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    1838:	81 e0       	ldi	r24, 0x01	; 1
    183a:	64 e0       	ldi	r22, 0x04	; 4
    183c:	40 e0       	ldi	r20, 0x00	; 0
    183e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    1842:	81 e0       	ldi	r24, 0x01	; 1
    1844:	65 e0       	ldi	r22, 0x05	; 5
    1846:	41 e0       	ldi	r20, 0x01	; 1
    1848:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN ,  LOW);
    184c:	81 e0       	ldi	r24, 0x01	; 1
    184e:	66 e0       	ldi	r22, 0x06	; 6
    1850:	40 e0       	ldi	r20, 0x00	; 0
    1852:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1856:	47 c0       	rjmp	.+142    	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
	  break;
 ///**case number is 8 turn on all LEDs_ ****************************//
	  case   8:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    1858:	81 e0       	ldi	r24, 0x01	; 1
    185a:	60 e0       	ldi	r22, 0x00	; 0
    185c:	41 e0       	ldi	r20, 0x01	; 1
    185e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    1862:	81 e0       	ldi	r24, 0x01	; 1
    1864:	61 e0       	ldi	r22, 0x01	; 1
    1866:	41 e0       	ldi	r20, 0x01	; 1
    1868:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    186c:	81 e0       	ldi	r24, 0x01	; 1
    186e:	62 e0       	ldi	r22, 0x02	; 2
    1870:	41 e0       	ldi	r20, 0x01	; 1
    1872:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    1876:	81 e0       	ldi	r24, 0x01	; 1
    1878:	63 e0       	ldi	r22, 0x03	; 3
    187a:	41 e0       	ldi	r20, 0x01	; 1
    187c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN , HIGH);
    1880:	81 e0       	ldi	r24, 0x01	; 1
    1882:	64 e0       	ldi	r22, 0x04	; 4
    1884:	41 e0       	ldi	r20, 0x01	; 1
    1886:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    188a:	81 e0       	ldi	r24, 0x01	; 1
    188c:	65 e0       	ldi	r22, 0x05	; 5
    188e:	41 e0       	ldi	r20, 0x01	; 1
    1890:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    1894:	81 e0       	ldi	r24, 0x01	; 1
    1896:	66 e0       	ldi	r22, 0x06	; 6
    1898:	41 e0       	ldi	r20, 0x01	; 1
    189a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    189e:	23 c0       	rjmp	.+70     	; 0x18e6 <H_SSD_Void_SsdDisplay+0x81a>
	  break;
  ///**case number is 9 turn on all LEDs_ and turn off  LED_E**//
	  case   9:
		  M_DIO_void_SetPinValue(SSEG_LED_A_PORT, SSEG_LED_A_PIN , HIGH);
    18a0:	81 e0       	ldi	r24, 0x01	; 1
    18a2:	60 e0       	ldi	r22, 0x00	; 0
    18a4:	41 e0       	ldi	r20, 0x01	; 1
    18a6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_B_PORT, SSEG_LED_B_PIN , HIGH);
    18aa:	81 e0       	ldi	r24, 0x01	; 1
    18ac:	61 e0       	ldi	r22, 0x01	; 1
    18ae:	41 e0       	ldi	r20, 0x01	; 1
    18b0:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_C_PORT, SSEG_LED_C_PIN , HIGH);
    18b4:	81 e0       	ldi	r24, 0x01	; 1
    18b6:	62 e0       	ldi	r22, 0x02	; 2
    18b8:	41 e0       	ldi	r20, 0x01	; 1
    18ba:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_D_PORT, SSEG_LED_D_PIN , HIGH);
    18be:	81 e0       	ldi	r24, 0x01	; 1
    18c0:	63 e0       	ldi	r22, 0x03	; 3
    18c2:	41 e0       	ldi	r20, 0x01	; 1
    18c4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_E_PORT, SSEG_LED_E_PIN ,  LOW);
    18c8:	81 e0       	ldi	r24, 0x01	; 1
    18ca:	64 e0       	ldi	r22, 0x04	; 4
    18cc:	40 e0       	ldi	r20, 0x00	; 0
    18ce:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_F_PORT, SSEG_LED_F_PIN , HIGH);
    18d2:	81 e0       	ldi	r24, 0x01	; 1
    18d4:	65 e0       	ldi	r22, 0x05	; 5
    18d6:	41 e0       	ldi	r20, 0x01	; 1
    18d8:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		  M_DIO_void_SetPinValue(SSEG_LED_G_PORT, SSEG_LED_G_PIN , HIGH);
    18dc:	81 e0       	ldi	r24, 0x01	; 1
    18de:	66 e0       	ldi	r22, 0x06	; 6
    18e0:	41 e0       	ldi	r20, 0x01	; 1
    18e2:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
 * Disable the SSEG_EN1_PIN = SetBit HIGH
 * and
 * Enable the SSEG_EN2_PIN = SetBit LOW
 *
 */
     M_DIO_void_SetPinValue(SSEG_EN1_PORT, SSEG_EN1_PIN, HIGH);
    18e6:	83 e0       	ldi	r24, 0x03	; 3
    18e8:	66 e0       	ldi	r22, 0x06	; 6
    18ea:	41 e0       	ldi	r20, 0x01	; 1
    18ec:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
     M_DIO_void_SetPinValue(SSEG_EN2_PORT, SSEG_EN2_PIN, LOW);
    18f0:	83 e0       	ldi	r24, 0x03	; 3
    18f2:	67 e0       	ldi	r22, 0x07	; 7
    18f4:	40 e0       	ldi	r20, 0x00	; 0
    18f6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    18fa:	80 e0       	ldi	r24, 0x00	; 0
    18fc:	90 e0       	ldi	r25, 0x00	; 0
    18fe:	a0 e8       	ldi	r26, 0x80	; 128
    1900:	bf e3       	ldi	r27, 0x3F	; 63
    1902:	8b 87       	std	Y+11, r24	; 0x0b
    1904:	9c 87       	std	Y+12, r25	; 0x0c
    1906:	ad 87       	std	Y+13, r26	; 0x0d
    1908:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    190a:	6b 85       	ldd	r22, Y+11	; 0x0b
    190c:	7c 85       	ldd	r23, Y+12	; 0x0c
    190e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1910:	9e 85       	ldd	r25, Y+14	; 0x0e
    1912:	20 e0       	ldi	r18, 0x00	; 0
    1914:	30 e0       	ldi	r19, 0x00	; 0
    1916:	4a e7       	ldi	r20, 0x7A	; 122
    1918:	53 e4       	ldi	r21, 0x43	; 67
    191a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    191e:	dc 01       	movw	r26, r24
    1920:	cb 01       	movw	r24, r22
    1922:	8f 83       	std	Y+7, r24	; 0x07
    1924:	98 87       	std	Y+8, r25	; 0x08
    1926:	a9 87       	std	Y+9, r26	; 0x09
    1928:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    192a:	6f 81       	ldd	r22, Y+7	; 0x07
    192c:	78 85       	ldd	r23, Y+8	; 0x08
    192e:	89 85       	ldd	r24, Y+9	; 0x09
    1930:	9a 85       	ldd	r25, Y+10	; 0x0a
    1932:	20 e0       	ldi	r18, 0x00	; 0
    1934:	30 e0       	ldi	r19, 0x00	; 0
    1936:	40 e8       	ldi	r20, 0x80	; 128
    1938:	5f e3       	ldi	r21, 0x3F	; 63
    193a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    193e:	88 23       	and	r24, r24
    1940:	2c f4       	brge	.+10     	; 0x194c <H_SSD_Void_SsdDisplay+0x880>
		__ticks = 1;
    1942:	81 e0       	ldi	r24, 0x01	; 1
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	9e 83       	std	Y+6, r25	; 0x06
    1948:	8d 83       	std	Y+5, r24	; 0x05
    194a:	3f c0       	rjmp	.+126    	; 0x19ca <H_SSD_Void_SsdDisplay+0x8fe>
	else if (__tmp > 65535)
    194c:	6f 81       	ldd	r22, Y+7	; 0x07
    194e:	78 85       	ldd	r23, Y+8	; 0x08
    1950:	89 85       	ldd	r24, Y+9	; 0x09
    1952:	9a 85       	ldd	r25, Y+10	; 0x0a
    1954:	20 e0       	ldi	r18, 0x00	; 0
    1956:	3f ef       	ldi	r19, 0xFF	; 255
    1958:	4f e7       	ldi	r20, 0x7F	; 127
    195a:	57 e4       	ldi	r21, 0x47	; 71
    195c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1960:	18 16       	cp	r1, r24
    1962:	4c f5       	brge	.+82     	; 0x19b6 <H_SSD_Void_SsdDisplay+0x8ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1964:	6b 85       	ldd	r22, Y+11	; 0x0b
    1966:	7c 85       	ldd	r23, Y+12	; 0x0c
    1968:	8d 85       	ldd	r24, Y+13	; 0x0d
    196a:	9e 85       	ldd	r25, Y+14	; 0x0e
    196c:	20 e0       	ldi	r18, 0x00	; 0
    196e:	30 e0       	ldi	r19, 0x00	; 0
    1970:	40 e2       	ldi	r20, 0x20	; 32
    1972:	51 e4       	ldi	r21, 0x41	; 65
    1974:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1978:	dc 01       	movw	r26, r24
    197a:	cb 01       	movw	r24, r22
    197c:	bc 01       	movw	r22, r24
    197e:	cd 01       	movw	r24, r26
    1980:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1984:	dc 01       	movw	r26, r24
    1986:	cb 01       	movw	r24, r22
    1988:	9e 83       	std	Y+6, r25	; 0x06
    198a:	8d 83       	std	Y+5, r24	; 0x05
    198c:	0f c0       	rjmp	.+30     	; 0x19ac <H_SSD_Void_SsdDisplay+0x8e0>
    198e:	89 e1       	ldi	r24, 0x19	; 25
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	9c 83       	std	Y+4, r25	; 0x04
    1994:	8b 83       	std	Y+3, r24	; 0x03
    1996:	8b 81       	ldd	r24, Y+3	; 0x03
    1998:	9c 81       	ldd	r25, Y+4	; 0x04
    199a:	01 97       	sbiw	r24, 0x01	; 1
    199c:	f1 f7       	brne	.-4      	; 0x199a <H_SSD_Void_SsdDisplay+0x8ce>
    199e:	9c 83       	std	Y+4, r25	; 0x04
    19a0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19a2:	8d 81       	ldd	r24, Y+5	; 0x05
    19a4:	9e 81       	ldd	r25, Y+6	; 0x06
    19a6:	01 97       	sbiw	r24, 0x01	; 1
    19a8:	9e 83       	std	Y+6, r25	; 0x06
    19aa:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19ac:	8d 81       	ldd	r24, Y+5	; 0x05
    19ae:	9e 81       	ldd	r25, Y+6	; 0x06
    19b0:	00 97       	sbiw	r24, 0x00	; 0
    19b2:	69 f7       	brne	.-38     	; 0x198e <H_SSD_Void_SsdDisplay+0x8c2>
    19b4:	14 c0       	rjmp	.+40     	; 0x19de <H_SSD_Void_SsdDisplay+0x912>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19b6:	6f 81       	ldd	r22, Y+7	; 0x07
    19b8:	78 85       	ldd	r23, Y+8	; 0x08
    19ba:	89 85       	ldd	r24, Y+9	; 0x09
    19bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    19be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19c2:	dc 01       	movw	r26, r24
    19c4:	cb 01       	movw	r24, r22
    19c6:	9e 83       	std	Y+6, r25	; 0x06
    19c8:	8d 83       	std	Y+5, r24	; 0x05
    19ca:	8d 81       	ldd	r24, Y+5	; 0x05
    19cc:	9e 81       	ldd	r25, Y+6	; 0x06
    19ce:	9a 83       	std	Y+2, r25	; 0x02
    19d0:	89 83       	std	Y+1, r24	; 0x01
    19d2:	89 81       	ldd	r24, Y+1	; 0x01
    19d4:	9a 81       	ldd	r25, Y+2	; 0x02
    19d6:	01 97       	sbiw	r24, 0x01	; 1
    19d8:	f1 f7       	brne	.-4      	; 0x19d6 <H_SSD_Void_SsdDisplay+0x90a>
    19da:	9a 83       	std	Y+2, r25	; 0x02
    19dc:	89 83       	std	Y+1, r24	; 0x01
          _delay_ms(SSD_DELAY_TIME); ///delay for one mile second
	 M_DIO_void_SetPinValue(SSEG_EN2_PORT, SSEG_EN2_PIN, HIGH);
    19de:	83 e0       	ldi	r24, 0x03	; 3
    19e0:	67 e0       	ldi	r22, 0x07	; 7
    19e2:	41 e0       	ldi	r20, 0x01	; 1
    19e4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
	 u8 Local_u8_Units = Local_u8_Num %10;
 ///***** Local_u8_Tens is a local variable to get Tens number *******//
	 u8 Local_u8_Tens  = Local_u8_Num / 10;
	 u8 Local_U8_Conter ;
	 ///*******for loop to Repeat  the number displayed  to be able to see it*******///
	 for (Local_U8_Conter=0;Local_U8_Conter<200;Local_U8_Conter++)
    19e8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    19ea:	8f 5f       	subi	r24, 0xFF	; 255
    19ec:	8d 8f       	std	Y+29, r24	; 0x1d
    19ee:	8d 8d       	ldd	r24, Y+29	; 0x1d
    19f0:	88 3c       	cpi	r24, 0xC8	; 200
    19f2:	08 f4       	brcc	.+2      	; 0x19f6 <H_SSD_Void_SsdDisplay+0x92a>
    19f4:	85 cb       	rjmp	.-2294   	; 0x1100 <H_SSD_Void_SsdDisplay+0x34>
     M_DIO_void_SetPinValue(SSEG_EN2_PORT, SSEG_EN2_PIN, LOW);
          _delay_ms(SSD_DELAY_TIME); ///delay for one mile second
	 M_DIO_void_SetPinValue(SSEG_EN2_PORT, SSEG_EN2_PIN, HIGH);

}
}
    19f6:	a4 96       	adiw	r28, 0x24	; 36
    19f8:	0f b6       	in	r0, 0x3f	; 63
    19fa:	f8 94       	cli
    19fc:	de bf       	out	0x3e, r29	; 62
    19fe:	0f be       	out	0x3f, r0	; 63
    1a00:	cd bf       	out	0x3d, r28	; 61
    1a02:	cf 91       	pop	r28
    1a04:	df 91       	pop	r29
    1a06:	08 95       	ret

00001a08 <H_SSD_Void_SsdDisplayCountDown>:
///***********to count down and display numbers*******/
void H_SSD_Void_SsdDisplayCountDown(u8 Local_u8_num)
{
    1a08:	df 93       	push	r29
    1a0a:	cf 93       	push	r28
    1a0c:	00 d0       	rcall	.+0      	; 0x1a0e <H_SSD_Void_SsdDisplayCountDown+0x6>
    1a0e:	cd b7       	in	r28, 0x3d	; 61
    1a10:	de b7       	in	r29, 0x3e	; 62
    1a12:	8a 83       	std	Y+2, r24	; 0x02

	   s8 Local_s8_Counter = 0;   ////for loop local counter
    1a14:	19 82       	std	Y+1, r1	; 0x01
   /////for loop to count down the number entered from the user
	 for(  Local_s8_Counter  = Local_u8_num ; Local_s8_Counter >=0 ; Local_s8_Counter--)
    1a16:	8a 81       	ldd	r24, Y+2	; 0x02
    1a18:	89 83       	std	Y+1, r24	; 0x01
    1a1a:	06 c0       	rjmp	.+12     	; 0x1a28 <H_SSD_Void_SsdDisplayCountDown+0x20>
	     {
		     /////calling  H_SSD_Void_SsdDisplay to display numbers counted down
			H_SSD_Void_SsdDisplay(Local_s8_Counter);
    1a1c:	89 81       	ldd	r24, Y+1	; 0x01
    1a1e:	0e 94 66 08 	call	0x10cc	; 0x10cc <H_SSD_Void_SsdDisplay>
void H_SSD_Void_SsdDisplayCountDown(u8 Local_u8_num)
{

	   s8 Local_s8_Counter = 0;   ////for loop local counter
   /////for loop to count down the number entered from the user
	 for(  Local_s8_Counter  = Local_u8_num ; Local_s8_Counter >=0 ; Local_s8_Counter--)
    1a22:	89 81       	ldd	r24, Y+1	; 0x01
    1a24:	81 50       	subi	r24, 0x01	; 1
    1a26:	89 83       	std	Y+1, r24	; 0x01
    1a28:	89 81       	ldd	r24, Y+1	; 0x01
    1a2a:	88 23       	and	r24, r24
    1a2c:	bc f7       	brge	.-18     	; 0x1a1c <H_SSD_Void_SsdDisplayCountDown+0x14>
		     /////calling  H_SSD_Void_SsdDisplay to display numbers counted down
			H_SSD_Void_SsdDisplay(Local_s8_Counter);
		 }


}
    1a2e:	0f 90       	pop	r0
    1a30:	0f 90       	pop	r0
    1a32:	cf 91       	pop	r28
    1a34:	df 91       	pop	r29
    1a36:	08 95       	ret

00001a38 <H_LED_Void_LedInit>:
#include "LED_Int.h"
#include "LED_Priv.h"

///******************_Initialization Function to Set Pins direction_***********///
void H_LED_Void_LedInit(u8 Local_u8_ledId)
{
    1a38:	df 93       	push	r29
    1a3a:	cf 93       	push	r28
    1a3c:	00 d0       	rcall	.+0      	; 0x1a3e <H_LED_Void_LedInit+0x6>
    1a3e:	0f 92       	push	r0
    1a40:	cd b7       	in	r28, 0x3d	; 61
    1a42:	de b7       	in	r29, 0x3e	; 62
    1a44:	89 83       	std	Y+1, r24	; 0x01
	///***switch case to loop on LEDs****//
	switch(Local_u8_ledId)
    1a46:	89 81       	ldd	r24, Y+1	; 0x01
    1a48:	28 2f       	mov	r18, r24
    1a4a:	30 e0       	ldi	r19, 0x00	; 0
    1a4c:	3b 83       	std	Y+3, r19	; 0x03
    1a4e:	2a 83       	std	Y+2, r18	; 0x02
    1a50:	8a 81       	ldd	r24, Y+2	; 0x02
    1a52:	9b 81       	ldd	r25, Y+3	; 0x03
    1a54:	82 30       	cpi	r24, 0x02	; 2
    1a56:	91 05       	cpc	r25, r1
    1a58:	11 f1       	breq	.+68     	; 0x1a9e <H_LED_Void_LedInit+0x66>
    1a5a:	2a 81       	ldd	r18, Y+2	; 0x02
    1a5c:	3b 81       	ldd	r19, Y+3	; 0x03
    1a5e:	23 30       	cpi	r18, 0x03	; 3
    1a60:	31 05       	cpc	r19, r1
    1a62:	34 f4       	brge	.+12     	; 0x1a70 <H_LED_Void_LedInit+0x38>
    1a64:	8a 81       	ldd	r24, Y+2	; 0x02
    1a66:	9b 81       	ldd	r25, Y+3	; 0x03
    1a68:	81 30       	cpi	r24, 0x01	; 1
    1a6a:	91 05       	cpc	r25, r1
    1a6c:	61 f0       	breq	.+24     	; 0x1a86 <H_LED_Void_LedInit+0x4e>
    1a6e:	22 c0       	rjmp	.+68     	; 0x1ab4 <H_LED_Void_LedInit+0x7c>
    1a70:	2a 81       	ldd	r18, Y+2	; 0x02
    1a72:	3b 81       	ldd	r19, Y+3	; 0x03
    1a74:	23 30       	cpi	r18, 0x03	; 3
    1a76:	31 05       	cpc	r19, r1
    1a78:	61 f0       	breq	.+24     	; 0x1a92 <H_LED_Void_LedInit+0x5a>
    1a7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a7c:	9b 81       	ldd	r25, Y+3	; 0x03
    1a7e:	84 30       	cpi	r24, 0x04	; 4
    1a80:	91 05       	cpc	r25, r1
    1a82:	99 f0       	breq	.+38     	; 0x1aaa <H_LED_Void_LedInit+0x72>
    1a84:	17 c0       	rjmp	.+46     	; 0x1ab4 <H_LED_Void_LedInit+0x7c>
	{
	///******_Setting RED_LED Pin direction to OUTPUT _***********///
	case RED_LED:
		M_DIO_void_SetPinDirection(RED_LED_PORT, RED_LED_PIN, OUTPUT);
    1a86:	83 e0       	ldi	r24, 0x03	; 3
    1a88:	60 e0       	ldi	r22, 0x00	; 0
    1a8a:	41 e0       	ldi	r20, 0x01	; 1
    1a8c:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
    1a90:	11 c0       	rjmp	.+34     	; 0x1ab4 <H_LED_Void_LedInit+0x7c>
		break;
	///******_Setting GRN_LED Pin direction to OUTPUT _***********///
	case GRN_LED :
		M_DIO_void_SetPinDirection(GRN_LED_PORT ,GRN_LED_PIN , OUTPUT);
    1a92:	83 e0       	ldi	r24, 0x03	; 3
    1a94:	61 e0       	ldi	r22, 0x01	; 1
    1a96:	41 e0       	ldi	r20, 0x01	; 1
    1a98:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
    1a9c:	0b c0       	rjmp	.+22     	; 0x1ab4 <H_LED_Void_LedInit+0x7c>
		break;
   ///******_Setting BLUE_LED Pin direction to OUTPUT _***********///
	case BLUE_LED:
		M_DIO_void_SetPinDirection(BLUE_LED_PORT,BLUE_LED_PIN ,OUTPUT);
    1a9e:	83 e0       	ldi	r24, 0x03	; 3
    1aa0:	62 e0       	ldi	r22, 0x02	; 2
    1aa2:	41 e0       	ldi	r20, 0x01	; 1
    1aa4:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
    1aa8:	05 c0       	rjmp	.+10     	; 0x1ab4 <H_LED_Void_LedInit+0x7c>
		break;
   ///******_Setting YELLOW_LED Pin direction to OUTPUT _***********///
	case YELLOW_LED:
			M_DIO_void_SetPinDirection(YELLOW_LED_PORT,YELLOW_LED_PIN ,OUTPUT);
    1aaa:	83 e0       	ldi	r24, 0x03	; 3
    1aac:	63 e0       	ldi	r22, 0x03	; 3
    1aae:	41 e0       	ldi	r20, 0x01	; 1
    1ab0:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_SetPinDirection>
			break;
	default :               /*****error*****/                      break;
	}

}
    1ab4:	0f 90       	pop	r0
    1ab6:	0f 90       	pop	r0
    1ab8:	0f 90       	pop	r0
    1aba:	cf 91       	pop	r28
    1abc:	df 91       	pop	r29
    1abe:	08 95       	ret

00001ac0 <H_LED_Void_LedOn>:
void H_LED_Void_LedOn(u8 Local_u8_led)
{
    1ac0:	df 93       	push	r29
    1ac2:	cf 93       	push	r28
    1ac4:	00 d0       	rcall	.+0      	; 0x1ac6 <H_LED_Void_LedOn+0x6>
    1ac6:	0f 92       	push	r0
    1ac8:	cd b7       	in	r28, 0x3d	; 61
    1aca:	de b7       	in	r29, 0x3e	; 62
    1acc:	89 83       	std	Y+1, r24	; 0x01
	///***switch case to loop on LEDs****//
	switch(Local_u8_led)
    1ace:	89 81       	ldd	r24, Y+1	; 0x01
    1ad0:	28 2f       	mov	r18, r24
    1ad2:	30 e0       	ldi	r19, 0x00	; 0
    1ad4:	3b 83       	std	Y+3, r19	; 0x03
    1ad6:	2a 83       	std	Y+2, r18	; 0x02
    1ad8:	8a 81       	ldd	r24, Y+2	; 0x02
    1ada:	9b 81       	ldd	r25, Y+3	; 0x03
    1adc:	82 30       	cpi	r24, 0x02	; 2
    1ade:	91 05       	cpc	r25, r1
    1ae0:	11 f1       	breq	.+68     	; 0x1b26 <H_LED_Void_LedOn+0x66>
    1ae2:	2a 81       	ldd	r18, Y+2	; 0x02
    1ae4:	3b 81       	ldd	r19, Y+3	; 0x03
    1ae6:	23 30       	cpi	r18, 0x03	; 3
    1ae8:	31 05       	cpc	r19, r1
    1aea:	34 f4       	brge	.+12     	; 0x1af8 <H_LED_Void_LedOn+0x38>
    1aec:	8a 81       	ldd	r24, Y+2	; 0x02
    1aee:	9b 81       	ldd	r25, Y+3	; 0x03
    1af0:	81 30       	cpi	r24, 0x01	; 1
    1af2:	91 05       	cpc	r25, r1
    1af4:	61 f0       	breq	.+24     	; 0x1b0e <H_LED_Void_LedOn+0x4e>
    1af6:	22 c0       	rjmp	.+68     	; 0x1b3c <H_LED_Void_LedOn+0x7c>
    1af8:	2a 81       	ldd	r18, Y+2	; 0x02
    1afa:	3b 81       	ldd	r19, Y+3	; 0x03
    1afc:	23 30       	cpi	r18, 0x03	; 3
    1afe:	31 05       	cpc	r19, r1
    1b00:	61 f0       	breq	.+24     	; 0x1b1a <H_LED_Void_LedOn+0x5a>
    1b02:	8a 81       	ldd	r24, Y+2	; 0x02
    1b04:	9b 81       	ldd	r25, Y+3	; 0x03
    1b06:	84 30       	cpi	r24, 0x04	; 4
    1b08:	91 05       	cpc	r25, r1
    1b0a:	99 f0       	breq	.+38     	; 0x1b32 <H_LED_Void_LedOn+0x72>
    1b0c:	17 c0       	rjmp	.+46     	; 0x1b3c <H_LED_Void_LedOn+0x7c>
		{
	    ///******_Setting RED_LED Pin Value to HIGH to Light it_***********///
		case RED_LED:
             M_DIO_void_SetPinValue(RED_LED_PORT, RED_LED_PIN, HIGH);
    1b0e:	83 e0       	ldi	r24, 0x03	; 3
    1b10:	60 e0       	ldi	r22, 0x00	; 0
    1b12:	41 e0       	ldi	r20, 0x01	; 1
    1b14:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1b18:	11 c0       	rjmp	.+34     	; 0x1b3c <H_LED_Void_LedOn+0x7c>
		break;
		///******_Setting GRN_LED Pin Value to HIGH to Light it_***********///
		case GRN_LED :
             M_DIO_void_SetPinValue(GRN_LED_PORT, GRN_LED_PIN, HIGH);
    1b1a:	83 e0       	ldi	r24, 0x03	; 3
    1b1c:	61 e0       	ldi	r22, 0x01	; 1
    1b1e:	41 e0       	ldi	r20, 0x01	; 1
    1b20:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1b24:	0b c0       	rjmp	.+22     	; 0x1b3c <H_LED_Void_LedOn+0x7c>
        break;
        ///******_Setting BLUE_LED Pin Value to HIGH to Light it_***********///
		case BLUE_LED :
             M_DIO_void_SetPinValue(BLUE_LED_PORT,BLUE_LED_PIN, HIGH);
    1b26:	83 e0       	ldi	r24, 0x03	; 3
    1b28:	62 e0       	ldi	r22, 0x02	; 2
    1b2a:	41 e0       	ldi	r20, 0x01	; 1
    1b2c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1b30:	05 c0       	rjmp	.+10     	; 0x1b3c <H_LED_Void_LedOn+0x7c>
   		break;
   		///******_Setting YELLOW_LED Pin Value to HIGH to Light it_***********///
		case YELLOW_LED :
		             M_DIO_void_SetPinValue(YELLOW_LED_PORT,YELLOW_LED_PIN, HIGH);
    1b32:	83 e0       	ldi	r24, 0x03	; 3
    1b34:	63 e0       	ldi	r22, 0x03	; 3
    1b36:	41 e0       	ldi	r20, 0x01	; 1
    1b38:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		   		break;
		default :          /*****error*****/         break;
		}

}
    1b3c:	0f 90       	pop	r0
    1b3e:	0f 90       	pop	r0
    1b40:	0f 90       	pop	r0
    1b42:	cf 91       	pop	r28
    1b44:	df 91       	pop	r29
    1b46:	08 95       	ret

00001b48 <H_LED_Void_LedOff>:
void H_LED_Void_LedOff(u8 Local_u8_led)
{
    1b48:	df 93       	push	r29
    1b4a:	cf 93       	push	r28
    1b4c:	00 d0       	rcall	.+0      	; 0x1b4e <H_LED_Void_LedOff+0x6>
    1b4e:	0f 92       	push	r0
    1b50:	cd b7       	in	r28, 0x3d	; 61
    1b52:	de b7       	in	r29, 0x3e	; 62
    1b54:	89 83       	std	Y+1, r24	; 0x01
	///***switch case to loop on LEDs****//
	switch(Local_u8_led)
    1b56:	89 81       	ldd	r24, Y+1	; 0x01
    1b58:	28 2f       	mov	r18, r24
    1b5a:	30 e0       	ldi	r19, 0x00	; 0
    1b5c:	3b 83       	std	Y+3, r19	; 0x03
    1b5e:	2a 83       	std	Y+2, r18	; 0x02
    1b60:	8a 81       	ldd	r24, Y+2	; 0x02
    1b62:	9b 81       	ldd	r25, Y+3	; 0x03
    1b64:	82 30       	cpi	r24, 0x02	; 2
    1b66:	91 05       	cpc	r25, r1
    1b68:	b1 f0       	breq	.+44     	; 0x1b96 <H_LED_Void_LedOff+0x4e>
    1b6a:	2a 81       	ldd	r18, Y+2	; 0x02
    1b6c:	3b 81       	ldd	r19, Y+3	; 0x03
    1b6e:	23 30       	cpi	r18, 0x03	; 3
    1b70:	31 05       	cpc	r19, r1
    1b72:	34 f4       	brge	.+12     	; 0x1b80 <H_LED_Void_LedOff+0x38>
    1b74:	8a 81       	ldd	r24, Y+2	; 0x02
    1b76:	9b 81       	ldd	r25, Y+3	; 0x03
    1b78:	81 30       	cpi	r24, 0x01	; 1
    1b7a:	91 05       	cpc	r25, r1
    1b7c:	91 f0       	breq	.+36     	; 0x1ba2 <H_LED_Void_LedOff+0x5a>
    1b7e:	22 c0       	rjmp	.+68     	; 0x1bc4 <H_LED_Void_LedOff+0x7c>
    1b80:	2a 81       	ldd	r18, Y+2	; 0x02
    1b82:	3b 81       	ldd	r19, Y+3	; 0x03
    1b84:	23 30       	cpi	r18, 0x03	; 3
    1b86:	31 05       	cpc	r19, r1
    1b88:	91 f0       	breq	.+36     	; 0x1bae <H_LED_Void_LedOff+0x66>
    1b8a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b8c:	9b 81       	ldd	r25, Y+3	; 0x03
    1b8e:	84 30       	cpi	r24, 0x04	; 4
    1b90:	91 05       	cpc	r25, r1
    1b92:	99 f0       	breq	.+38     	; 0x1bba <H_LED_Void_LedOff+0x72>
    1b94:	17 c0       	rjmp	.+46     	; 0x1bc4 <H_LED_Void_LedOff+0x7c>
			{
			///******_Setting BLUE_LED Pin Value to LOW to Turn it OFF_***********///
			case BLUE_LED:
				M_DIO_void_SetPinValue(BLUE_LED_PORT, BLUE_LED_PIN, LOW);
    1b96:	83 e0       	ldi	r24, 0x03	; 3
    1b98:	62 e0       	ldi	r22, 0x02	; 2
    1b9a:	40 e0       	ldi	r20, 0x00	; 0
    1b9c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1ba0:	11 c0       	rjmp	.+34     	; 0x1bc4 <H_LED_Void_LedOff+0x7c>
			break;
			///******_Setting RED_LED Pin Value to LOW to Turn it OFF_***********///
			case RED_LED :
				M_DIO_void_SetPinValue(RED_LED_PORT ,RED_LED_PIN, LOW);
    1ba2:	83 e0       	ldi	r24, 0x03	; 3
    1ba4:	60 e0       	ldi	r22, 0x00	; 0
    1ba6:	40 e0       	ldi	r20, 0x00	; 0
    1ba8:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1bac:	0b c0       	rjmp	.+22     	; 0x1bc4 <H_LED_Void_LedOff+0x7c>
			break;
			///******_Setting GRN_LED Pin Value to LOW to Turn it OFF_***********///
			case GRN_LED :
				M_DIO_void_SetPinValue(GRN_LED_PORT,GRN_LED_PIN, LOW);
    1bae:	83 e0       	ldi	r24, 0x03	; 3
    1bb0:	61 e0       	ldi	r22, 0x01	; 1
    1bb2:	40 e0       	ldi	r20, 0x00	; 0
    1bb4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1bb8:	05 c0       	rjmp	.+10     	; 0x1bc4 <H_LED_Void_LedOff+0x7c>
			break;
			///******_Setting YELLOW_LED Pin Value to LOW to Turn it OFF_***********///
			case YELLOW_LED :
			    M_DIO_void_SetPinValue(YELLOW_LED_PORT,YELLOW_LED_PIN, LOW);
    1bba:	83 e0       	ldi	r24, 0x03	; 3
    1bbc:	63 e0       	ldi	r22, 0x03	; 3
    1bbe:	40 e0       	ldi	r20, 0x00	; 0
    1bc0:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
					   		break;
			default :           /*****error*****/         break;
			}

}
    1bc4:	0f 90       	pop	r0
    1bc6:	0f 90       	pop	r0
    1bc8:	0f 90       	pop	r0
    1bca:	cf 91       	pop	r28
    1bcc:	df 91       	pop	r29
    1bce:	08 95       	ret

00001bd0 <H_LED_Void_LedTogg>:
void H_LED_Void_LedTogg(u8 Local_u8_led)
{
    1bd0:	df 93       	push	r29
    1bd2:	cf 93       	push	r28
    1bd4:	00 d0       	rcall	.+0      	; 0x1bd6 <H_LED_Void_LedTogg+0x6>
    1bd6:	0f 92       	push	r0
    1bd8:	cd b7       	in	r28, 0x3d	; 61
    1bda:	de b7       	in	r29, 0x3e	; 62
    1bdc:	89 83       	std	Y+1, r24	; 0x01
	///***switch case to loop on LEDs****//
	switch(Local_u8_led)
    1bde:	89 81       	ldd	r24, Y+1	; 0x01
    1be0:	28 2f       	mov	r18, r24
    1be2:	30 e0       	ldi	r19, 0x00	; 0
    1be4:	3b 83       	std	Y+3, r19	; 0x03
    1be6:	2a 83       	std	Y+2, r18	; 0x02
    1be8:	8a 81       	ldd	r24, Y+2	; 0x02
    1bea:	9b 81       	ldd	r25, Y+3	; 0x03
    1bec:	82 30       	cpi	r24, 0x02	; 2
    1bee:	91 05       	cpc	r25, r1
    1bf0:	b1 f0       	breq	.+44     	; 0x1c1e <H_LED_Void_LedTogg+0x4e>
    1bf2:	2a 81       	ldd	r18, Y+2	; 0x02
    1bf4:	3b 81       	ldd	r19, Y+3	; 0x03
    1bf6:	23 30       	cpi	r18, 0x03	; 3
    1bf8:	31 05       	cpc	r19, r1
    1bfa:	34 f4       	brge	.+12     	; 0x1c08 <H_LED_Void_LedTogg+0x38>
    1bfc:	8a 81       	ldd	r24, Y+2	; 0x02
    1bfe:	9b 81       	ldd	r25, Y+3	; 0x03
    1c00:	81 30       	cpi	r24, 0x01	; 1
    1c02:	91 05       	cpc	r25, r1
    1c04:	89 f0       	breq	.+34     	; 0x1c28 <H_LED_Void_LedTogg+0x58>
    1c06:	1e c0       	rjmp	.+60     	; 0x1c44 <H_LED_Void_LedTogg+0x74>
    1c08:	2a 81       	ldd	r18, Y+2	; 0x02
    1c0a:	3b 81       	ldd	r19, Y+3	; 0x03
    1c0c:	23 30       	cpi	r18, 0x03	; 3
    1c0e:	31 05       	cpc	r19, r1
    1c10:	81 f0       	breq	.+32     	; 0x1c32 <H_LED_Void_LedTogg+0x62>
    1c12:	8a 81       	ldd	r24, Y+2	; 0x02
    1c14:	9b 81       	ldd	r25, Y+3	; 0x03
    1c16:	84 30       	cpi	r24, 0x04	; 4
    1c18:	91 05       	cpc	r25, r1
    1c1a:	81 f0       	breq	.+32     	; 0x1c3c <H_LED_Void_LedTogg+0x6c>
    1c1c:	13 c0       	rjmp	.+38     	; 0x1c44 <H_LED_Void_LedTogg+0x74>
		{
		  ///******_ Toggle  BLUE_LED Pin Value _***********///
		  case BLUE_LED:
			  M_DIO_void_PinTog(BLUE_LED_PORT, BLUE_LED_PIN);
    1c1e:	83 e0       	ldi	r24, 0x03	; 3
    1c20:	62 e0       	ldi	r22, 0x02	; 2
    1c22:	0e 94 af 07 	call	0xf5e	; 0xf5e <M_DIO_void_PinTog>
    1c26:	0e c0       	rjmp	.+28     	; 0x1c44 <H_LED_Void_LedTogg+0x74>
		  break;
		  ///******_ Toggle  RED_LED Pin Value _******************///
		  case RED_LED :
			  M_DIO_void_PinTog(RED_LED_PORT, RED_LED_PIN);
    1c28:	83 e0       	ldi	r24, 0x03	; 3
    1c2a:	60 e0       	ldi	r22, 0x00	; 0
    1c2c:	0e 94 af 07 	call	0xf5e	; 0xf5e <M_DIO_void_PinTog>
    1c30:	09 c0       	rjmp	.+18     	; 0x1c44 <H_LED_Void_LedTogg+0x74>
		  break;
		  ///******_ Toggle  GRN_LED Pin Value _******************///
		  case GRN_LED :
			  M_DIO_void_PinTog(GRN_LED_PORT, GRN_LED_PIN);
    1c32:	83 e0       	ldi	r24, 0x03	; 3
    1c34:	61 e0       	ldi	r22, 0x01	; 1
    1c36:	0e 94 af 07 	call	0xf5e	; 0xf5e <M_DIO_void_PinTog>
    1c3a:	04 c0       	rjmp	.+8      	; 0x1c44 <H_LED_Void_LedTogg+0x74>
		  break;
		  ///******_ Toggle  YELLOW_LED Pin Value _******************///
		  case YELLOW_LED :
			  M_DIO_void_PinTog(YELLOW_LED_PORT,YELLOW_LED_PIN);
    1c3c:	83 e0       	ldi	r24, 0x03	; 3
    1c3e:	63 e0       	ldi	r22, 0x03	; 3
    1c40:	0e 94 af 07 	call	0xf5e	; 0xf5e <M_DIO_void_PinTog>
		  break;

		  default :   /*****error*****/          break;
		}

}
    1c44:	0f 90       	pop	r0
    1c46:	0f 90       	pop	r0
    1c48:	0f 90       	pop	r0
    1c4a:	cf 91       	pop	r28
    1c4c:	df 91       	pop	r29
    1c4e:	08 95       	ret

00001c50 <H_LED_Void_LedBlink>:
void H_LED_Void_LedBlink(u8 Local_u8_led)
{
    1c50:	df 93       	push	r29
    1c52:	cf 93       	push	r28
    1c54:	cd b7       	in	r28, 0x3d	; 61
    1c56:	de b7       	in	r29, 0x3e	; 62
    1c58:	eb 97       	sbiw	r28, 0x3b	; 59
    1c5a:	0f b6       	in	r0, 0x3f	; 63
    1c5c:	f8 94       	cli
    1c5e:	de bf       	out	0x3e, r29	; 62
    1c60:	0f be       	out	0x3f, r0	; 63
    1c62:	cd bf       	out	0x3d, r28	; 61
    1c64:	89 af       	std	Y+57, r24	; 0x39
	///***switch case to loop on LEDs****//
     switch(Local_u8_led)
    1c66:	89 ad       	ldd	r24, Y+57	; 0x39
    1c68:	28 2f       	mov	r18, r24
    1c6a:	30 e0       	ldi	r19, 0x00	; 0
    1c6c:	3b af       	std	Y+59, r19	; 0x3b
    1c6e:	2a af       	std	Y+58, r18	; 0x3a
    1c70:	8a ad       	ldd	r24, Y+58	; 0x3a
    1c72:	9b ad       	ldd	r25, Y+59	; 0x3b
    1c74:	82 30       	cpi	r24, 0x02	; 2
    1c76:	91 05       	cpc	r25, r1
    1c78:	c9 f0       	breq	.+50     	; 0x1cac <H_LED_Void_LedBlink+0x5c>
    1c7a:	2a ad       	ldd	r18, Y+58	; 0x3a
    1c7c:	3b ad       	ldd	r19, Y+59	; 0x3b
    1c7e:	23 30       	cpi	r18, 0x03	; 3
    1c80:	31 05       	cpc	r19, r1
    1c82:	3c f4       	brge	.+14     	; 0x1c92 <H_LED_Void_LedBlink+0x42>
    1c84:	8a ad       	ldd	r24, Y+58	; 0x3a
    1c86:	9b ad       	ldd	r25, Y+59	; 0x3b
    1c88:	81 30       	cpi	r24, 0x01	; 1
    1c8a:	91 05       	cpc	r25, r1
    1c8c:	09 f4       	brne	.+2      	; 0x1c90 <H_LED_Void_LedBlink+0x40>
    1c8e:	8b c0       	rjmp	.+278    	; 0x1da6 <H_LED_Void_LedBlink+0x156>
    1c90:	00 c2       	rjmp	.+1024   	; 0x2092 <H_LED_Void_LedBlink+0x442>
    1c92:	2a ad       	ldd	r18, Y+58	; 0x3a
    1c94:	3b ad       	ldd	r19, Y+59	; 0x3b
    1c96:	23 30       	cpi	r18, 0x03	; 3
    1c98:	31 05       	cpc	r19, r1
    1c9a:	09 f4       	brne	.+2      	; 0x1c9e <H_LED_Void_LedBlink+0x4e>
    1c9c:	01 c1       	rjmp	.+514    	; 0x1ea0 <H_LED_Void_LedBlink+0x250>
    1c9e:	8a ad       	ldd	r24, Y+58	; 0x3a
    1ca0:	9b ad       	ldd	r25, Y+59	; 0x3b
    1ca2:	84 30       	cpi	r24, 0x04	; 4
    1ca4:	91 05       	cpc	r25, r1
    1ca6:	09 f4       	brne	.+2      	; 0x1caa <H_LED_Void_LedBlink+0x5a>
    1ca8:	78 c1       	rjmp	.+752    	; 0x1f9a <H_LED_Void_LedBlink+0x34a>
    1caa:	f3 c1       	rjmp	.+998    	; 0x2092 <H_LED_Void_LedBlink+0x442>
	 	{
        ///******_ Blink  BLUE_LED Pin Value _******************///
	 	case BLUE_LED:
	 		///******_Setting BLUE_LED Pin Value to HIGH to Light it_***********///
	 		M_DIO_void_SetPinValue(BLUE_LED_PORT,BLUE_LED_PIN, HIGH);
    1cac:	83 e0       	ldi	r24, 0x03	; 3
    1cae:	62 e0       	ldi	r22, 0x02	; 2
    1cb0:	41 e0       	ldi	r20, 0x01	; 1
    1cb2:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1cb6:	80 e0       	ldi	r24, 0x00	; 0
    1cb8:	90 e5       	ldi	r25, 0x50	; 80
    1cba:	a3 ec       	ldi	r26, 0xC3	; 195
    1cbc:	b7 e4       	ldi	r27, 0x47	; 71
    1cbe:	8d ab       	std	Y+53, r24	; 0x35
    1cc0:	9e ab       	std	Y+54, r25	; 0x36
    1cc2:	af ab       	std	Y+55, r26	; 0x37
    1cc4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cc6:	6d a9       	ldd	r22, Y+53	; 0x35
    1cc8:	7e a9       	ldd	r23, Y+54	; 0x36
    1cca:	8f a9       	ldd	r24, Y+55	; 0x37
    1ccc:	98 ad       	ldd	r25, Y+56	; 0x38
    1cce:	20 e0       	ldi	r18, 0x00	; 0
    1cd0:	30 e0       	ldi	r19, 0x00	; 0
    1cd2:	4a e7       	ldi	r20, 0x7A	; 122
    1cd4:	53 e4       	ldi	r21, 0x43	; 67
    1cd6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cda:	dc 01       	movw	r26, r24
    1cdc:	cb 01       	movw	r24, r22
    1cde:	89 ab       	std	Y+49, r24	; 0x31
    1ce0:	9a ab       	std	Y+50, r25	; 0x32
    1ce2:	ab ab       	std	Y+51, r26	; 0x33
    1ce4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1ce6:	69 a9       	ldd	r22, Y+49	; 0x31
    1ce8:	7a a9       	ldd	r23, Y+50	; 0x32
    1cea:	8b a9       	ldd	r24, Y+51	; 0x33
    1cec:	9c a9       	ldd	r25, Y+52	; 0x34
    1cee:	20 e0       	ldi	r18, 0x00	; 0
    1cf0:	30 e0       	ldi	r19, 0x00	; 0
    1cf2:	40 e8       	ldi	r20, 0x80	; 128
    1cf4:	5f e3       	ldi	r21, 0x3F	; 63
    1cf6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1cfa:	88 23       	and	r24, r24
    1cfc:	2c f4       	brge	.+10     	; 0x1d08 <H_LED_Void_LedBlink+0xb8>
		__ticks = 1;
    1cfe:	81 e0       	ldi	r24, 0x01	; 1
    1d00:	90 e0       	ldi	r25, 0x00	; 0
    1d02:	98 ab       	std	Y+48, r25	; 0x30
    1d04:	8f a7       	std	Y+47, r24	; 0x2f
    1d06:	3f c0       	rjmp	.+126    	; 0x1d86 <H_LED_Void_LedBlink+0x136>
	else if (__tmp > 65535)
    1d08:	69 a9       	ldd	r22, Y+49	; 0x31
    1d0a:	7a a9       	ldd	r23, Y+50	; 0x32
    1d0c:	8b a9       	ldd	r24, Y+51	; 0x33
    1d0e:	9c a9       	ldd	r25, Y+52	; 0x34
    1d10:	20 e0       	ldi	r18, 0x00	; 0
    1d12:	3f ef       	ldi	r19, 0xFF	; 255
    1d14:	4f e7       	ldi	r20, 0x7F	; 127
    1d16:	57 e4       	ldi	r21, 0x47	; 71
    1d18:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d1c:	18 16       	cp	r1, r24
    1d1e:	4c f5       	brge	.+82     	; 0x1d72 <H_LED_Void_LedBlink+0x122>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d20:	6d a9       	ldd	r22, Y+53	; 0x35
    1d22:	7e a9       	ldd	r23, Y+54	; 0x36
    1d24:	8f a9       	ldd	r24, Y+55	; 0x37
    1d26:	98 ad       	ldd	r25, Y+56	; 0x38
    1d28:	20 e0       	ldi	r18, 0x00	; 0
    1d2a:	30 e0       	ldi	r19, 0x00	; 0
    1d2c:	40 e2       	ldi	r20, 0x20	; 32
    1d2e:	51 e4       	ldi	r21, 0x41	; 65
    1d30:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d34:	dc 01       	movw	r26, r24
    1d36:	cb 01       	movw	r24, r22
    1d38:	bc 01       	movw	r22, r24
    1d3a:	cd 01       	movw	r24, r26
    1d3c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d40:	dc 01       	movw	r26, r24
    1d42:	cb 01       	movw	r24, r22
    1d44:	98 ab       	std	Y+48, r25	; 0x30
    1d46:	8f a7       	std	Y+47, r24	; 0x2f
    1d48:	0f c0       	rjmp	.+30     	; 0x1d68 <H_LED_Void_LedBlink+0x118>
    1d4a:	89 e1       	ldi	r24, 0x19	; 25
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	9e a7       	std	Y+46, r25	; 0x2e
    1d50:	8d a7       	std	Y+45, r24	; 0x2d
    1d52:	8d a5       	ldd	r24, Y+45	; 0x2d
    1d54:	9e a5       	ldd	r25, Y+46	; 0x2e
    1d56:	01 97       	sbiw	r24, 0x01	; 1
    1d58:	f1 f7       	brne	.-4      	; 0x1d56 <H_LED_Void_LedBlink+0x106>
    1d5a:	9e a7       	std	Y+46, r25	; 0x2e
    1d5c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d5e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1d60:	98 a9       	ldd	r25, Y+48	; 0x30
    1d62:	01 97       	sbiw	r24, 0x01	; 1
    1d64:	98 ab       	std	Y+48, r25	; 0x30
    1d66:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d68:	8f a5       	ldd	r24, Y+47	; 0x2f
    1d6a:	98 a9       	ldd	r25, Y+48	; 0x30
    1d6c:	00 97       	sbiw	r24, 0x00	; 0
    1d6e:	69 f7       	brne	.-38     	; 0x1d4a <H_LED_Void_LedBlink+0xfa>
    1d70:	14 c0       	rjmp	.+40     	; 0x1d9a <H_LED_Void_LedBlink+0x14a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d72:	69 a9       	ldd	r22, Y+49	; 0x31
    1d74:	7a a9       	ldd	r23, Y+50	; 0x32
    1d76:	8b a9       	ldd	r24, Y+51	; 0x33
    1d78:	9c a9       	ldd	r25, Y+52	; 0x34
    1d7a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d7e:	dc 01       	movw	r26, r24
    1d80:	cb 01       	movw	r24, r22
    1d82:	98 ab       	std	Y+48, r25	; 0x30
    1d84:	8f a7       	std	Y+47, r24	; 0x2f
    1d86:	8f a5       	ldd	r24, Y+47	; 0x2f
    1d88:	98 a9       	ldd	r25, Y+48	; 0x30
    1d8a:	9c a7       	std	Y+44, r25	; 0x2c
    1d8c:	8b a7       	std	Y+43, r24	; 0x2b
    1d8e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1d90:	9c a5       	ldd	r25, Y+44	; 0x2c
    1d92:	01 97       	sbiw	r24, 0x01	; 1
    1d94:	f1 f7       	brne	.-4      	; 0x1d92 <H_LED_Void_LedBlink+0x142>
    1d96:	9c a7       	std	Y+44, r25	; 0x2c
    1d98:	8b a7       	std	Y+43, r24	; 0x2b
	 		_delay_ms(LED_DELAY_TIME);  //delay for 10000ms
	 		///******_Setting BLUE_LED Pin Value to LOW to Turn it OFF_***********///
	 		M_DIO_void_SetPinValue(BLUE_LED_PORT,BLUE_LED_PIN, LOW);
    1d9a:	83 e0       	ldi	r24, 0x03	; 3
    1d9c:	62 e0       	ldi	r22, 0x02	; 2
    1d9e:	40 e0       	ldi	r20, 0x00	; 0
    1da0:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1da4:	76 c1       	rjmp	.+748    	; 0x2092 <H_LED_Void_LedBlink+0x442>
	 	break;
	    ///******_ Blink  RED_LED Pin Value _******************///
		case RED_LED :
			///******_Setting RED_LED Pin Value to HIGH to Light it_***********///
			M_DIO_void_SetPinValue( RED_LED_PORT,RED_LED_PIN, HIGH);
    1da6:	83 e0       	ldi	r24, 0x03	; 3
    1da8:	60 e0       	ldi	r22, 0x00	; 0
    1daa:	41 e0       	ldi	r20, 0x01	; 1
    1dac:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1db0:	80 e0       	ldi	r24, 0x00	; 0
    1db2:	90 e5       	ldi	r25, 0x50	; 80
    1db4:	a3 ec       	ldi	r26, 0xC3	; 195
    1db6:	b7 e4       	ldi	r27, 0x47	; 71
    1db8:	8f a3       	std	Y+39, r24	; 0x27
    1dba:	98 a7       	std	Y+40, r25	; 0x28
    1dbc:	a9 a7       	std	Y+41, r26	; 0x29
    1dbe:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dc0:	6f a1       	ldd	r22, Y+39	; 0x27
    1dc2:	78 a5       	ldd	r23, Y+40	; 0x28
    1dc4:	89 a5       	ldd	r24, Y+41	; 0x29
    1dc6:	9a a5       	ldd	r25, Y+42	; 0x2a
    1dc8:	20 e0       	ldi	r18, 0x00	; 0
    1dca:	30 e0       	ldi	r19, 0x00	; 0
    1dcc:	4a e7       	ldi	r20, 0x7A	; 122
    1dce:	53 e4       	ldi	r21, 0x43	; 67
    1dd0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dd4:	dc 01       	movw	r26, r24
    1dd6:	cb 01       	movw	r24, r22
    1dd8:	8b a3       	std	Y+35, r24	; 0x23
    1dda:	9c a3       	std	Y+36, r25	; 0x24
    1ddc:	ad a3       	std	Y+37, r26	; 0x25
    1dde:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1de0:	6b a1       	ldd	r22, Y+35	; 0x23
    1de2:	7c a1       	ldd	r23, Y+36	; 0x24
    1de4:	8d a1       	ldd	r24, Y+37	; 0x25
    1de6:	9e a1       	ldd	r25, Y+38	; 0x26
    1de8:	20 e0       	ldi	r18, 0x00	; 0
    1dea:	30 e0       	ldi	r19, 0x00	; 0
    1dec:	40 e8       	ldi	r20, 0x80	; 128
    1dee:	5f e3       	ldi	r21, 0x3F	; 63
    1df0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1df4:	88 23       	and	r24, r24
    1df6:	2c f4       	brge	.+10     	; 0x1e02 <H_LED_Void_LedBlink+0x1b2>
		__ticks = 1;
    1df8:	81 e0       	ldi	r24, 0x01	; 1
    1dfa:	90 e0       	ldi	r25, 0x00	; 0
    1dfc:	9a a3       	std	Y+34, r25	; 0x22
    1dfe:	89 a3       	std	Y+33, r24	; 0x21
    1e00:	3f c0       	rjmp	.+126    	; 0x1e80 <H_LED_Void_LedBlink+0x230>
	else if (__tmp > 65535)
    1e02:	6b a1       	ldd	r22, Y+35	; 0x23
    1e04:	7c a1       	ldd	r23, Y+36	; 0x24
    1e06:	8d a1       	ldd	r24, Y+37	; 0x25
    1e08:	9e a1       	ldd	r25, Y+38	; 0x26
    1e0a:	20 e0       	ldi	r18, 0x00	; 0
    1e0c:	3f ef       	ldi	r19, 0xFF	; 255
    1e0e:	4f e7       	ldi	r20, 0x7F	; 127
    1e10:	57 e4       	ldi	r21, 0x47	; 71
    1e12:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e16:	18 16       	cp	r1, r24
    1e18:	4c f5       	brge	.+82     	; 0x1e6c <H_LED_Void_LedBlink+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e1a:	6f a1       	ldd	r22, Y+39	; 0x27
    1e1c:	78 a5       	ldd	r23, Y+40	; 0x28
    1e1e:	89 a5       	ldd	r24, Y+41	; 0x29
    1e20:	9a a5       	ldd	r25, Y+42	; 0x2a
    1e22:	20 e0       	ldi	r18, 0x00	; 0
    1e24:	30 e0       	ldi	r19, 0x00	; 0
    1e26:	40 e2       	ldi	r20, 0x20	; 32
    1e28:	51 e4       	ldi	r21, 0x41	; 65
    1e2a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e2e:	dc 01       	movw	r26, r24
    1e30:	cb 01       	movw	r24, r22
    1e32:	bc 01       	movw	r22, r24
    1e34:	cd 01       	movw	r24, r26
    1e36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e3a:	dc 01       	movw	r26, r24
    1e3c:	cb 01       	movw	r24, r22
    1e3e:	9a a3       	std	Y+34, r25	; 0x22
    1e40:	89 a3       	std	Y+33, r24	; 0x21
    1e42:	0f c0       	rjmp	.+30     	; 0x1e62 <H_LED_Void_LedBlink+0x212>
    1e44:	89 e1       	ldi	r24, 0x19	; 25
    1e46:	90 e0       	ldi	r25, 0x00	; 0
    1e48:	98 a3       	std	Y+32, r25	; 0x20
    1e4a:	8f 8f       	std	Y+31, r24	; 0x1f
    1e4c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1e4e:	98 a1       	ldd	r25, Y+32	; 0x20
    1e50:	01 97       	sbiw	r24, 0x01	; 1
    1e52:	f1 f7       	brne	.-4      	; 0x1e50 <H_LED_Void_LedBlink+0x200>
    1e54:	98 a3       	std	Y+32, r25	; 0x20
    1e56:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e58:	89 a1       	ldd	r24, Y+33	; 0x21
    1e5a:	9a a1       	ldd	r25, Y+34	; 0x22
    1e5c:	01 97       	sbiw	r24, 0x01	; 1
    1e5e:	9a a3       	std	Y+34, r25	; 0x22
    1e60:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e62:	89 a1       	ldd	r24, Y+33	; 0x21
    1e64:	9a a1       	ldd	r25, Y+34	; 0x22
    1e66:	00 97       	sbiw	r24, 0x00	; 0
    1e68:	69 f7       	brne	.-38     	; 0x1e44 <H_LED_Void_LedBlink+0x1f4>
    1e6a:	14 c0       	rjmp	.+40     	; 0x1e94 <H_LED_Void_LedBlink+0x244>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e6c:	6b a1       	ldd	r22, Y+35	; 0x23
    1e6e:	7c a1       	ldd	r23, Y+36	; 0x24
    1e70:	8d a1       	ldd	r24, Y+37	; 0x25
    1e72:	9e a1       	ldd	r25, Y+38	; 0x26
    1e74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e78:	dc 01       	movw	r26, r24
    1e7a:	cb 01       	movw	r24, r22
    1e7c:	9a a3       	std	Y+34, r25	; 0x22
    1e7e:	89 a3       	std	Y+33, r24	; 0x21
    1e80:	89 a1       	ldd	r24, Y+33	; 0x21
    1e82:	9a a1       	ldd	r25, Y+34	; 0x22
    1e84:	9e 8f       	std	Y+30, r25	; 0x1e
    1e86:	8d 8f       	std	Y+29, r24	; 0x1d
    1e88:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e8a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e8c:	01 97       	sbiw	r24, 0x01	; 1
    1e8e:	f1 f7       	brne	.-4      	; 0x1e8c <H_LED_Void_LedBlink+0x23c>
    1e90:	9e 8f       	std	Y+30, r25	; 0x1e
    1e92:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(LED_DELAY_TIME); //delay for 10000ms
			///******_Setting RED_LED Pin Value to LOW to Turn it OFF_***********///
			M_DIO_void_SetPinValue( RED_LED_PORT,RED_LED_PIN, LOW);
    1e94:	83 e0       	ldi	r24, 0x03	; 3
    1e96:	60 e0       	ldi	r22, 0x00	; 0
    1e98:	40 e0       	ldi	r20, 0x00	; 0
    1e9a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1e9e:	f9 c0       	rjmp	.+498    	; 0x2092 <H_LED_Void_LedBlink+0x442>
		break;
		///******_ Blink  GRN_LED Pin Value _******************///
     	case GRN_LED :
     		///******_Setting GRN_LED Pin Value to HIGH to Light it_***********///
     		M_DIO_void_SetPinValue(GRN_LED_PORT,GRN_LED_PIN, HIGH);
    1ea0:	83 e0       	ldi	r24, 0x03	; 3
    1ea2:	61 e0       	ldi	r22, 0x01	; 1
    1ea4:	41 e0       	ldi	r20, 0x01	; 1
    1ea6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1eaa:	80 e0       	ldi	r24, 0x00	; 0
    1eac:	90 e5       	ldi	r25, 0x50	; 80
    1eae:	a3 ec       	ldi	r26, 0xC3	; 195
    1eb0:	b7 e4       	ldi	r27, 0x47	; 71
    1eb2:	89 8f       	std	Y+25, r24	; 0x19
    1eb4:	9a 8f       	std	Y+26, r25	; 0x1a
    1eb6:	ab 8f       	std	Y+27, r26	; 0x1b
    1eb8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1eba:	69 8d       	ldd	r22, Y+25	; 0x19
    1ebc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ebe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ec0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ec2:	20 e0       	ldi	r18, 0x00	; 0
    1ec4:	30 e0       	ldi	r19, 0x00	; 0
    1ec6:	4a e7       	ldi	r20, 0x7A	; 122
    1ec8:	53 e4       	ldi	r21, 0x43	; 67
    1eca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ece:	dc 01       	movw	r26, r24
    1ed0:	cb 01       	movw	r24, r22
    1ed2:	8d 8b       	std	Y+21, r24	; 0x15
    1ed4:	9e 8b       	std	Y+22, r25	; 0x16
    1ed6:	af 8b       	std	Y+23, r26	; 0x17
    1ed8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1eda:	6d 89       	ldd	r22, Y+21	; 0x15
    1edc:	7e 89       	ldd	r23, Y+22	; 0x16
    1ede:	8f 89       	ldd	r24, Y+23	; 0x17
    1ee0:	98 8d       	ldd	r25, Y+24	; 0x18
    1ee2:	20 e0       	ldi	r18, 0x00	; 0
    1ee4:	30 e0       	ldi	r19, 0x00	; 0
    1ee6:	40 e8       	ldi	r20, 0x80	; 128
    1ee8:	5f e3       	ldi	r21, 0x3F	; 63
    1eea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1eee:	88 23       	and	r24, r24
    1ef0:	2c f4       	brge	.+10     	; 0x1efc <H_LED_Void_LedBlink+0x2ac>
		__ticks = 1;
    1ef2:	81 e0       	ldi	r24, 0x01	; 1
    1ef4:	90 e0       	ldi	r25, 0x00	; 0
    1ef6:	9c 8b       	std	Y+20, r25	; 0x14
    1ef8:	8b 8b       	std	Y+19, r24	; 0x13
    1efa:	3f c0       	rjmp	.+126    	; 0x1f7a <H_LED_Void_LedBlink+0x32a>
	else if (__tmp > 65535)
    1efc:	6d 89       	ldd	r22, Y+21	; 0x15
    1efe:	7e 89       	ldd	r23, Y+22	; 0x16
    1f00:	8f 89       	ldd	r24, Y+23	; 0x17
    1f02:	98 8d       	ldd	r25, Y+24	; 0x18
    1f04:	20 e0       	ldi	r18, 0x00	; 0
    1f06:	3f ef       	ldi	r19, 0xFF	; 255
    1f08:	4f e7       	ldi	r20, 0x7F	; 127
    1f0a:	57 e4       	ldi	r21, 0x47	; 71
    1f0c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f10:	18 16       	cp	r1, r24
    1f12:	4c f5       	brge	.+82     	; 0x1f66 <H_LED_Void_LedBlink+0x316>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f14:	69 8d       	ldd	r22, Y+25	; 0x19
    1f16:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f18:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f1a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1f1c:	20 e0       	ldi	r18, 0x00	; 0
    1f1e:	30 e0       	ldi	r19, 0x00	; 0
    1f20:	40 e2       	ldi	r20, 0x20	; 32
    1f22:	51 e4       	ldi	r21, 0x41	; 65
    1f24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f28:	dc 01       	movw	r26, r24
    1f2a:	cb 01       	movw	r24, r22
    1f2c:	bc 01       	movw	r22, r24
    1f2e:	cd 01       	movw	r24, r26
    1f30:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f34:	dc 01       	movw	r26, r24
    1f36:	cb 01       	movw	r24, r22
    1f38:	9c 8b       	std	Y+20, r25	; 0x14
    1f3a:	8b 8b       	std	Y+19, r24	; 0x13
    1f3c:	0f c0       	rjmp	.+30     	; 0x1f5c <H_LED_Void_LedBlink+0x30c>
    1f3e:	89 e1       	ldi	r24, 0x19	; 25
    1f40:	90 e0       	ldi	r25, 0x00	; 0
    1f42:	9a 8b       	std	Y+18, r25	; 0x12
    1f44:	89 8b       	std	Y+17, r24	; 0x11
    1f46:	89 89       	ldd	r24, Y+17	; 0x11
    1f48:	9a 89       	ldd	r25, Y+18	; 0x12
    1f4a:	01 97       	sbiw	r24, 0x01	; 1
    1f4c:	f1 f7       	brne	.-4      	; 0x1f4a <H_LED_Void_LedBlink+0x2fa>
    1f4e:	9a 8b       	std	Y+18, r25	; 0x12
    1f50:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f52:	8b 89       	ldd	r24, Y+19	; 0x13
    1f54:	9c 89       	ldd	r25, Y+20	; 0x14
    1f56:	01 97       	sbiw	r24, 0x01	; 1
    1f58:	9c 8b       	std	Y+20, r25	; 0x14
    1f5a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f5c:	8b 89       	ldd	r24, Y+19	; 0x13
    1f5e:	9c 89       	ldd	r25, Y+20	; 0x14
    1f60:	00 97       	sbiw	r24, 0x00	; 0
    1f62:	69 f7       	brne	.-38     	; 0x1f3e <H_LED_Void_LedBlink+0x2ee>
    1f64:	14 c0       	rjmp	.+40     	; 0x1f8e <H_LED_Void_LedBlink+0x33e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f66:	6d 89       	ldd	r22, Y+21	; 0x15
    1f68:	7e 89       	ldd	r23, Y+22	; 0x16
    1f6a:	8f 89       	ldd	r24, Y+23	; 0x17
    1f6c:	98 8d       	ldd	r25, Y+24	; 0x18
    1f6e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f72:	dc 01       	movw	r26, r24
    1f74:	cb 01       	movw	r24, r22
    1f76:	9c 8b       	std	Y+20, r25	; 0x14
    1f78:	8b 8b       	std	Y+19, r24	; 0x13
    1f7a:	8b 89       	ldd	r24, Y+19	; 0x13
    1f7c:	9c 89       	ldd	r25, Y+20	; 0x14
    1f7e:	98 8b       	std	Y+16, r25	; 0x10
    1f80:	8f 87       	std	Y+15, r24	; 0x0f
    1f82:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f84:	98 89       	ldd	r25, Y+16	; 0x10
    1f86:	01 97       	sbiw	r24, 0x01	; 1
    1f88:	f1 f7       	brne	.-4      	; 0x1f86 <H_LED_Void_LedBlink+0x336>
    1f8a:	98 8b       	std	Y+16, r25	; 0x10
    1f8c:	8f 87       	std	Y+15, r24	; 0x0f
     		_delay_ms(LED_DELAY_TIME);  //delay for 10000ms
     		///******_Setting GRN_LED Pin Value to LOW to Turn it OFF_***********///
     		M_DIO_void_SetPinValue(GRN_LED_PORT,GRN_LED_PIN, LOW);
    1f8e:	83 e0       	ldi	r24, 0x03	; 3
    1f90:	61 e0       	ldi	r22, 0x01	; 1
    1f92:	40 e0       	ldi	r20, 0x00	; 0
    1f94:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1f98:	7c c0       	rjmp	.+248    	; 0x2092 <H_LED_Void_LedBlink+0x442>
     	break;

     	///******_ Blink  YELLOW_LED Pin Value _******************///
     	case YELLOW_LED :
		///******_Setting YELLOW_LED Pin Value to HIGH to Light it_***********///
     		M_DIO_void_SetPinValue(YELLOW_LED_PORT,YELLOW_LED_PIN, HIGH);
    1f9a:	83 e0       	ldi	r24, 0x03	; 3
    1f9c:	63 e0       	ldi	r22, 0x03	; 3
    1f9e:	41 e0       	ldi	r20, 0x01	; 1
    1fa0:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
    1fa4:	80 e0       	ldi	r24, 0x00	; 0
    1fa6:	90 e5       	ldi	r25, 0x50	; 80
    1fa8:	a3 ec       	ldi	r26, 0xC3	; 195
    1faa:	b7 e4       	ldi	r27, 0x47	; 71
    1fac:	8b 87       	std	Y+11, r24	; 0x0b
    1fae:	9c 87       	std	Y+12, r25	; 0x0c
    1fb0:	ad 87       	std	Y+13, r26	; 0x0d
    1fb2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fb4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fb6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fb8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fba:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fbc:	20 e0       	ldi	r18, 0x00	; 0
    1fbe:	30 e0       	ldi	r19, 0x00	; 0
    1fc0:	4a e7       	ldi	r20, 0x7A	; 122
    1fc2:	53 e4       	ldi	r21, 0x43	; 67
    1fc4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fc8:	dc 01       	movw	r26, r24
    1fca:	cb 01       	movw	r24, r22
    1fcc:	8f 83       	std	Y+7, r24	; 0x07
    1fce:	98 87       	std	Y+8, r25	; 0x08
    1fd0:	a9 87       	std	Y+9, r26	; 0x09
    1fd2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1fd4:	6f 81       	ldd	r22, Y+7	; 0x07
    1fd6:	78 85       	ldd	r23, Y+8	; 0x08
    1fd8:	89 85       	ldd	r24, Y+9	; 0x09
    1fda:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fdc:	20 e0       	ldi	r18, 0x00	; 0
    1fde:	30 e0       	ldi	r19, 0x00	; 0
    1fe0:	40 e8       	ldi	r20, 0x80	; 128
    1fe2:	5f e3       	ldi	r21, 0x3F	; 63
    1fe4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fe8:	88 23       	and	r24, r24
    1fea:	2c f4       	brge	.+10     	; 0x1ff6 <H_LED_Void_LedBlink+0x3a6>
		__ticks = 1;
    1fec:	81 e0       	ldi	r24, 0x01	; 1
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	9e 83       	std	Y+6, r25	; 0x06
    1ff2:	8d 83       	std	Y+5, r24	; 0x05
    1ff4:	3f c0       	rjmp	.+126    	; 0x2074 <H_LED_Void_LedBlink+0x424>
	else if (__tmp > 65535)
    1ff6:	6f 81       	ldd	r22, Y+7	; 0x07
    1ff8:	78 85       	ldd	r23, Y+8	; 0x08
    1ffa:	89 85       	ldd	r24, Y+9	; 0x09
    1ffc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ffe:	20 e0       	ldi	r18, 0x00	; 0
    2000:	3f ef       	ldi	r19, 0xFF	; 255
    2002:	4f e7       	ldi	r20, 0x7F	; 127
    2004:	57 e4       	ldi	r21, 0x47	; 71
    2006:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    200a:	18 16       	cp	r1, r24
    200c:	4c f5       	brge	.+82     	; 0x2060 <H_LED_Void_LedBlink+0x410>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    200e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2010:	7c 85       	ldd	r23, Y+12	; 0x0c
    2012:	8d 85       	ldd	r24, Y+13	; 0x0d
    2014:	9e 85       	ldd	r25, Y+14	; 0x0e
    2016:	20 e0       	ldi	r18, 0x00	; 0
    2018:	30 e0       	ldi	r19, 0x00	; 0
    201a:	40 e2       	ldi	r20, 0x20	; 32
    201c:	51 e4       	ldi	r21, 0x41	; 65
    201e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2022:	dc 01       	movw	r26, r24
    2024:	cb 01       	movw	r24, r22
    2026:	bc 01       	movw	r22, r24
    2028:	cd 01       	movw	r24, r26
    202a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    202e:	dc 01       	movw	r26, r24
    2030:	cb 01       	movw	r24, r22
    2032:	9e 83       	std	Y+6, r25	; 0x06
    2034:	8d 83       	std	Y+5, r24	; 0x05
    2036:	0f c0       	rjmp	.+30     	; 0x2056 <H_LED_Void_LedBlink+0x406>
    2038:	89 e1       	ldi	r24, 0x19	; 25
    203a:	90 e0       	ldi	r25, 0x00	; 0
    203c:	9c 83       	std	Y+4, r25	; 0x04
    203e:	8b 83       	std	Y+3, r24	; 0x03
    2040:	8b 81       	ldd	r24, Y+3	; 0x03
    2042:	9c 81       	ldd	r25, Y+4	; 0x04
    2044:	01 97       	sbiw	r24, 0x01	; 1
    2046:	f1 f7       	brne	.-4      	; 0x2044 <H_LED_Void_LedBlink+0x3f4>
    2048:	9c 83       	std	Y+4, r25	; 0x04
    204a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    204c:	8d 81       	ldd	r24, Y+5	; 0x05
    204e:	9e 81       	ldd	r25, Y+6	; 0x06
    2050:	01 97       	sbiw	r24, 0x01	; 1
    2052:	9e 83       	std	Y+6, r25	; 0x06
    2054:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2056:	8d 81       	ldd	r24, Y+5	; 0x05
    2058:	9e 81       	ldd	r25, Y+6	; 0x06
    205a:	00 97       	sbiw	r24, 0x00	; 0
    205c:	69 f7       	brne	.-38     	; 0x2038 <H_LED_Void_LedBlink+0x3e8>
    205e:	14 c0       	rjmp	.+40     	; 0x2088 <H_LED_Void_LedBlink+0x438>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2060:	6f 81       	ldd	r22, Y+7	; 0x07
    2062:	78 85       	ldd	r23, Y+8	; 0x08
    2064:	89 85       	ldd	r24, Y+9	; 0x09
    2066:	9a 85       	ldd	r25, Y+10	; 0x0a
    2068:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    206c:	dc 01       	movw	r26, r24
    206e:	cb 01       	movw	r24, r22
    2070:	9e 83       	std	Y+6, r25	; 0x06
    2072:	8d 83       	std	Y+5, r24	; 0x05
    2074:	8d 81       	ldd	r24, Y+5	; 0x05
    2076:	9e 81       	ldd	r25, Y+6	; 0x06
    2078:	9a 83       	std	Y+2, r25	; 0x02
    207a:	89 83       	std	Y+1, r24	; 0x01
    207c:	89 81       	ldd	r24, Y+1	; 0x01
    207e:	9a 81       	ldd	r25, Y+2	; 0x02
    2080:	01 97       	sbiw	r24, 0x01	; 1
    2082:	f1 f7       	brne	.-4      	; 0x2080 <H_LED_Void_LedBlink+0x430>
    2084:	9a 83       	std	Y+2, r25	; 0x02
    2086:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(LED_DELAY_TIME);  //delay for 10000ms
		///******_Setting YELLOW_LED Pin Value to LOW to Turn it OFF_***********///
		    M_DIO_void_SetPinValue(YELLOW_LED_PORT,YELLOW_LED_PIN, LOW);
    2088:	83 e0       	ldi	r24, 0x03	; 3
    208a:	63 e0       	ldi	r22, 0x03	; 3
    208c:	40 e0       	ldi	r20, 0x00	; 0
    208e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <M_DIO_void_SetPinValue>
		break;


		default :   /*****error*****/    break;

}    	}
    2092:	eb 96       	adiw	r28, 0x3b	; 59
    2094:	0f b6       	in	r0, 0x3f	; 63
    2096:	f8 94       	cli
    2098:	de bf       	out	0x3e, r29	; 62
    209a:	0f be       	out	0x3f, r0	; 63
    209c:	cd bf       	out	0x3d, r28	; 61
    209e:	cf 91       	pop	r28
    20a0:	df 91       	pop	r29
    20a2:	08 95       	ret

000020a4 <main>:
 */
#include "main.h"      ///*** this is a header file to contain all includes of Application


int main ()
{
    20a4:	df 93       	push	r29
    20a6:	cf 93       	push	r28
    20a8:	cd b7       	in	r28, 0x3d	; 61
    20aa:	de b7       	in	r29, 0x3e	; 62
    20ac:	aa 97       	sbiw	r28, 0x2a	; 42
    20ae:	0f b6       	in	r0, 0x3f	; 63
    20b0:	f8 94       	cli
    20b2:	de bf       	out	0x3e, r29	; 62
    20b4:	0f be       	out	0x3f, r0	; 63
    20b6:	cd bf       	out	0x3d, r28	; 61
	///******************** Application of traffic lights************************/////

////****_Calling H_LED_Void_LedInit to set 3 LEDs  pins direction _****///
	H_LED_Void_LedInit(YELLOW_LED);
    20b8:	84 e0       	ldi	r24, 0x04	; 4
    20ba:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <H_LED_Void_LedInit>
    H_LED_Void_LedInit(RED_LED);
    20be:	81 e0       	ldi	r24, 0x01	; 1
    20c0:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <H_LED_Void_LedInit>
    H_LED_Void_LedInit(GRN_LED);
    20c4:	83 e0       	ldi	r24, 0x03	; 3
    20c6:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <H_LED_Void_LedInit>

////****_Calling H_SSD_Void_SsdInt to set SSD  pins direction _****///
     H_SSD_Void_SsdInt();
    20ca:	0e 94 2d 08 	call	0x105a	; 0x105a <H_SSD_Void_SsdInt>

	while(1)
	{
///****************************_ To light the RED_LED _*********************************//
////_Calling H_SSD_Void_SsdDisplayCountDown to  count down the number of seconds _****///
		H_SSD_Void_SsdDisplayCountDown(30);
    20ce:	8e e1       	ldi	r24, 0x1E	; 30
    20d0:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <H_SSD_Void_SsdDisplayCountDown>
    20d4:	80 e0       	ldi	r24, 0x00	; 0
    20d6:	90 e0       	ldi	r25, 0x00	; 0
    20d8:	a8 ec       	ldi	r26, 0xC8	; 200
    20da:	b2 e4       	ldi	r27, 0x42	; 66
    20dc:	8f a3       	std	Y+39, r24	; 0x27
    20de:	98 a7       	std	Y+40, r25	; 0x28
    20e0:	a9 a7       	std	Y+41, r26	; 0x29
    20e2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20e4:	6f a1       	ldd	r22, Y+39	; 0x27
    20e6:	78 a5       	ldd	r23, Y+40	; 0x28
    20e8:	89 a5       	ldd	r24, Y+41	; 0x29
    20ea:	9a a5       	ldd	r25, Y+42	; 0x2a
    20ec:	20 e0       	ldi	r18, 0x00	; 0
    20ee:	30 e0       	ldi	r19, 0x00	; 0
    20f0:	4a e7       	ldi	r20, 0x7A	; 122
    20f2:	53 e4       	ldi	r21, 0x43	; 67
    20f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20f8:	dc 01       	movw	r26, r24
    20fa:	cb 01       	movw	r24, r22
    20fc:	8b a3       	std	Y+35, r24	; 0x23
    20fe:	9c a3       	std	Y+36, r25	; 0x24
    2100:	ad a3       	std	Y+37, r26	; 0x25
    2102:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2104:	6b a1       	ldd	r22, Y+35	; 0x23
    2106:	7c a1       	ldd	r23, Y+36	; 0x24
    2108:	8d a1       	ldd	r24, Y+37	; 0x25
    210a:	9e a1       	ldd	r25, Y+38	; 0x26
    210c:	20 e0       	ldi	r18, 0x00	; 0
    210e:	30 e0       	ldi	r19, 0x00	; 0
    2110:	40 e8       	ldi	r20, 0x80	; 128
    2112:	5f e3       	ldi	r21, 0x3F	; 63
    2114:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2118:	88 23       	and	r24, r24
    211a:	2c f4       	brge	.+10     	; 0x2126 <main+0x82>
		__ticks = 1;
    211c:	81 e0       	ldi	r24, 0x01	; 1
    211e:	90 e0       	ldi	r25, 0x00	; 0
    2120:	9a a3       	std	Y+34, r25	; 0x22
    2122:	89 a3       	std	Y+33, r24	; 0x21
    2124:	3f c0       	rjmp	.+126    	; 0x21a4 <main+0x100>
	else if (__tmp > 65535)
    2126:	6b a1       	ldd	r22, Y+35	; 0x23
    2128:	7c a1       	ldd	r23, Y+36	; 0x24
    212a:	8d a1       	ldd	r24, Y+37	; 0x25
    212c:	9e a1       	ldd	r25, Y+38	; 0x26
    212e:	20 e0       	ldi	r18, 0x00	; 0
    2130:	3f ef       	ldi	r19, 0xFF	; 255
    2132:	4f e7       	ldi	r20, 0x7F	; 127
    2134:	57 e4       	ldi	r21, 0x47	; 71
    2136:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    213a:	18 16       	cp	r1, r24
    213c:	4c f5       	brge	.+82     	; 0x2190 <main+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    213e:	6f a1       	ldd	r22, Y+39	; 0x27
    2140:	78 a5       	ldd	r23, Y+40	; 0x28
    2142:	89 a5       	ldd	r24, Y+41	; 0x29
    2144:	9a a5       	ldd	r25, Y+42	; 0x2a
    2146:	20 e0       	ldi	r18, 0x00	; 0
    2148:	30 e0       	ldi	r19, 0x00	; 0
    214a:	40 e2       	ldi	r20, 0x20	; 32
    214c:	51 e4       	ldi	r21, 0x41	; 65
    214e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2152:	dc 01       	movw	r26, r24
    2154:	cb 01       	movw	r24, r22
    2156:	bc 01       	movw	r22, r24
    2158:	cd 01       	movw	r24, r26
    215a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    215e:	dc 01       	movw	r26, r24
    2160:	cb 01       	movw	r24, r22
    2162:	9a a3       	std	Y+34, r25	; 0x22
    2164:	89 a3       	std	Y+33, r24	; 0x21
    2166:	0f c0       	rjmp	.+30     	; 0x2186 <main+0xe2>
    2168:	89 e1       	ldi	r24, 0x19	; 25
    216a:	90 e0       	ldi	r25, 0x00	; 0
    216c:	98 a3       	std	Y+32, r25	; 0x20
    216e:	8f 8f       	std	Y+31, r24	; 0x1f
    2170:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2172:	98 a1       	ldd	r25, Y+32	; 0x20
    2174:	01 97       	sbiw	r24, 0x01	; 1
    2176:	f1 f7       	brne	.-4      	; 0x2174 <main+0xd0>
    2178:	98 a3       	std	Y+32, r25	; 0x20
    217a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    217c:	89 a1       	ldd	r24, Y+33	; 0x21
    217e:	9a a1       	ldd	r25, Y+34	; 0x22
    2180:	01 97       	sbiw	r24, 0x01	; 1
    2182:	9a a3       	std	Y+34, r25	; 0x22
    2184:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2186:	89 a1       	ldd	r24, Y+33	; 0x21
    2188:	9a a1       	ldd	r25, Y+34	; 0x22
    218a:	00 97       	sbiw	r24, 0x00	; 0
    218c:	69 f7       	brne	.-38     	; 0x2168 <main+0xc4>
    218e:	14 c0       	rjmp	.+40     	; 0x21b8 <main+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2190:	6b a1       	ldd	r22, Y+35	; 0x23
    2192:	7c a1       	ldd	r23, Y+36	; 0x24
    2194:	8d a1       	ldd	r24, Y+37	; 0x25
    2196:	9e a1       	ldd	r25, Y+38	; 0x26
    2198:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    219c:	dc 01       	movw	r26, r24
    219e:	cb 01       	movw	r24, r22
    21a0:	9a a3       	std	Y+34, r25	; 0x22
    21a2:	89 a3       	std	Y+33, r24	; 0x21
    21a4:	89 a1       	ldd	r24, Y+33	; 0x21
    21a6:	9a a1       	ldd	r25, Y+34	; 0x22
    21a8:	9e 8f       	std	Y+30, r25	; 0x1e
    21aa:	8d 8f       	std	Y+29, r24	; 0x1d
    21ac:	8d 8d       	ldd	r24, Y+29	; 0x1d
    21ae:	9e 8d       	ldd	r25, Y+30	; 0x1e
    21b0:	01 97       	sbiw	r24, 0x01	; 1
    21b2:	f1 f7       	brne	.-4      	; 0x21b0 <main+0x10c>
    21b4:	9e 8f       	std	Y+30, r25	; 0x1e
    21b6:	8d 8f       	std	Y+29, r24	; 0x1d
		  _delay_ms(100);
////****_Calling H_LED_Void_LedOff to set GRN_LED  pin value to TurnOff the lED _****///
		H_LED_Void_LedOff(GRN_LED);
    21b8:	83 e0       	ldi	r24, 0x03	; 3
    21ba:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <H_LED_Void_LedOff>
////****_Calling H_LED_Void_LedOn to set RED_LED  pin value to light the lED _****///
		H_LED_Void_LedOn(RED_LED);
    21be:	81 e0       	ldi	r24, 0x01	; 1
    21c0:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <H_LED_Void_LedOn>



///****************************_ To light the YELLOW_LED _*********************************//
////_Calling H_SSD_Void_SsdDisplayCountDown to  count down the number of seconds _****///
		H_SSD_Void_SsdDisplayCountDown(30);
    21c4:	8e e1       	ldi	r24, 0x1E	; 30
    21c6:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <H_SSD_Void_SsdDisplayCountDown>
    21ca:	80 e0       	ldi	r24, 0x00	; 0
    21cc:	90 e0       	ldi	r25, 0x00	; 0
    21ce:	a8 ec       	ldi	r26, 0xC8	; 200
    21d0:	b2 e4       	ldi	r27, 0x42	; 66
    21d2:	89 8f       	std	Y+25, r24	; 0x19
    21d4:	9a 8f       	std	Y+26, r25	; 0x1a
    21d6:	ab 8f       	std	Y+27, r26	; 0x1b
    21d8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21da:	69 8d       	ldd	r22, Y+25	; 0x19
    21dc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    21de:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21e0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21e2:	20 e0       	ldi	r18, 0x00	; 0
    21e4:	30 e0       	ldi	r19, 0x00	; 0
    21e6:	4a e7       	ldi	r20, 0x7A	; 122
    21e8:	53 e4       	ldi	r21, 0x43	; 67
    21ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21ee:	dc 01       	movw	r26, r24
    21f0:	cb 01       	movw	r24, r22
    21f2:	8d 8b       	std	Y+21, r24	; 0x15
    21f4:	9e 8b       	std	Y+22, r25	; 0x16
    21f6:	af 8b       	std	Y+23, r26	; 0x17
    21f8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    21fa:	6d 89       	ldd	r22, Y+21	; 0x15
    21fc:	7e 89       	ldd	r23, Y+22	; 0x16
    21fe:	8f 89       	ldd	r24, Y+23	; 0x17
    2200:	98 8d       	ldd	r25, Y+24	; 0x18
    2202:	20 e0       	ldi	r18, 0x00	; 0
    2204:	30 e0       	ldi	r19, 0x00	; 0
    2206:	40 e8       	ldi	r20, 0x80	; 128
    2208:	5f e3       	ldi	r21, 0x3F	; 63
    220a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    220e:	88 23       	and	r24, r24
    2210:	2c f4       	brge	.+10     	; 0x221c <main+0x178>
		__ticks = 1;
    2212:	81 e0       	ldi	r24, 0x01	; 1
    2214:	90 e0       	ldi	r25, 0x00	; 0
    2216:	9c 8b       	std	Y+20, r25	; 0x14
    2218:	8b 8b       	std	Y+19, r24	; 0x13
    221a:	3f c0       	rjmp	.+126    	; 0x229a <main+0x1f6>
	else if (__tmp > 65535)
    221c:	6d 89       	ldd	r22, Y+21	; 0x15
    221e:	7e 89       	ldd	r23, Y+22	; 0x16
    2220:	8f 89       	ldd	r24, Y+23	; 0x17
    2222:	98 8d       	ldd	r25, Y+24	; 0x18
    2224:	20 e0       	ldi	r18, 0x00	; 0
    2226:	3f ef       	ldi	r19, 0xFF	; 255
    2228:	4f e7       	ldi	r20, 0x7F	; 127
    222a:	57 e4       	ldi	r21, 0x47	; 71
    222c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2230:	18 16       	cp	r1, r24
    2232:	4c f5       	brge	.+82     	; 0x2286 <main+0x1e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2234:	69 8d       	ldd	r22, Y+25	; 0x19
    2236:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2238:	8b 8d       	ldd	r24, Y+27	; 0x1b
    223a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    223c:	20 e0       	ldi	r18, 0x00	; 0
    223e:	30 e0       	ldi	r19, 0x00	; 0
    2240:	40 e2       	ldi	r20, 0x20	; 32
    2242:	51 e4       	ldi	r21, 0x41	; 65
    2244:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2248:	dc 01       	movw	r26, r24
    224a:	cb 01       	movw	r24, r22
    224c:	bc 01       	movw	r22, r24
    224e:	cd 01       	movw	r24, r26
    2250:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2254:	dc 01       	movw	r26, r24
    2256:	cb 01       	movw	r24, r22
    2258:	9c 8b       	std	Y+20, r25	; 0x14
    225a:	8b 8b       	std	Y+19, r24	; 0x13
    225c:	0f c0       	rjmp	.+30     	; 0x227c <main+0x1d8>
    225e:	89 e1       	ldi	r24, 0x19	; 25
    2260:	90 e0       	ldi	r25, 0x00	; 0
    2262:	9a 8b       	std	Y+18, r25	; 0x12
    2264:	89 8b       	std	Y+17, r24	; 0x11
    2266:	89 89       	ldd	r24, Y+17	; 0x11
    2268:	9a 89       	ldd	r25, Y+18	; 0x12
    226a:	01 97       	sbiw	r24, 0x01	; 1
    226c:	f1 f7       	brne	.-4      	; 0x226a <main+0x1c6>
    226e:	9a 8b       	std	Y+18, r25	; 0x12
    2270:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2272:	8b 89       	ldd	r24, Y+19	; 0x13
    2274:	9c 89       	ldd	r25, Y+20	; 0x14
    2276:	01 97       	sbiw	r24, 0x01	; 1
    2278:	9c 8b       	std	Y+20, r25	; 0x14
    227a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    227c:	8b 89       	ldd	r24, Y+19	; 0x13
    227e:	9c 89       	ldd	r25, Y+20	; 0x14
    2280:	00 97       	sbiw	r24, 0x00	; 0
    2282:	69 f7       	brne	.-38     	; 0x225e <main+0x1ba>
    2284:	14 c0       	rjmp	.+40     	; 0x22ae <main+0x20a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2286:	6d 89       	ldd	r22, Y+21	; 0x15
    2288:	7e 89       	ldd	r23, Y+22	; 0x16
    228a:	8f 89       	ldd	r24, Y+23	; 0x17
    228c:	98 8d       	ldd	r25, Y+24	; 0x18
    228e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2292:	dc 01       	movw	r26, r24
    2294:	cb 01       	movw	r24, r22
    2296:	9c 8b       	std	Y+20, r25	; 0x14
    2298:	8b 8b       	std	Y+19, r24	; 0x13
    229a:	8b 89       	ldd	r24, Y+19	; 0x13
    229c:	9c 89       	ldd	r25, Y+20	; 0x14
    229e:	98 8b       	std	Y+16, r25	; 0x10
    22a0:	8f 87       	std	Y+15, r24	; 0x0f
    22a2:	8f 85       	ldd	r24, Y+15	; 0x0f
    22a4:	98 89       	ldd	r25, Y+16	; 0x10
    22a6:	01 97       	sbiw	r24, 0x01	; 1
    22a8:	f1 f7       	brne	.-4      	; 0x22a6 <main+0x202>
    22aa:	98 8b       	std	Y+16, r25	; 0x10
    22ac:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(100);
////****_Calling H_LED_Void_LedOff to set RED_LED  pin value to TurnOff the lED _****///
		H_LED_Void_LedOff(RED_LED);
    22ae:	81 e0       	ldi	r24, 0x01	; 1
    22b0:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <H_LED_Void_LedOff>
////****_Calling H_LED_Void_LedOn to set YELLOW_LED  pin value to light the lED _****///
		H_LED_Void_LedOn(YELLOW_LED);
    22b4:	84 e0       	ldi	r24, 0x04	; 4
    22b6:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <H_LED_Void_LedOn>


///****************************_ To light the GRN_LED _*********************************//
		H_SSD_Void_SsdDisplayCountDown(30);
    22ba:	8e e1       	ldi	r24, 0x1E	; 30
    22bc:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <H_SSD_Void_SsdDisplayCountDown>
    22c0:	80 e0       	ldi	r24, 0x00	; 0
    22c2:	90 e0       	ldi	r25, 0x00	; 0
    22c4:	a8 ec       	ldi	r26, 0xC8	; 200
    22c6:	b2 e4       	ldi	r27, 0x42	; 66
    22c8:	8b 87       	std	Y+11, r24	; 0x0b
    22ca:	9c 87       	std	Y+12, r25	; 0x0c
    22cc:	ad 87       	std	Y+13, r26	; 0x0d
    22ce:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22d0:	6b 85       	ldd	r22, Y+11	; 0x0b
    22d2:	7c 85       	ldd	r23, Y+12	; 0x0c
    22d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    22d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    22d8:	20 e0       	ldi	r18, 0x00	; 0
    22da:	30 e0       	ldi	r19, 0x00	; 0
    22dc:	4a e7       	ldi	r20, 0x7A	; 122
    22de:	53 e4       	ldi	r21, 0x43	; 67
    22e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22e4:	dc 01       	movw	r26, r24
    22e6:	cb 01       	movw	r24, r22
    22e8:	8f 83       	std	Y+7, r24	; 0x07
    22ea:	98 87       	std	Y+8, r25	; 0x08
    22ec:	a9 87       	std	Y+9, r26	; 0x09
    22ee:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    22f0:	6f 81       	ldd	r22, Y+7	; 0x07
    22f2:	78 85       	ldd	r23, Y+8	; 0x08
    22f4:	89 85       	ldd	r24, Y+9	; 0x09
    22f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    22f8:	20 e0       	ldi	r18, 0x00	; 0
    22fa:	30 e0       	ldi	r19, 0x00	; 0
    22fc:	40 e8       	ldi	r20, 0x80	; 128
    22fe:	5f e3       	ldi	r21, 0x3F	; 63
    2300:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2304:	88 23       	and	r24, r24
    2306:	2c f4       	brge	.+10     	; 0x2312 <main+0x26e>
		__ticks = 1;
    2308:	81 e0       	ldi	r24, 0x01	; 1
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	9e 83       	std	Y+6, r25	; 0x06
    230e:	8d 83       	std	Y+5, r24	; 0x05
    2310:	3f c0       	rjmp	.+126    	; 0x2390 <main+0x2ec>
	else if (__tmp > 65535)
    2312:	6f 81       	ldd	r22, Y+7	; 0x07
    2314:	78 85       	ldd	r23, Y+8	; 0x08
    2316:	89 85       	ldd	r24, Y+9	; 0x09
    2318:	9a 85       	ldd	r25, Y+10	; 0x0a
    231a:	20 e0       	ldi	r18, 0x00	; 0
    231c:	3f ef       	ldi	r19, 0xFF	; 255
    231e:	4f e7       	ldi	r20, 0x7F	; 127
    2320:	57 e4       	ldi	r21, 0x47	; 71
    2322:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2326:	18 16       	cp	r1, r24
    2328:	4c f5       	brge	.+82     	; 0x237c <main+0x2d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    232a:	6b 85       	ldd	r22, Y+11	; 0x0b
    232c:	7c 85       	ldd	r23, Y+12	; 0x0c
    232e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2330:	9e 85       	ldd	r25, Y+14	; 0x0e
    2332:	20 e0       	ldi	r18, 0x00	; 0
    2334:	30 e0       	ldi	r19, 0x00	; 0
    2336:	40 e2       	ldi	r20, 0x20	; 32
    2338:	51 e4       	ldi	r21, 0x41	; 65
    233a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    233e:	dc 01       	movw	r26, r24
    2340:	cb 01       	movw	r24, r22
    2342:	bc 01       	movw	r22, r24
    2344:	cd 01       	movw	r24, r26
    2346:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    234a:	dc 01       	movw	r26, r24
    234c:	cb 01       	movw	r24, r22
    234e:	9e 83       	std	Y+6, r25	; 0x06
    2350:	8d 83       	std	Y+5, r24	; 0x05
    2352:	0f c0       	rjmp	.+30     	; 0x2372 <main+0x2ce>
    2354:	89 e1       	ldi	r24, 0x19	; 25
    2356:	90 e0       	ldi	r25, 0x00	; 0
    2358:	9c 83       	std	Y+4, r25	; 0x04
    235a:	8b 83       	std	Y+3, r24	; 0x03
    235c:	8b 81       	ldd	r24, Y+3	; 0x03
    235e:	9c 81       	ldd	r25, Y+4	; 0x04
    2360:	01 97       	sbiw	r24, 0x01	; 1
    2362:	f1 f7       	brne	.-4      	; 0x2360 <main+0x2bc>
    2364:	9c 83       	std	Y+4, r25	; 0x04
    2366:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2368:	8d 81       	ldd	r24, Y+5	; 0x05
    236a:	9e 81       	ldd	r25, Y+6	; 0x06
    236c:	01 97       	sbiw	r24, 0x01	; 1
    236e:	9e 83       	std	Y+6, r25	; 0x06
    2370:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2372:	8d 81       	ldd	r24, Y+5	; 0x05
    2374:	9e 81       	ldd	r25, Y+6	; 0x06
    2376:	00 97       	sbiw	r24, 0x00	; 0
    2378:	69 f7       	brne	.-38     	; 0x2354 <main+0x2b0>
    237a:	14 c0       	rjmp	.+40     	; 0x23a4 <main+0x300>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    237c:	6f 81       	ldd	r22, Y+7	; 0x07
    237e:	78 85       	ldd	r23, Y+8	; 0x08
    2380:	89 85       	ldd	r24, Y+9	; 0x09
    2382:	9a 85       	ldd	r25, Y+10	; 0x0a
    2384:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2388:	dc 01       	movw	r26, r24
    238a:	cb 01       	movw	r24, r22
    238c:	9e 83       	std	Y+6, r25	; 0x06
    238e:	8d 83       	std	Y+5, r24	; 0x05
    2390:	8d 81       	ldd	r24, Y+5	; 0x05
    2392:	9e 81       	ldd	r25, Y+6	; 0x06
    2394:	9a 83       	std	Y+2, r25	; 0x02
    2396:	89 83       	std	Y+1, r24	; 0x01
    2398:	89 81       	ldd	r24, Y+1	; 0x01
    239a:	9a 81       	ldd	r25, Y+2	; 0x02
    239c:	01 97       	sbiw	r24, 0x01	; 1
    239e:	f1 f7       	brne	.-4      	; 0x239c <main+0x2f8>
    23a0:	9a 83       	std	Y+2, r25	; 0x02
    23a2:	89 83       	std	Y+1, r24	; 0x01
		 _delay_ms(100);
////****_Calling H_LED_Void_LedOff to set YELLOW_LED  pin value to TurnOff the lED _****///
		H_LED_Void_LedOff(YELLOW_LED);
    23a4:	84 e0       	ldi	r24, 0x04	; 4
    23a6:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <H_LED_Void_LedOff>
////****_Calling H_LED_Void_LedOn to set GRN_LED  pin value to light the lED _****///
		H_LED_Void_LedOn(GRN_LED);
    23aa:	83 e0       	ldi	r24, 0x03	; 3
    23ac:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <H_LED_Void_LedOn>
    23b0:	8e ce       	rjmp	.-740    	; 0x20ce <main+0x2a>

000023b2 <__udivmodqi4>:
    23b2:	99 1b       	sub	r25, r25
    23b4:	79 e0       	ldi	r23, 0x09	; 9
    23b6:	04 c0       	rjmp	.+8      	; 0x23c0 <__udivmodqi4_ep>

000023b8 <__udivmodqi4_loop>:
    23b8:	99 1f       	adc	r25, r25
    23ba:	96 17       	cp	r25, r22
    23bc:	08 f0       	brcs	.+2      	; 0x23c0 <__udivmodqi4_ep>
    23be:	96 1b       	sub	r25, r22

000023c0 <__udivmodqi4_ep>:
    23c0:	88 1f       	adc	r24, r24
    23c2:	7a 95       	dec	r23
    23c4:	c9 f7       	brne	.-14     	; 0x23b8 <__udivmodqi4_loop>
    23c6:	80 95       	com	r24
    23c8:	08 95       	ret

000023ca <__prologue_saves__>:
    23ca:	2f 92       	push	r2
    23cc:	3f 92       	push	r3
    23ce:	4f 92       	push	r4
    23d0:	5f 92       	push	r5
    23d2:	6f 92       	push	r6
    23d4:	7f 92       	push	r7
    23d6:	8f 92       	push	r8
    23d8:	9f 92       	push	r9
    23da:	af 92       	push	r10
    23dc:	bf 92       	push	r11
    23de:	cf 92       	push	r12
    23e0:	df 92       	push	r13
    23e2:	ef 92       	push	r14
    23e4:	ff 92       	push	r15
    23e6:	0f 93       	push	r16
    23e8:	1f 93       	push	r17
    23ea:	cf 93       	push	r28
    23ec:	df 93       	push	r29
    23ee:	cd b7       	in	r28, 0x3d	; 61
    23f0:	de b7       	in	r29, 0x3e	; 62
    23f2:	ca 1b       	sub	r28, r26
    23f4:	db 0b       	sbc	r29, r27
    23f6:	0f b6       	in	r0, 0x3f	; 63
    23f8:	f8 94       	cli
    23fa:	de bf       	out	0x3e, r29	; 62
    23fc:	0f be       	out	0x3f, r0	; 63
    23fe:	cd bf       	out	0x3d, r28	; 61
    2400:	09 94       	ijmp

00002402 <__epilogue_restores__>:
    2402:	2a 88       	ldd	r2, Y+18	; 0x12
    2404:	39 88       	ldd	r3, Y+17	; 0x11
    2406:	48 88       	ldd	r4, Y+16	; 0x10
    2408:	5f 84       	ldd	r5, Y+15	; 0x0f
    240a:	6e 84       	ldd	r6, Y+14	; 0x0e
    240c:	7d 84       	ldd	r7, Y+13	; 0x0d
    240e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2410:	9b 84       	ldd	r9, Y+11	; 0x0b
    2412:	aa 84       	ldd	r10, Y+10	; 0x0a
    2414:	b9 84       	ldd	r11, Y+9	; 0x09
    2416:	c8 84       	ldd	r12, Y+8	; 0x08
    2418:	df 80       	ldd	r13, Y+7	; 0x07
    241a:	ee 80       	ldd	r14, Y+6	; 0x06
    241c:	fd 80       	ldd	r15, Y+5	; 0x05
    241e:	0c 81       	ldd	r16, Y+4	; 0x04
    2420:	1b 81       	ldd	r17, Y+3	; 0x03
    2422:	aa 81       	ldd	r26, Y+2	; 0x02
    2424:	b9 81       	ldd	r27, Y+1	; 0x01
    2426:	ce 0f       	add	r28, r30
    2428:	d1 1d       	adc	r29, r1
    242a:	0f b6       	in	r0, 0x3f	; 63
    242c:	f8 94       	cli
    242e:	de bf       	out	0x3e, r29	; 62
    2430:	0f be       	out	0x3f, r0	; 63
    2432:	cd bf       	out	0x3d, r28	; 61
    2434:	ed 01       	movw	r28, r26
    2436:	08 95       	ret

00002438 <_exit>:
    2438:	f8 94       	cli

0000243a <__stop_program>:
    243a:	ff cf       	rjmp	.-2      	; 0x243a <__stop_program>
